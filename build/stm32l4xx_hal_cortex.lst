ARM GAS  /tmp/cccl8fOf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_cortex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NVIC_SetPriorityGrouping,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	NVIC_SetPriorityGrouping:
  25              	.LFB106:
  26              		.file 1 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/core_cm4.h **** 
   9:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/core_cm4.h ****    *
  21:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
ARM GAS  /tmp/cccl8fOf.s 			page 2


  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** 
  35:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:Drivers/CMSIS/Include/core_cm4.h **** #endif
  40:Drivers/CMSIS/Include/core_cm4.h **** 
  41:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  45:Drivers/CMSIS/Include/core_cm4.h **** 
  46:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  47:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  48:Drivers/CMSIS/Include/core_cm4.h **** #endif
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h **** /**
  51:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:Drivers/CMSIS/Include/core_cm4.h **** 
  57:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:Drivers/CMSIS/Include/core_cm4.h **** 
  60:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:Drivers/CMSIS/Include/core_cm4.h ****  */
  63:Drivers/CMSIS/Include/core_cm4.h **** 
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  66:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  67:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  68:Drivers/CMSIS/Include/core_cm4.h **** /**
  69:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  70:Drivers/CMSIS/Include/core_cm4.h ****   @{
  71:Drivers/CMSIS/Include/core_cm4.h ****  */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:Drivers/CMSIS/Include/core_cm4.h **** 
  81:Drivers/CMSIS/Include/core_cm4.h **** 
  82:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  83:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:Drivers/CMSIS/Include/core_cm4.h **** 
  87:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
ARM GAS  /tmp/cccl8fOf.s 			page 3


  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:Drivers/CMSIS/Include/core_cm4.h **** 
  92:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  93:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:Drivers/CMSIS/Include/core_cm4.h **** 
  97:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:Drivers/CMSIS/Include/core_cm4.h **** 
 102:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 103:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:Drivers/CMSIS/Include/core_cm4.h **** 
 106:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 107:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:Drivers/CMSIS/Include/core_cm4.h **** 
 111:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 112:Drivers/CMSIS/Include/core_cm4.h ****   #define __packed
 113:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:Drivers/CMSIS/Include/core_cm4.h **** 
 117:Drivers/CMSIS/Include/core_cm4.h **** #else
 118:Drivers/CMSIS/Include/core_cm4.h ****   #error Unknown compiler
 119:Drivers/CMSIS/Include/core_cm4.h **** #endif
 120:Drivers/CMSIS/Include/core_cm4.h **** 
 121:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:Drivers/CMSIS/Include/core_cm4.h **** */
 124:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /tmp/cccl8fOf.s 			page 4


 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 162:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 164:Drivers/CMSIS/Include/core_cm4.h ****     #else
 165:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 167:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 168:Drivers/CMSIS/Include/core_cm4.h ****   #else
 169:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 170:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 171:Drivers/CMSIS/Include/core_cm4.h **** 
 172:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 173:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 176:Drivers/CMSIS/Include/core_cm4.h ****     #else
 177:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 179:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 180:Drivers/CMSIS/Include/core_cm4.h ****   #else
 181:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 182:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 183:Drivers/CMSIS/Include/core_cm4.h **** 
 184:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 185:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 186:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 188:Drivers/CMSIS/Include/core_cm4.h ****     #else
 189:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 191:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 192:Drivers/CMSIS/Include/core_cm4.h ****   #else
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 194:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 195:Drivers/CMSIS/Include/core_cm4.h **** 
 196:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 197:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 200:Drivers/CMSIS/Include/core_cm4.h ****     #else
 201:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 203:Drivers/CMSIS/Include/core_cm4.h ****     #endif
ARM GAS  /tmp/cccl8fOf.s 			page 5


 204:Drivers/CMSIS/Include/core_cm4.h ****   #else
 205:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 206:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** #endif
 209:Drivers/CMSIS/Include/core_cm4.h **** 
 210:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:Drivers/CMSIS/Include/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:Drivers/CMSIS/Include/core_cm4.h **** 
 214:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 215:Drivers/CMSIS/Include/core_cm4.h **** }
 216:Drivers/CMSIS/Include/core_cm4.h **** #endif
 217:Drivers/CMSIS/Include/core_cm4.h **** 
 218:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:Drivers/CMSIS/Include/core_cm4.h **** 
 220:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:Drivers/CMSIS/Include/core_cm4.h **** 
 222:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:Drivers/CMSIS/Include/core_cm4.h **** 
 225:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 226:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 227:Drivers/CMSIS/Include/core_cm4.h **** #endif
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 230:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 232:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 235:Drivers/CMSIS/Include/core_cm4.h **** 
 236:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 240:Drivers/CMSIS/Include/core_cm4.h **** 
 241:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 245:Drivers/CMSIS/Include/core_cm4.h **** 
 246:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 250:Drivers/CMSIS/Include/core_cm4.h **** 
 251:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 255:Drivers/CMSIS/Include/core_cm4.h **** #endif
 256:Drivers/CMSIS/Include/core_cm4.h **** 
 257:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:Drivers/CMSIS/Include/core_cm4.h **** /**
 259:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 6


 261:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:Drivers/CMSIS/Include/core_cm4.h **** */
 265:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 266:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:Drivers/CMSIS/Include/core_cm4.h **** #else
 268:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:Drivers/CMSIS/Include/core_cm4.h **** #endif
 270:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:Drivers/CMSIS/Include/core_cm4.h **** 
 273:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 274:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:Drivers/CMSIS/Include/core_cm4.h **** 
 278:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:Drivers/CMSIS/Include/core_cm4.h **** 
 280:Drivers/CMSIS/Include/core_cm4.h **** 
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 283:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 284:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 285:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 286:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 287:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 288:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 289:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 290:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 291:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 292:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 293:Drivers/CMSIS/Include/core_cm4.h **** /**
 294:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:Drivers/CMSIS/Include/core_cm4.h **** */
 297:Drivers/CMSIS/Include/core_cm4.h **** 
 298:Drivers/CMSIS/Include/core_cm4.h **** /**
 299:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 302:Drivers/CMSIS/Include/core_cm4.h ****   @{
 303:Drivers/CMSIS/Include/core_cm4.h ****  */
 304:Drivers/CMSIS/Include/core_cm4.h **** 
 305:Drivers/CMSIS/Include/core_cm4.h **** /**
 306:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:Drivers/CMSIS/Include/core_cm4.h ****  */
 308:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 309:Drivers/CMSIS/Include/core_cm4.h **** {
 310:Drivers/CMSIS/Include/core_cm4.h ****   struct
 311:Drivers/CMSIS/Include/core_cm4.h ****   {
 312:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
ARM GAS  /tmp/cccl8fOf.s 			page 7


 318:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 323:Drivers/CMSIS/Include/core_cm4.h **** 
 324:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 325:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:Drivers/CMSIS/Include/core_cm4.h **** 
 328:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:Drivers/CMSIS/Include/core_cm4.h **** 
 331:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:Drivers/CMSIS/Include/core_cm4.h **** 
 334:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:Drivers/CMSIS/Include/core_cm4.h **** 
 337:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** 
 344:Drivers/CMSIS/Include/core_cm4.h **** /**
 345:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:Drivers/CMSIS/Include/core_cm4.h ****  */
 347:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 348:Drivers/CMSIS/Include/core_cm4.h **** {
 349:Drivers/CMSIS/Include/core_cm4.h ****   struct
 350:Drivers/CMSIS/Include/core_cm4.h ****   {
 351:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 356:Drivers/CMSIS/Include/core_cm4.h **** 
 357:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 358:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** 
 362:Drivers/CMSIS/Include/core_cm4.h **** /**
 363:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:Drivers/CMSIS/Include/core_cm4.h ****  */
 365:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 366:Drivers/CMSIS/Include/core_cm4.h **** {
 367:Drivers/CMSIS/Include/core_cm4.h ****   struct
 368:Drivers/CMSIS/Include/core_cm4.h ****   {
 369:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
ARM GAS  /tmp/cccl8fOf.s 			page 8


 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 383:Drivers/CMSIS/Include/core_cm4.h **** 
 384:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 385:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:Drivers/CMSIS/Include/core_cm4.h **** 
 388:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:Drivers/CMSIS/Include/core_cm4.h **** 
 391:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:Drivers/CMSIS/Include/core_cm4.h **** 
 394:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:Drivers/CMSIS/Include/core_cm4.h **** 
 397:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:Drivers/CMSIS/Include/core_cm4.h **** 
 400:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:Drivers/CMSIS/Include/core_cm4.h **** 
 406:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:Drivers/CMSIS/Include/core_cm4.h **** 
 409:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:Drivers/CMSIS/Include/core_cm4.h **** 
 412:Drivers/CMSIS/Include/core_cm4.h **** 
 413:Drivers/CMSIS/Include/core_cm4.h **** /**
 414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:Drivers/CMSIS/Include/core_cm4.h ****  */
 416:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 417:Drivers/CMSIS/Include/core_cm4.h **** {
 418:Drivers/CMSIS/Include/core_cm4.h ****   struct
 419:Drivers/CMSIS/Include/core_cm4.h ****   {
 420:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 427:Drivers/CMSIS/Include/core_cm4.h **** 
 428:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 429:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 9


 432:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:Drivers/CMSIS/Include/core_cm4.h **** 
 435:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:Drivers/CMSIS/Include/core_cm4.h **** 
 438:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** 
 441:Drivers/CMSIS/Include/core_cm4.h **** /**
 442:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:Drivers/CMSIS/Include/core_cm4.h ****   @{
 446:Drivers/CMSIS/Include/core_cm4.h ****  */
 447:Drivers/CMSIS/Include/core_cm4.h **** 
 448:Drivers/CMSIS/Include/core_cm4.h **** /**
 449:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:Drivers/CMSIS/Include/core_cm4.h ****  */
 451:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 452:Drivers/CMSIS/Include/core_cm4.h **** {
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 467:Drivers/CMSIS/Include/core_cm4.h **** 
 468:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:Drivers/CMSIS/Include/core_cm4.h **** 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** /**
 476:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:Drivers/CMSIS/Include/core_cm4.h ****   @{
 480:Drivers/CMSIS/Include/core_cm4.h ****  */
 481:Drivers/CMSIS/Include/core_cm4.h **** 
 482:Drivers/CMSIS/Include/core_cm4.h **** /**
 483:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:Drivers/CMSIS/Include/core_cm4.h ****  */
 485:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 486:Drivers/CMSIS/Include/core_cm4.h **** {
 487:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
ARM GAS  /tmp/cccl8fOf.s 			page 10


 489:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 509:Drivers/CMSIS/Include/core_cm4.h **** 
 510:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** 
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
ARM GAS  /tmp/cccl8fOf.s 			page 11


 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** 
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** 
 557:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** 
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** 
 593:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 12


 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** 
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** 
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:Drivers/CMSIS/Include/core_cm4.h **** 
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm4.h **** 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
ARM GAS  /tmp/cccl8fOf.s 			page 13


 660:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm4.h **** 
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm4.h **** 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm4.h **** 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:Drivers/CMSIS/Include/core_cm4.h **** 
 675:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** 
 679:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm4.h **** 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm4.h **** 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm4.h **** 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm4.h **** 
 691:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:Drivers/CMSIS/Include/core_cm4.h **** 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** /**
 695:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:Drivers/CMSIS/Include/core_cm4.h ****   @{
 699:Drivers/CMSIS/Include/core_cm4.h ****  */
 700:Drivers/CMSIS/Include/core_cm4.h **** 
 701:Drivers/CMSIS/Include/core_cm4.h **** /**
 702:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:Drivers/CMSIS/Include/core_cm4.h ****  */
 704:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 705:Drivers/CMSIS/Include/core_cm4.h **** {
 706:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:Drivers/CMSIS/Include/core_cm4.h **** 
 715:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
ARM GAS  /tmp/cccl8fOf.s 			page 14


 717:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:Drivers/CMSIS/Include/core_cm4.h **** 
 719:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:Drivers/CMSIS/Include/core_cm4.h **** 
 722:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:Drivers/CMSIS/Include/core_cm4.h **** 
 725:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:Drivers/CMSIS/Include/core_cm4.h **** 
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:Drivers/CMSIS/Include/core_cm4.h **** 
 731:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:Drivers/CMSIS/Include/core_cm4.h **** 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** /**
 735:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:Drivers/CMSIS/Include/core_cm4.h ****   @{
 739:Drivers/CMSIS/Include/core_cm4.h ****  */
 740:Drivers/CMSIS/Include/core_cm4.h **** 
 741:Drivers/CMSIS/Include/core_cm4.h **** /**
 742:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:Drivers/CMSIS/Include/core_cm4.h ****  */
 744:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 745:Drivers/CMSIS/Include/core_cm4.h **** {
 746:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 751:Drivers/CMSIS/Include/core_cm4.h **** 
 752:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:Drivers/CMSIS/Include/core_cm4.h **** 
 759:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:Drivers/CMSIS/Include/core_cm4.h **** 
 762:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:Drivers/CMSIS/Include/core_cm4.h **** 
 765:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:Drivers/CMSIS/Include/core_cm4.h **** 
 769:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 770:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** 
 773:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
ARM GAS  /tmp/cccl8fOf.s 			page 15


 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** 
 783:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:Drivers/CMSIS/Include/core_cm4.h **** 
 785:Drivers/CMSIS/Include/core_cm4.h **** 
 786:Drivers/CMSIS/Include/core_cm4.h **** /**
 787:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:Drivers/CMSIS/Include/core_cm4.h ****   @{
 791:Drivers/CMSIS/Include/core_cm4.h ****  */
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /**
 794:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:Drivers/CMSIS/Include/core_cm4.h ****  */
 796:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 797:Drivers/CMSIS/Include/core_cm4.h **** {
 798:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 799:Drivers/CMSIS/Include/core_cm4.h ****   {
 800:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
ARM GAS  /tmp/cccl8fOf.s 			page 16


 831:Drivers/CMSIS/Include/core_cm4.h **** 
 832:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm4.h **** 
 836:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:Drivers/CMSIS/Include/core_cm4.h **** 
 840:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:Drivers/CMSIS/Include/core_cm4.h **** 
 843:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:Drivers/CMSIS/Include/core_cm4.h **** 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:Drivers/CMSIS/Include/core_cm4.h **** 
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:Drivers/CMSIS/Include/core_cm4.h **** 
 868:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** 
 872:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 17


 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 18


 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
ARM GAS  /tmp/cccl8fOf.s 			page 19


1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
ARM GAS  /tmp/cccl8fOf.s 			page 20


1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 21


1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:Drivers/CMSIS/Include/core_cm4.h **** 
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:Drivers/CMSIS/Include/core_cm4.h **** 
1158:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:Drivers/CMSIS/Include/core_cm4.h **** 
1162:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:Drivers/CMSIS/Include/core_cm4.h **** 
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:Drivers/CMSIS/Include/core_cm4.h **** 
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
ARM GAS  /tmp/cccl8fOf.s 			page 22


1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:Drivers/CMSIS/Include/core_cm4.h **** 
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:Drivers/CMSIS/Include/core_cm4.h **** 
1188:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:Drivers/CMSIS/Include/core_cm4.h **** 
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:Drivers/CMSIS/Include/core_cm4.h **** /**
1193:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:Drivers/CMSIS/Include/core_cm4.h ****   @{
1197:Drivers/CMSIS/Include/core_cm4.h ****  */
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** /**
1200:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:Drivers/CMSIS/Include/core_cm4.h ****  */
1202:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1203:Drivers/CMSIS/Include/core_cm4.h **** {
1204:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1216:Drivers/CMSIS/Include/core_cm4.h **** 
1217:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1218:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm4.h **** 
1224:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm4.h **** 
1227:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
ARM GAS  /tmp/cccl8fOf.s 			page 23


1230:Drivers/CMSIS/Include/core_cm4.h **** 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** 
1234:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** 
1241:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** 
1248:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:Drivers/CMSIS/Include/core_cm4.h **** 
1251:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** 
1255:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** 
1258:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:Drivers/CMSIS/Include/core_cm4.h **** 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:Drivers/CMSIS/Include/core_cm4.h **** 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:Drivers/CMSIS/Include/core_cm4.h **** 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:Drivers/CMSIS/Include/core_cm4.h **** 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:Drivers/CMSIS/Include/core_cm4.h **** 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:Drivers/CMSIS/Include/core_cm4.h **** 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:Drivers/CMSIS/Include/core_cm4.h **** 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:Drivers/CMSIS/Include/core_cm4.h **** 
1282:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:Drivers/CMSIS/Include/core_cm4.h **** #endif
1284:Drivers/CMSIS/Include/core_cm4.h **** 
1285:Drivers/CMSIS/Include/core_cm4.h **** 
1286:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
ARM GAS  /tmp/cccl8fOf.s 			page 24


1287:Drivers/CMSIS/Include/core_cm4.h **** /**
1288:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:Drivers/CMSIS/Include/core_cm4.h ****   @{
1292:Drivers/CMSIS/Include/core_cm4.h ****  */
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:Drivers/CMSIS/Include/core_cm4.h ****  */
1297:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1298:Drivers/CMSIS/Include/core_cm4.h **** {
1299:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1306:Drivers/CMSIS/Include/core_cm4.h **** 
1307:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:Drivers/CMSIS/Include/core_cm4.h **** 
1311:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:Drivers/CMSIS/Include/core_cm4.h **** 
1314:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:Drivers/CMSIS/Include/core_cm4.h **** 
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:Drivers/CMSIS/Include/core_cm4.h **** 
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:Drivers/CMSIS/Include/core_cm4.h **** 
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:Drivers/CMSIS/Include/core_cm4.h **** 
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:Drivers/CMSIS/Include/core_cm4.h **** 
1335:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
ARM GAS  /tmp/cccl8fOf.s 			page 25


1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:Drivers/CMSIS/Include/core_cm4.h **** 
1346:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:Drivers/CMSIS/Include/core_cm4.h **** 
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:Drivers/CMSIS/Include/core_cm4.h **** 
1352:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:Drivers/CMSIS/Include/core_cm4.h **** 
1356:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:Drivers/CMSIS/Include/core_cm4.h **** 
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:Drivers/CMSIS/Include/core_cm4.h **** 
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:Drivers/CMSIS/Include/core_cm4.h **** 
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:Drivers/CMSIS/Include/core_cm4.h **** 
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:Drivers/CMSIS/Include/core_cm4.h **** 
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:Drivers/CMSIS/Include/core_cm4.h **** 
1377:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:Drivers/CMSIS/Include/core_cm4.h **** #endif
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** 
1394:Drivers/CMSIS/Include/core_cm4.h **** /**
1395:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:Drivers/CMSIS/Include/core_cm4.h ****   @{
1399:Drivers/CMSIS/Include/core_cm4.h ****  */
1400:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 26


1401:Drivers/CMSIS/Include/core_cm4.h **** /**
1402:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:Drivers/CMSIS/Include/core_cm4.h ****  */
1404:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1405:Drivers/CMSIS/Include/core_cm4.h **** {
1406:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1411:Drivers/CMSIS/Include/core_cm4.h **** 
1412:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:Drivers/CMSIS/Include/core_cm4.h **** 
1419:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:Drivers/CMSIS/Include/core_cm4.h **** 
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:Drivers/CMSIS/Include/core_cm4.h **** 
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:Drivers/CMSIS/Include/core_cm4.h **** 
1456:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
ARM GAS  /tmp/cccl8fOf.s 			page 27


1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** 
1460:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:Drivers/CMSIS/Include/core_cm4.h **** 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:Drivers/CMSIS/Include/core_cm4.h **** 
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:Drivers/CMSIS/Include/core_cm4.h **** 
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** /**
1500:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:Drivers/CMSIS/Include/core_cm4.h ****   @{
1504:Drivers/CMSIS/Include/core_cm4.h ****  */
1505:Drivers/CMSIS/Include/core_cm4.h **** 
1506:Drivers/CMSIS/Include/core_cm4.h **** /**
1507:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1511:Drivers/CMSIS/Include/core_cm4.h **** */
1512:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:Drivers/CMSIS/Include/core_cm4.h **** 
1514:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/cccl8fOf.s 			page 28


1515:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register.
1518:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:Drivers/CMSIS/Include/core_cm4.h **** */
1520:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:Drivers/CMSIS/Include/core_cm4.h **** 
1522:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:Drivers/CMSIS/Include/core_cm4.h **** 
1524:Drivers/CMSIS/Include/core_cm4.h **** 
1525:Drivers/CMSIS/Include/core_cm4.h **** /**
1526:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:Drivers/CMSIS/Include/core_cm4.h ****   @{
1530:Drivers/CMSIS/Include/core_cm4.h ****  */
1531:Drivers/CMSIS/Include/core_cm4.h **** 
1532:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:Drivers/CMSIS/Include/core_cm4.h **** 
1542:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:Drivers/CMSIS/Include/core_cm4.h **** 
1551:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:Drivers/CMSIS/Include/core_cm4.h **** #endif
1555:Drivers/CMSIS/Include/core_cm4.h **** 
1556:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:Drivers/CMSIS/Include/core_cm4.h **** #endif
1560:Drivers/CMSIS/Include/core_cm4.h **** 
1561:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** 
1564:Drivers/CMSIS/Include/core_cm4.h **** 
1565:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1566:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1567:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1568:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1569:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1570:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1571:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
ARM GAS  /tmp/cccl8fOf.s 			page 29


1572:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1573:Drivers/CMSIS/Include/core_cm4.h **** /**
1574:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:Drivers/CMSIS/Include/core_cm4.h **** */
1576:Drivers/CMSIS/Include/core_cm4.h **** 
1577:Drivers/CMSIS/Include/core_cm4.h **** 
1578:Drivers/CMSIS/Include/core_cm4.h **** 
1579:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:Drivers/CMSIS/Include/core_cm4.h **** /**
1581:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:Drivers/CMSIS/Include/core_cm4.h ****   @{
1585:Drivers/CMSIS/Include/core_cm4.h ****  */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** /**
1588:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1589:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1592:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:Drivers/CMSIS/Include/core_cm4.h **** {
  27              		.loc 1 1597 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
1598:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1599:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  43              		.loc 1 1599 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 03F00703 		and	r3, r3, #7
  46 000e FB60     		str	r3, [r7, #12]
1600:Drivers/CMSIS/Include/core_cm4.h **** 
1601:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  47              		.loc 1 1601 0
  48 0010 0C4B     		ldr	r3, .L2
  49 0012 DB68     		ldr	r3, [r3, #12]
  50 0014 BB60     		str	r3, [r7, #8]
1602:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  51              		.loc 1 1602 0
  52 0016 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/cccl8fOf.s 			page 30


  53 0018 4FF6FF03 		movw	r3, #63743
  54 001c 1340     		ands	r3, r3, r2
  55 001e BB60     		str	r3, [r7, #8]
1603:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  56              		.loc 1 1605 0
  57 0020 FB68     		ldr	r3, [r7, #12]
  58 0022 1A02     		lsls	r2, r3, #8
1604:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  59              		.loc 1 1604 0
  60 0024 BB68     		ldr	r3, [r7, #8]
  61 0026 1343     		orrs	r3, r3, r2
1603:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  62              		.loc 1 1603 0
  63 0028 43F0BF63 		orr	r3, r3, #100139008
  64 002c 43F40033 		orr	r3, r3, #131072
  65 0030 BB60     		str	r3, [r7, #8]
1606:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  66              		.loc 1 1606 0
  67 0032 044A     		ldr	r2, .L2
  68 0034 BB68     		ldr	r3, [r7, #8]
  69 0036 D360     		str	r3, [r2, #12]
1607:Drivers/CMSIS/Include/core_cm4.h **** }
  70              		.loc 1 1607 0
  71 0038 00BF     		nop
  72 003a 1437     		adds	r7, r7, #20
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75 003c BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 003e 5DF8047B 		ldr	r7, [sp], #4
  80              	.LCFI5:
  81              		.cfi_restore 7
  82              		.cfi_def_cfa_offset 0
  83 0042 7047     		bx	lr
  84              	.L3:
  85              		.align	2
  86              	.L2:
  87 0044 00ED00E0 		.word	-536810240
  88              		.cfi_endproc
  89              	.LFE106:
  91              		.section	.text.NVIC_GetPriorityGrouping,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	NVIC_GetPriorityGrouping:
  99              	.LFB107:
1608:Drivers/CMSIS/Include/core_cm4.h **** 
1609:Drivers/CMSIS/Include/core_cm4.h **** 
1610:Drivers/CMSIS/Include/core_cm4.h **** /**
1611:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1612:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
ARM GAS  /tmp/cccl8fOf.s 			page 31


1613:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:Drivers/CMSIS/Include/core_cm4.h ****  */
1615:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1616:Drivers/CMSIS/Include/core_cm4.h **** {
 100              		.loc 1 1616 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              	.LCFI6:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 7, -4
 109 0002 00AF     		add	r7, sp, #0
 110              	.LCFI7:
 111              		.cfi_def_cfa_register 7
1617:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 112              		.loc 1 1617 0
 113 0004 044B     		ldr	r3, .L6
 114 0006 DB68     		ldr	r3, [r3, #12]
 115 0008 1B0A     		lsrs	r3, r3, #8
 116 000a 03F00703 		and	r3, r3, #7
1618:Drivers/CMSIS/Include/core_cm4.h **** }
 117              		.loc 1 1618 0
 118 000e 1846     		mov	r0, r3
 119 0010 BD46     		mov	sp, r7
 120              	.LCFI8:
 121              		.cfi_def_cfa_register 13
 122              		@ sp needed
 123 0012 5DF8047B 		ldr	r7, [sp], #4
 124              	.LCFI9:
 125              		.cfi_restore 7
 126              		.cfi_def_cfa_offset 0
 127 0016 7047     		bx	lr
 128              	.L7:
 129              		.align	2
 130              	.L6:
 131 0018 00ED00E0 		.word	-536810240
 132              		.cfi_endproc
 133              	.LFE107:
 135              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
 136              		.align	1
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	NVIC_EnableIRQ:
 143              	.LFB108:
1619:Drivers/CMSIS/Include/core_cm4.h **** 
1620:Drivers/CMSIS/Include/core_cm4.h **** 
1621:Drivers/CMSIS/Include/core_cm4.h **** /**
1622:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable External Interrupt
1623:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:Drivers/CMSIS/Include/core_cm4.h ****  */
1626:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/cccl8fOf.s 			page 32


 144              		.loc 1 1627 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 1, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 149 0000 80B4     		push	{r7}
 150              	.LCFI10:
 151              		.cfi_def_cfa_offset 4
 152              		.cfi_offset 7, -4
 153 0002 83B0     		sub	sp, sp, #12
 154              	.LCFI11:
 155              		.cfi_def_cfa_offset 16
 156 0004 00AF     		add	r7, sp, #0
 157              	.LCFI12:
 158              		.cfi_def_cfa_register 7
 159 0006 0346     		mov	r3, r0
 160 0008 FB71     		strb	r3, [r7, #7]
1628:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 161              		.loc 1 1628 0
 162 000a 0949     		ldr	r1, .L9
 163 000c 97F90730 		ldrsb	r3, [r7, #7]
 164 0010 5B09     		lsrs	r3, r3, #5
 165 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 166 0014 02F01F02 		and	r2, r2, #31
 167 0018 0120     		movs	r0, #1
 168 001a 00FA02F2 		lsl	r2, r0, r2
 169 001e 41F82320 		str	r2, [r1, r3, lsl #2]
1629:Drivers/CMSIS/Include/core_cm4.h **** }
 170              		.loc 1 1629 0
 171 0022 00BF     		nop
 172 0024 0C37     		adds	r7, r7, #12
 173              	.LCFI13:
 174              		.cfi_def_cfa_offset 4
 175 0026 BD46     		mov	sp, r7
 176              	.LCFI14:
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 0028 5DF8047B 		ldr	r7, [sp], #4
 180              	.LCFI15:
 181              		.cfi_restore 7
 182              		.cfi_def_cfa_offset 0
 183 002c 7047     		bx	lr
 184              	.L10:
 185 002e 00BF     		.align	2
 186              	.L9:
 187 0030 00E100E0 		.word	-536813312
 188              		.cfi_endproc
 189              	.LFE108:
 191              		.section	.text.NVIC_DisableIRQ,"ax",%progbits
 192              		.align	1
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	NVIC_DisableIRQ:
 199              	.LFB109:
1630:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 33


1631:Drivers/CMSIS/Include/core_cm4.h **** 
1632:Drivers/CMSIS/Include/core_cm4.h **** /**
1633:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable External Interrupt
1634:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:Drivers/CMSIS/Include/core_cm4.h ****  */
1637:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:Drivers/CMSIS/Include/core_cm4.h **** {
 200              		.loc 1 1638 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 0000 80B4     		push	{r7}
 206              	.LCFI16:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 0002 83B0     		sub	sp, sp, #12
 210              	.LCFI17:
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              	.LCFI18:
 214              		.cfi_def_cfa_register 7
 215 0006 0346     		mov	r3, r0
 216 0008 FB71     		strb	r3, [r7, #7]
1639:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 217              		.loc 1 1639 0
 218 000a 0949     		ldr	r1, .L12
 219 000c 97F90730 		ldrsb	r3, [r7, #7]
 220 0010 5B09     		lsrs	r3, r3, #5
 221 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 222 0014 02F01F02 		and	r2, r2, #31
 223 0018 0120     		movs	r0, #1
 224 001a 00FA02F2 		lsl	r2, r0, r2
 225 001e 2033     		adds	r3, r3, #32
 226 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1640:Drivers/CMSIS/Include/core_cm4.h **** }
 227              		.loc 1 1640 0
 228 0024 00BF     		nop
 229 0026 0C37     		adds	r7, r7, #12
 230              	.LCFI19:
 231              		.cfi_def_cfa_offset 4
 232 0028 BD46     		mov	sp, r7
 233              	.LCFI20:
 234              		.cfi_def_cfa_register 13
 235              		@ sp needed
 236 002a 5DF8047B 		ldr	r7, [sp], #4
 237              	.LCFI21:
 238              		.cfi_restore 7
 239              		.cfi_def_cfa_offset 0
 240 002e 7047     		bx	lr
 241              	.L13:
 242              		.align	2
 243              	.L12:
 244 0030 00E100E0 		.word	-536813312
 245              		.cfi_endproc
 246              	.LFE109:
ARM GAS  /tmp/cccl8fOf.s 			page 34


 248              		.section	.text.NVIC_GetPendingIRQ,"ax",%progbits
 249              		.align	1
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	NVIC_GetPendingIRQ:
 256              	.LFB110:
1641:Drivers/CMSIS/Include/core_cm4.h **** 
1642:Drivers/CMSIS/Include/core_cm4.h **** 
1643:Drivers/CMSIS/Include/core_cm4.h **** /**
1644:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1645:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:Drivers/CMSIS/Include/core_cm4.h ****  */
1650:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:Drivers/CMSIS/Include/core_cm4.h **** {
 257              		.loc 1 1651 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262 0000 80B4     		push	{r7}
 263              	.LCFI22:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 83B0     		sub	sp, sp, #12
 267              	.LCFI23:
 268              		.cfi_def_cfa_offset 16
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI24:
 271              		.cfi_def_cfa_register 7
 272 0006 0346     		mov	r3, r0
 273 0008 FB71     		strb	r3, [r7, #7]
1652:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
 274              		.loc 1 1652 0
 275 000a 0A4A     		ldr	r2, .L16
 276 000c 97F90730 		ldrsb	r3, [r7, #7]
 277 0010 5B09     		lsrs	r3, r3, #5
 278 0012 4033     		adds	r3, r3, #64
 279 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
 280 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 281 001a 03F01F03 		and	r3, r3, #31
 282 001e 22FA03F3 		lsr	r3, r2, r3
 283 0022 03F00103 		and	r3, r3, #1
1653:Drivers/CMSIS/Include/core_cm4.h **** }
 284              		.loc 1 1653 0
 285 0026 1846     		mov	r0, r3
 286 0028 0C37     		adds	r7, r7, #12
 287              	.LCFI25:
 288              		.cfi_def_cfa_offset 4
 289 002a BD46     		mov	sp, r7
 290              	.LCFI26:
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
ARM GAS  /tmp/cccl8fOf.s 			page 35


 293 002c 5DF8047B 		ldr	r7, [sp], #4
 294              	.LCFI27:
 295              		.cfi_restore 7
 296              		.cfi_def_cfa_offset 0
 297 0030 7047     		bx	lr
 298              	.L17:
 299 0032 00BF     		.align	2
 300              	.L16:
 301 0034 00E100E0 		.word	-536813312
 302              		.cfi_endproc
 303              	.LFE110:
 305              		.section	.text.NVIC_SetPendingIRQ,"ax",%progbits
 306              		.align	1
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 312              	NVIC_SetPendingIRQ:
 313              	.LFB111:
1654:Drivers/CMSIS/Include/core_cm4.h **** 
1655:Drivers/CMSIS/Include/core_cm4.h **** 
1656:Drivers/CMSIS/Include/core_cm4.h **** /**
1657:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1658:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:Drivers/CMSIS/Include/core_cm4.h ****  */
1661:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:Drivers/CMSIS/Include/core_cm4.h **** {
 314              		.loc 1 1662 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 8
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              	.LCFI28:
 321              		.cfi_def_cfa_offset 4
 322              		.cfi_offset 7, -4
 323 0002 83B0     		sub	sp, sp, #12
 324              	.LCFI29:
 325              		.cfi_def_cfa_offset 16
 326 0004 00AF     		add	r7, sp, #0
 327              	.LCFI30:
 328              		.cfi_def_cfa_register 7
 329 0006 0346     		mov	r3, r0
 330 0008 FB71     		strb	r3, [r7, #7]
1663:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 331              		.loc 1 1663 0
 332 000a 0949     		ldr	r1, .L19
 333 000c 97F90730 		ldrsb	r3, [r7, #7]
 334 0010 5B09     		lsrs	r3, r3, #5
 335 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 336 0014 02F01F02 		and	r2, r2, #31
 337 0018 0120     		movs	r0, #1
 338 001a 00FA02F2 		lsl	r2, r0, r2
 339 001e 4033     		adds	r3, r3, #64
 340 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1664:Drivers/CMSIS/Include/core_cm4.h **** }
ARM GAS  /tmp/cccl8fOf.s 			page 36


 341              		.loc 1 1664 0
 342 0024 00BF     		nop
 343 0026 0C37     		adds	r7, r7, #12
 344              	.LCFI31:
 345              		.cfi_def_cfa_offset 4
 346 0028 BD46     		mov	sp, r7
 347              	.LCFI32:
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 002a 5DF8047B 		ldr	r7, [sp], #4
 351              	.LCFI33:
 352              		.cfi_restore 7
 353              		.cfi_def_cfa_offset 0
 354 002e 7047     		bx	lr
 355              	.L20:
 356              		.align	2
 357              	.L19:
 358 0030 00E100E0 		.word	-536813312
 359              		.cfi_endproc
 360              	.LFE111:
 362              		.section	.text.NVIC_ClearPendingIRQ,"ax",%progbits
 363              		.align	1
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv4-sp-d16
 369              	NVIC_ClearPendingIRQ:
 370              	.LFB112:
1665:Drivers/CMSIS/Include/core_cm4.h **** 
1666:Drivers/CMSIS/Include/core_cm4.h **** 
1667:Drivers/CMSIS/Include/core_cm4.h **** /**
1668:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:Drivers/CMSIS/Include/core_cm4.h ****  */
1672:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:Drivers/CMSIS/Include/core_cm4.h **** {
 371              		.loc 1 1673 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 8
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376 0000 80B4     		push	{r7}
 377              	.LCFI34:
 378              		.cfi_def_cfa_offset 4
 379              		.cfi_offset 7, -4
 380 0002 83B0     		sub	sp, sp, #12
 381              	.LCFI35:
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              	.LCFI36:
 385              		.cfi_def_cfa_register 7
 386 0006 0346     		mov	r3, r0
 387 0008 FB71     		strb	r3, [r7, #7]
1674:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 388              		.loc 1 1674 0
 389 000a 0949     		ldr	r1, .L22
ARM GAS  /tmp/cccl8fOf.s 			page 37


 390 000c 97F90730 		ldrsb	r3, [r7, #7]
 391 0010 5B09     		lsrs	r3, r3, #5
 392 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 393 0014 02F01F02 		and	r2, r2, #31
 394 0018 0120     		movs	r0, #1
 395 001a 00FA02F2 		lsl	r2, r0, r2
 396 001e 6033     		adds	r3, r3, #96
 397 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1675:Drivers/CMSIS/Include/core_cm4.h **** }
 398              		.loc 1 1675 0
 399 0024 00BF     		nop
 400 0026 0C37     		adds	r7, r7, #12
 401              	.LCFI37:
 402              		.cfi_def_cfa_offset 4
 403 0028 BD46     		mov	sp, r7
 404              	.LCFI38:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 002a 5DF8047B 		ldr	r7, [sp], #4
 408              	.LCFI39:
 409              		.cfi_restore 7
 410              		.cfi_def_cfa_offset 0
 411 002e 7047     		bx	lr
 412              	.L23:
 413              		.align	2
 414              	.L22:
 415 0030 00E100E0 		.word	-536813312
 416              		.cfi_endproc
 417              	.LFE112:
 419              		.section	.text.NVIC_GetActive,"ax",%progbits
 420              		.align	1
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv4-sp-d16
 426              	NVIC_GetActive:
 427              	.LFB113:
1676:Drivers/CMSIS/Include/core_cm4.h **** 
1677:Drivers/CMSIS/Include/core_cm4.h **** 
1678:Drivers/CMSIS/Include/core_cm4.h **** /**
1679:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1680:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1684:Drivers/CMSIS/Include/core_cm4.h ****  */
1685:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:Drivers/CMSIS/Include/core_cm4.h **** {
 428              		.loc 1 1686 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI40:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
ARM GAS  /tmp/cccl8fOf.s 			page 38


 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI41:
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              	.LCFI42:
 442              		.cfi_def_cfa_register 7
 443 0006 0346     		mov	r3, r0
 444 0008 FB71     		strb	r3, [r7, #7]
1687:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
 445              		.loc 1 1687 0
 446 000a 0A4A     		ldr	r2, .L26
 447 000c 97F90730 		ldrsb	r3, [r7, #7]
 448 0010 5B09     		lsrs	r3, r3, #5
 449 0012 8033     		adds	r3, r3, #128
 450 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
 451 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 452 001a 03F01F03 		and	r3, r3, #31
 453 001e 22FA03F3 		lsr	r3, r2, r3
 454 0022 03F00103 		and	r3, r3, #1
1688:Drivers/CMSIS/Include/core_cm4.h **** }
 455              		.loc 1 1688 0
 456 0026 1846     		mov	r0, r3
 457 0028 0C37     		adds	r7, r7, #12
 458              	.LCFI43:
 459              		.cfi_def_cfa_offset 4
 460 002a BD46     		mov	sp, r7
 461              	.LCFI44:
 462              		.cfi_def_cfa_register 13
 463              		@ sp needed
 464 002c 5DF8047B 		ldr	r7, [sp], #4
 465              	.LCFI45:
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0030 7047     		bx	lr
 469              	.L27:
 470 0032 00BF     		.align	2
 471              	.L26:
 472 0034 00E100E0 		.word	-536813312
 473              		.cfi_endproc
 474              	.LFE113:
 476              		.section	.text.NVIC_SetPriority,"ax",%progbits
 477              		.align	1
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 481              		.fpu fpv4-sp-d16
 483              	NVIC_SetPriority:
 484              	.LFB114:
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** 
1691:Drivers/CMSIS/Include/core_cm4.h **** /**
1692:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1693:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/cccl8fOf.s 			page 39


1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
 485              		.loc 1 1699 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490 0000 80B4     		push	{r7}
 491              	.LCFI46:
 492              		.cfi_def_cfa_offset 4
 493              		.cfi_offset 7, -4
 494 0002 83B0     		sub	sp, sp, #12
 495              	.LCFI47:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI48:
 499              		.cfi_def_cfa_register 7
 500 0006 0346     		mov	r3, r0
 501 0008 3960     		str	r1, [r7]
 502 000a FB71     		strb	r3, [r7, #7]
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
 503              		.loc 1 1700 0
 504 000c 97F90730 		ldrsb	r3, [r7, #7]
 505 0010 002B     		cmp	r3, #0
 506 0012 0BDA     		bge	.L29
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
 507              		.loc 1 1702 0
 508 0014 0D49     		ldr	r1, .L32
 509 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 510 0018 03F00F03 		and	r3, r3, #15
 511 001c 043B     		subs	r3, r3, #4
 512 001e 3A68     		ldr	r2, [r7]
 513 0020 D2B2     		uxtb	r2, r2
 514 0022 1201     		lsls	r2, r2, #4
 515 0024 D2B2     		uxtb	r2, r2
 516 0026 0B44     		add	r3, r3, r1
 517 0028 1A76     		strb	r2, [r3, #24]
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
 518              		.loc 1 1708 0
 519 002a 09E0     		b	.L31
 520              	.L29:
1706:Drivers/CMSIS/Include/core_cm4.h ****   }
 521              		.loc 1 1706 0
 522 002c 0849     		ldr	r1, .L32+4
 523 002e 97F90730 		ldrsb	r3, [r7, #7]
 524 0032 3A68     		ldr	r2, [r7]
 525 0034 D2B2     		uxtb	r2, r2
 526 0036 1201     		lsls	r2, r2, #4
 527 0038 D2B2     		uxtb	r2, r2
 528 003a 0B44     		add	r3, r3, r1
 529 003c 83F80023 		strb	r2, [r3, #768]
ARM GAS  /tmp/cccl8fOf.s 			page 40


 530              	.L31:
 531              		.loc 1 1708 0
 532 0040 00BF     		nop
 533 0042 0C37     		adds	r7, r7, #12
 534              	.LCFI49:
 535              		.cfi_def_cfa_offset 4
 536 0044 BD46     		mov	sp, r7
 537              	.LCFI50:
 538              		.cfi_def_cfa_register 13
 539              		@ sp needed
 540 0046 5DF8047B 		ldr	r7, [sp], #4
 541              	.LCFI51:
 542              		.cfi_restore 7
 543              		.cfi_def_cfa_offset 0
 544 004a 7047     		bx	lr
 545              	.L33:
 546              		.align	2
 547              	.L32:
 548 004c 00ED00E0 		.word	-536810240
 549 0050 00E100E0 		.word	-536813312
 550              		.cfi_endproc
 551              	.LFE114:
 553              		.section	.text.NVIC_GetPriority,"ax",%progbits
 554              		.align	1
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 558              		.fpu fpv4-sp-d16
 560              	NVIC_GetPriority:
 561              	.LFB115:
1709:Drivers/CMSIS/Include/core_cm4.h **** 
1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1718:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:Drivers/CMSIS/Include/core_cm4.h ****  */
1720:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:Drivers/CMSIS/Include/core_cm4.h **** {
 562              		.loc 1 1721 0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 8
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 567 0000 80B4     		push	{r7}
 568              	.LCFI52:
 569              		.cfi_def_cfa_offset 4
 570              		.cfi_offset 7, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              	.LCFI53:
 573              		.cfi_def_cfa_offset 16
 574 0004 00AF     		add	r7, sp, #0
 575              	.LCFI54:
ARM GAS  /tmp/cccl8fOf.s 			page 41


 576              		.cfi_def_cfa_register 7
 577 0006 0346     		mov	r3, r0
 578 0008 FB71     		strb	r3, [r7, #7]
1722:Drivers/CMSIS/Include/core_cm4.h **** 
1723:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
 579              		.loc 1 1723 0
 580 000a 97F90730 		ldrsb	r3, [r7, #7]
 581 000e 002B     		cmp	r3, #0
 582 0010 0ADA     		bge	.L35
1724:Drivers/CMSIS/Include/core_cm4.h ****   {
1725:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
 583              		.loc 1 1725 0
 584 0012 0D4A     		ldr	r2, .L37
 585 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 586 0016 03F00F03 		and	r3, r3, #15
 587 001a 043B     		subs	r3, r3, #4
 588 001c 1344     		add	r3, r3, r2
 589 001e 1B7E     		ldrb	r3, [r3, #24]
 590 0020 DBB2     		uxtb	r3, r3
 591 0022 1B09     		lsrs	r3, r3, #4
 592 0024 DBB2     		uxtb	r3, r3
 593 0026 08E0     		b	.L36
 594              	.L35:
1726:Drivers/CMSIS/Include/core_cm4.h ****   }
1727:Drivers/CMSIS/Include/core_cm4.h ****   else
1728:Drivers/CMSIS/Include/core_cm4.h ****   {
1729:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
 595              		.loc 1 1729 0
 596 0028 084A     		ldr	r2, .L37+4
 597 002a 97F90730 		ldrsb	r3, [r7, #7]
 598 002e 1344     		add	r3, r3, r2
 599 0030 93F80033 		ldrb	r3, [r3, #768]
 600 0034 DBB2     		uxtb	r3, r3
 601 0036 1B09     		lsrs	r3, r3, #4
 602 0038 DBB2     		uxtb	r3, r3
 603              	.L36:
1730:Drivers/CMSIS/Include/core_cm4.h ****   }
1731:Drivers/CMSIS/Include/core_cm4.h **** }
 604              		.loc 1 1731 0
 605 003a 1846     		mov	r0, r3
 606 003c 0C37     		adds	r7, r7, #12
 607              	.LCFI55:
 608              		.cfi_def_cfa_offset 4
 609 003e BD46     		mov	sp, r7
 610              	.LCFI56:
 611              		.cfi_def_cfa_register 13
 612              		@ sp needed
 613 0040 5DF8047B 		ldr	r7, [sp], #4
 614              	.LCFI57:
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 0044 7047     		bx	lr
 618              	.L38:
 619 0046 00BF     		.align	2
 620              	.L37:
 621 0048 00ED00E0 		.word	-536810240
 622 004c 00E100E0 		.word	-536813312
ARM GAS  /tmp/cccl8fOf.s 			page 42


 623              		.cfi_endproc
 624              	.LFE115:
 626              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 627              		.align	1
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	NVIC_EncodePriority:
 634              	.LFB116:
1732:Drivers/CMSIS/Include/core_cm4.h **** 
1733:Drivers/CMSIS/Include/core_cm4.h **** 
1734:Drivers/CMSIS/Include/core_cm4.h **** /**
1735:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1736:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:Drivers/CMSIS/Include/core_cm4.h ****  */
1745:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1746:Drivers/CMSIS/Include/core_cm4.h **** {
 635              		.loc 1 1746 0
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 32
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640 0000 80B4     		push	{r7}
 641              	.LCFI58:
 642              		.cfi_def_cfa_offset 4
 643              		.cfi_offset 7, -4
 644 0002 89B0     		sub	sp, sp, #36
 645              	.LCFI59:
 646              		.cfi_def_cfa_offset 40
 647 0004 00AF     		add	r7, sp, #0
 648              	.LCFI60:
 649              		.cfi_def_cfa_register 7
 650 0006 F860     		str	r0, [r7, #12]
 651 0008 B960     		str	r1, [r7, #8]
 652 000a 7A60     		str	r2, [r7, #4]
1747:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 653              		.loc 1 1747 0
 654 000c FB68     		ldr	r3, [r7, #12]
 655 000e 03F00703 		and	r3, r3, #7
 656 0012 FB61     		str	r3, [r7, #28]
1748:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1749:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1750:Drivers/CMSIS/Include/core_cm4.h **** 
1751:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 657              		.loc 1 1751 0
 658 0014 FB69     		ldr	r3, [r7, #28]
 659 0016 C3F10703 		rsb	r3, r3, #7
 660 001a 042B     		cmp	r3, #4
 661 001c 28BF     		it	cs
ARM GAS  /tmp/cccl8fOf.s 			page 43


 662 001e 0423     		movcs	r3, #4
 663 0020 BB61     		str	r3, [r7, #24]
1752:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 664              		.loc 1 1752 0
 665 0022 FB69     		ldr	r3, [r7, #28]
 666 0024 0433     		adds	r3, r3, #4
 667 0026 062B     		cmp	r3, #6
 668 0028 02D9     		bls	.L40
 669              		.loc 1 1752 0 is_stmt 0 discriminator 1
 670 002a FB69     		ldr	r3, [r7, #28]
 671 002c 033B     		subs	r3, r3, #3
 672 002e 00E0     		b	.L41
 673              	.L40:
 674              		.loc 1 1752 0 discriminator 2
 675 0030 0023     		movs	r3, #0
 676              	.L41:
 677              		.loc 1 1752 0 discriminator 4
 678 0032 7B61     		str	r3, [r7, #20]
1753:Drivers/CMSIS/Include/core_cm4.h **** 
1754:Drivers/CMSIS/Include/core_cm4.h ****   return (
1755:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 679              		.loc 1 1755 0 is_stmt 1 discriminator 4
 680 0034 0122     		movs	r2, #1
 681 0036 BB69     		ldr	r3, [r7, #24]
 682 0038 02FA03F3 		lsl	r3, r2, r3
 683 003c 5A1E     		subs	r2, r3, #1
 684 003e BB68     		ldr	r3, [r7, #8]
 685 0040 1A40     		ands	r2, r2, r3
 686 0042 7B69     		ldr	r3, [r7, #20]
 687 0044 9A40     		lsls	r2, r2, r3
1756:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 688              		.loc 1 1756 0 discriminator 4
 689 0046 0121     		movs	r1, #1
 690 0048 7B69     		ldr	r3, [r7, #20]
 691 004a 01FA03F3 		lsl	r3, r1, r3
 692 004e 591E     		subs	r1, r3, #1
 693 0050 7B68     		ldr	r3, [r7, #4]
 694 0052 0B40     		ands	r3, r3, r1
1755:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 695              		.loc 1 1755 0 discriminator 4
 696 0054 1343     		orrs	r3, r3, r2
1757:Drivers/CMSIS/Include/core_cm4.h ****          );
1758:Drivers/CMSIS/Include/core_cm4.h **** }
 697              		.loc 1 1758 0 discriminator 4
 698 0056 1846     		mov	r0, r3
 699 0058 2437     		adds	r7, r7, #36
 700              	.LCFI61:
 701              		.cfi_def_cfa_offset 4
 702 005a BD46     		mov	sp, r7
 703              	.LCFI62:
 704              		.cfi_def_cfa_register 13
 705              		@ sp needed
 706 005c 5DF8047B 		ldr	r7, [sp], #4
 707              	.LCFI63:
 708              		.cfi_restore 7
 709              		.cfi_def_cfa_offset 0
 710 0060 7047     		bx	lr
ARM GAS  /tmp/cccl8fOf.s 			page 44


 711              		.cfi_endproc
 712              	.LFE116:
 714              		.section	.text.NVIC_DecodePriority,"ax",%progbits
 715              		.align	1
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	NVIC_DecodePriority:
 722              	.LFB117:
1759:Drivers/CMSIS/Include/core_cm4.h **** 
1760:Drivers/CMSIS/Include/core_cm4.h **** 
1761:Drivers/CMSIS/Include/core_cm4.h **** /**
1762:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1763:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1764:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1765:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1766:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1768:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1769:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1770:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1771:Drivers/CMSIS/Include/core_cm4.h ****  */
1772:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1773:Drivers/CMSIS/Include/core_cm4.h **** {
 723              		.loc 1 1773 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 32
 726              		@ frame_needed = 1, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 728 0000 80B4     		push	{r7}
 729              	.LCFI64:
 730              		.cfi_def_cfa_offset 4
 731              		.cfi_offset 7, -4
 732 0002 89B0     		sub	sp, sp, #36
 733              	.LCFI65:
 734              		.cfi_def_cfa_offset 40
 735 0004 00AF     		add	r7, sp, #0
 736              	.LCFI66:
 737              		.cfi_def_cfa_register 7
 738 0006 F860     		str	r0, [r7, #12]
 739 0008 B960     		str	r1, [r7, #8]
 740 000a 7A60     		str	r2, [r7, #4]
 741 000c 3B60     		str	r3, [r7]
1774:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 742              		.loc 1 1774 0
 743 000e BB68     		ldr	r3, [r7, #8]
 744 0010 03F00703 		and	r3, r3, #7
 745 0014 FB61     		str	r3, [r7, #28]
1775:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1776:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 746              		.loc 1 1778 0
 747 0016 FB69     		ldr	r3, [r7, #28]
 748 0018 C3F10703 		rsb	r3, r3, #7
 749 001c 042B     		cmp	r3, #4
ARM GAS  /tmp/cccl8fOf.s 			page 45


 750 001e 28BF     		it	cs
 751 0020 0423     		movcs	r3, #4
 752 0022 BB61     		str	r3, [r7, #24]
1779:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 753              		.loc 1 1779 0
 754 0024 FB69     		ldr	r3, [r7, #28]
 755 0026 0433     		adds	r3, r3, #4
 756 0028 062B     		cmp	r3, #6
 757 002a 02D9     		bls	.L44
 758              		.loc 1 1779 0 is_stmt 0 discriminator 1
 759 002c FB69     		ldr	r3, [r7, #28]
 760 002e 033B     		subs	r3, r3, #3
 761 0030 00E0     		b	.L45
 762              	.L44:
 763              		.loc 1 1779 0 discriminator 2
 764 0032 0023     		movs	r3, #0
 765              	.L45:
 766              		.loc 1 1779 0 discriminator 4
 767 0034 7B61     		str	r3, [r7, #20]
1780:Drivers/CMSIS/Include/core_cm4.h **** 
1781:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 768              		.loc 1 1781 0 is_stmt 1 discriminator 4
 769 0036 FA68     		ldr	r2, [r7, #12]
 770 0038 7B69     		ldr	r3, [r7, #20]
 771 003a DA40     		lsrs	r2, r2, r3
 772 003c 0121     		movs	r1, #1
 773 003e BB69     		ldr	r3, [r7, #24]
 774 0040 01FA03F3 		lsl	r3, r1, r3
 775 0044 013B     		subs	r3, r3, #1
 776 0046 1A40     		ands	r2, r2, r3
 777 0048 7B68     		ldr	r3, [r7, #4]
 778 004a 1A60     		str	r2, [r3]
1782:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 779              		.loc 1 1782 0 discriminator 4
 780 004c 0122     		movs	r2, #1
 781 004e 7B69     		ldr	r3, [r7, #20]
 782 0050 02FA03F3 		lsl	r3, r2, r3
 783 0054 5A1E     		subs	r2, r3, #1
 784 0056 FB68     		ldr	r3, [r7, #12]
 785 0058 1A40     		ands	r2, r2, r3
 786 005a 3B68     		ldr	r3, [r7]
 787 005c 1A60     		str	r2, [r3]
1783:Drivers/CMSIS/Include/core_cm4.h **** }
 788              		.loc 1 1783 0 discriminator 4
 789 005e 00BF     		nop
 790 0060 2437     		adds	r7, r7, #36
 791              	.LCFI67:
 792              		.cfi_def_cfa_offset 4
 793 0062 BD46     		mov	sp, r7
 794              	.LCFI68:
 795              		.cfi_def_cfa_register 13
 796              		@ sp needed
 797 0064 5DF8047B 		ldr	r7, [sp], #4
 798              	.LCFI69:
 799              		.cfi_restore 7
 800              		.cfi_def_cfa_offset 0
 801 0068 7047     		bx	lr
ARM GAS  /tmp/cccl8fOf.s 			page 46


 802              		.cfi_endproc
 803              	.LFE117:
 805              		.section	.text.NVIC_SystemReset,"ax",%progbits
 806              		.align	1
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 810              		.fpu fpv4-sp-d16
 812              	NVIC_SystemReset:
 813              	.LFB118:
1784:Drivers/CMSIS/Include/core_cm4.h **** 
1785:Drivers/CMSIS/Include/core_cm4.h **** 
1786:Drivers/CMSIS/Include/core_cm4.h **** /**
1787:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1788:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1789:Drivers/CMSIS/Include/core_cm4.h ****  */
1790:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1791:Drivers/CMSIS/Include/core_cm4.h **** {
 814              		.loc 1 1791 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 1, uses_anonymous_args = 0
 818              		@ link register save eliminated.
 819 0000 80B4     		push	{r7}
 820              	.LCFI70:
 821              		.cfi_def_cfa_offset 4
 822              		.cfi_offset 7, -4
 823 0002 00AF     		add	r7, sp, #0
 824              	.LCFI71:
 825              		.cfi_def_cfa_register 7
 826              	.LBB8:
 827              	.LBB9:
 828              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
ARM GAS  /tmp/cccl8fOf.s 			page 47


  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cccl8fOf.s 			page 48


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /tmp/cccl8fOf.s 			page 49


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
ARM GAS  /tmp/cccl8fOf.s 			page 50


 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /tmp/cccl8fOf.s 			page 51


 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cccl8fOf.s 			page 52


 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /tmp/cccl8fOf.s 			page 53


 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /tmp/cccl8fOf.s 			page 54


 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 829              		.loc 2 429 0
 830              		.syntax unified
 831              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 832 0004 BFF34F8F 		dsb 0xF
 833              	@ 0 "" 2
 834              		.thumb
 835              		.syntax unified
 836              	.LBE9:
 837              	.LBE8:
1792:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1793:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1794:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 838              		.loc 1 1794 0
 839 0008 0549     		ldr	r1, .L48
1795:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 840              		.loc 1 1795 0
 841 000a 054B     		ldr	r3, .L48
 842 000c DB68     		ldr	r3, [r3, #12]
 843 000e 03F4E062 		and	r2, r3, #1792
1794:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 844              		.loc 1 1794 0
 845 0012 044B     		ldr	r3, .L48+4
 846 0014 1343     		orrs	r3, r3, r2
 847 0016 CB60     		str	r3, [r1, #12]
 848              	.LBB10:
 849              	.LBB11:
 850              		.loc 2 429 0
 851              		.syntax unified
 852              	@ 429 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 853 0018 BFF34F8F 		dsb 0xF
 854              	@ 0 "" 2
 855              		.thumb
 856              		.syntax unified
 857              	.L47:
 858              	.LBE11:
 859              	.LBE10:
 860              	.LBB12:
 861              	.LBB13:
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 862              		.loc 2 375 0 discriminator 1
 863              		.syntax unified
 864              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 865 001c 00BF     		nop
 866              	@ 0 "" 2
 867              		.thumb
 868              		.syntax unified
 869              	.LBE13:
 870              	.LBE12:
1796:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1797:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1798:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/cccl8fOf.s 			page 55


1799:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1800:Drivers/CMSIS/Include/core_cm4.h ****   {
1801:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
 871              		.loc 1 1801 0 discriminator 1
 872 001e FDE7     		b	.L47
 873              	.L49:
 874              		.align	2
 875              	.L48:
 876 0020 00ED00E0 		.word	-536810240
 877 0024 0400FA05 		.word	100270084
 878              		.cfi_endproc
 879              	.LFE118:
 881              		.section	.text.SysTick_Config,"ax",%progbits
 882              		.align	1
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu fpv4-sp-d16
 888              	SysTick_Config:
 889              	.LFB119:
1802:Drivers/CMSIS/Include/core_cm4.h ****   }
1803:Drivers/CMSIS/Include/core_cm4.h **** }
1804:Drivers/CMSIS/Include/core_cm4.h **** 
1805:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1806:Drivers/CMSIS/Include/core_cm4.h **** 
1807:Drivers/CMSIS/Include/core_cm4.h **** 
1808:Drivers/CMSIS/Include/core_cm4.h **** 
1809:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1810:Drivers/CMSIS/Include/core_cm4.h **** /**
1811:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1812:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1813:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
1814:Drivers/CMSIS/Include/core_cm4.h ****   @{
1815:Drivers/CMSIS/Include/core_cm4.h ****  */
1816:Drivers/CMSIS/Include/core_cm4.h **** 
1817:Drivers/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0U)
1818:Drivers/CMSIS/Include/core_cm4.h **** 
1819:Drivers/CMSIS/Include/core_cm4.h **** /**
1820:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
1821:Drivers/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1822:Drivers/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
1823:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1824:Drivers/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
1825:Drivers/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
1826:Drivers/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1827:Drivers/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1828:Drivers/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
1829:Drivers/CMSIS/Include/core_cm4.h ****  */
1830:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1831:Drivers/CMSIS/Include/core_cm4.h **** {
 890              		.loc 1 1831 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 8
 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894 0000 80B5     		push	{r7, lr}
 895              	.LCFI72:
 896              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cccl8fOf.s 			page 56


 897              		.cfi_offset 7, -8
 898              		.cfi_offset 14, -4
 899 0002 82B0     		sub	sp, sp, #8
 900              	.LCFI73:
 901              		.cfi_def_cfa_offset 16
 902 0004 00AF     		add	r7, sp, #0
 903              	.LCFI74:
 904              		.cfi_def_cfa_register 7
 905 0006 7860     		str	r0, [r7, #4]
1832:Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 906              		.loc 1 1832 0
 907 0008 7B68     		ldr	r3, [r7, #4]
 908 000a 013B     		subs	r3, r3, #1
 909 000c B3F1807F 		cmp	r3, #16777216
 910 0010 01D3     		bcc	.L51
1833:Drivers/CMSIS/Include/core_cm4.h ****   {
1834:Drivers/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
 911              		.loc 1 1834 0
 912 0012 0123     		movs	r3, #1
 913 0014 0FE0     		b	.L52
 914              	.L51:
1835:Drivers/CMSIS/Include/core_cm4.h ****   }
1836:Drivers/CMSIS/Include/core_cm4.h **** 
1837:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 915              		.loc 1 1837 0
 916 0016 0A4A     		ldr	r2, .L53
 917 0018 7B68     		ldr	r3, [r7, #4]
 918 001a 013B     		subs	r3, r3, #1
 919 001c 5360     		str	r3, [r2, #4]
1838:Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 920              		.loc 1 1838 0
 921 001e 0F21     		movs	r1, #15
 922 0020 4FF0FF30 		mov	r0, #-1
 923 0024 FFF7FEFF 		bl	NVIC_SetPriority
1839:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 924              		.loc 1 1839 0
 925 0028 054B     		ldr	r3, .L53
 926 002a 0022     		movs	r2, #0
 927 002c 9A60     		str	r2, [r3, #8]
1840:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 928              		.loc 1 1840 0
 929 002e 044B     		ldr	r3, .L53
 930 0030 0722     		movs	r2, #7
 931 0032 1A60     		str	r2, [r3]
1841:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1842:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1843:Drivers/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 932              		.loc 1 1843 0
 933 0034 0023     		movs	r3, #0
 934              	.L52:
1844:Drivers/CMSIS/Include/core_cm4.h **** }
 935              		.loc 1 1844 0
 936 0036 1846     		mov	r0, r3
 937 0038 0837     		adds	r7, r7, #8
 938              	.LCFI75:
 939              		.cfi_def_cfa_offset 8
 940 003a BD46     		mov	sp, r7
ARM GAS  /tmp/cccl8fOf.s 			page 57


 941              	.LCFI76:
 942              		.cfi_def_cfa_register 13
 943              		@ sp needed
 944 003c 80BD     		pop	{r7, pc}
 945              	.L54:
 946 003e 00BF     		.align	2
 947              	.L53:
 948 0040 10E000E0 		.word	-536813552
 949              		.cfi_endproc
 950              	.LFE119:
 952              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 953              		.align	1
 954              		.global	HAL_NVIC_SetPriorityGrouping
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 958              		.fpu fpv4-sp-d16
 960              	HAL_NVIC_SetPriorityGrouping:
 961              	.LFB126:
 962              		.file 3 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @file    stm32l4xx_hal_cortex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @version V1.5.2
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @date    12-September-2016
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Initialization and Configuration functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Peripheral Control functions
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @verbatim
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===========================================================
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping() function.
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest sub priority
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
ARM GAS  /tmp/cccl8fOf.s 			page 58


  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure SysTick using CORTEX HAL driver ***
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ========================================================
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        is a CMSIS function that:
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        inside the stm32l4xx_hal_cortex.h file.
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @endverbatim
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   The table below gives the allowed values of the pre-emption priority and subpriority according
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |     
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0 bi
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 4 bi
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1 bi
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 3 bi
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2 bi
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 2 bi
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3 bi
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 1 bi
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4 bi
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 0 bi
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @attention
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
ARM GAS  /tmp/cccl8fOf.s 			page 59


  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      without specific prior written permission.
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #include "stm32l4xx_hal.h"
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
ARM GAS  /tmp/cccl8fOf.s 			page 60


 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       SysTick functionalities
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         using the required unlock sequence.
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    1 bit  for subpriority
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    0 bit  for subpriority
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 963              		.loc 3 183 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 8
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              	.LCFI77:
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 82B0     		sub	sp, sp, #8
 973              	.LCFI78:
 974              		.cfi_def_cfa_offset 16
 975 0004 00AF     		add	r7, sp, #0
 976              	.LCFI79:
 977              		.cfi_def_cfa_register 7
 978 0006 7860     		str	r0, [r7, #4]
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 979              		.loc 3 188 0
 980 0008 7868     		ldr	r0, [r7, #4]
 981 000a FFF7FEFF 		bl	NVIC_SetPriorityGrouping
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
ARM GAS  /tmp/cccl8fOf.s 			page 61


 982              		.loc 3 189 0
 983 000e 00BF     		nop
 984 0010 0837     		adds	r7, r7, #8
 985              	.LCFI80:
 986              		.cfi_def_cfa_offset 8
 987 0012 BD46     		mov	sp, r7
 988              	.LCFI81:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0014 80BD     		pop	{r7, pc}
 992              		.cfi_endproc
 993              	.LFE126:
 995              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 996              		.align	1
 997              		.global	HAL_NVIC_SetPriority
 998              		.syntax unified
 999              		.thumb
 1000              		.thumb_func
 1001              		.fpu fpv4-sp-d16
 1003              	HAL_NVIC_SetPriority:
 1004              	.LFB127:
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1005              		.loc 3 205 0
 1006              		.cfi_startproc
 1007              		@ args = 0, pretend = 0, frame = 24
 1008              		@ frame_needed = 1, uses_anonymous_args = 0
 1009 0000 80B5     		push	{r7, lr}
 1010              	.LCFI82:
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 86B0     		sub	sp, sp, #24
 1015              	.LCFI83:
 1016              		.cfi_def_cfa_offset 32
 1017 0004 00AF     		add	r7, sp, #0
 1018              	.LCFI84:
 1019              		.cfi_def_cfa_register 7
 1020 0006 0346     		mov	r3, r0
 1021 0008 B960     		str	r1, [r7, #8]
 1022 000a 7A60     		str	r2, [r7, #4]
 1023 000c FB73     		strb	r3, [r7, #15]
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
ARM GAS  /tmp/cccl8fOf.s 			page 62


 1024              		.loc 3 206 0
 1025 000e 0023     		movs	r3, #0
 1026 0010 7B61     		str	r3, [r7, #20]
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 1027              		.loc 3 212 0
 1028 0012 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 1029 0016 7861     		str	r0, [r7, #20]
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 1030              		.loc 3 214 0
 1031 0018 7A68     		ldr	r2, [r7, #4]
 1032 001a B968     		ldr	r1, [r7, #8]
 1033 001c 7869     		ldr	r0, [r7, #20]
 1034 001e FFF7FEFF 		bl	NVIC_EncodePriority
 1035 0022 0246     		mov	r2, r0
 1036 0024 97F90F30 		ldrsb	r3, [r7, #15]
 1037 0028 1146     		mov	r1, r2
 1038 002a 1846     		mov	r0, r3
 1039 002c FFF7FEFF 		bl	NVIC_SetPriority
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1040              		.loc 3 215 0
 1041 0030 00BF     		nop
 1042 0032 1837     		adds	r7, r7, #24
 1043              	.LCFI85:
 1044              		.cfi_def_cfa_offset 8
 1045 0034 BD46     		mov	sp, r7
 1046              	.LCFI86:
 1047              		.cfi_def_cfa_register 13
 1048              		@ sp needed
 1049 0036 80BD     		pop	{r7, pc}
 1050              		.cfi_endproc
 1051              	.LFE127:
 1053              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 1054              		.align	1
 1055              		.global	HAL_NVIC_EnableIRQ
 1056              		.syntax unified
 1057              		.thumb
 1058              		.thumb_func
 1059              		.fpu fpv4-sp-d16
 1061              	HAL_NVIC_EnableIRQ:
 1062              	.LFB128:
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         function should be called before.
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cccl8fOf.s 			page 63


 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1063              		.loc 3 227 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 8
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067 0000 80B5     		push	{r7, lr}
 1068              	.LCFI87:
 1069              		.cfi_def_cfa_offset 8
 1070              		.cfi_offset 7, -8
 1071              		.cfi_offset 14, -4
 1072 0002 82B0     		sub	sp, sp, #8
 1073              	.LCFI88:
 1074              		.cfi_def_cfa_offset 16
 1075 0004 00AF     		add	r7, sp, #0
 1076              	.LCFI89:
 1077              		.cfi_def_cfa_register 7
 1078 0006 0346     		mov	r3, r0
 1079 0008 FB71     		strb	r3, [r7, #7]
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable interrupt */
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 1080              		.loc 3 232 0
 1081 000a 97F90730 		ldrsb	r3, [r7, #7]
 1082 000e 1846     		mov	r0, r3
 1083 0010 FFF7FEFF 		bl	NVIC_EnableIRQ
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1084              		.loc 3 233 0
 1085 0014 00BF     		nop
 1086 0016 0837     		adds	r7, r7, #8
 1087              	.LCFI90:
 1088              		.cfi_def_cfa_offset 8
 1089 0018 BD46     		mov	sp, r7
 1090              	.LCFI91:
 1091              		.cfi_def_cfa_register 13
 1092              		@ sp needed
 1093 001a 80BD     		pop	{r7, pc}
 1094              		.cfi_endproc
 1095              	.LFE128:
 1097              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 1098              		.align	1
 1099              		.global	HAL_NVIC_DisableIRQ
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1103              		.fpu fpv4-sp-d16
 1105              	HAL_NVIC_DisableIRQ:
 1106              	.LFB129:
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
ARM GAS  /tmp/cccl8fOf.s 			page 64


 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1107              		.loc 3 243 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 8
 1110              		@ frame_needed = 1, uses_anonymous_args = 0
 1111 0000 80B5     		push	{r7, lr}
 1112              	.LCFI92:
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 14, -4
 1116 0002 82B0     		sub	sp, sp, #8
 1117              	.LCFI93:
 1118              		.cfi_def_cfa_offset 16
 1119 0004 00AF     		add	r7, sp, #0
 1120              	.LCFI94:
 1121              		.cfi_def_cfa_register 7
 1122 0006 0346     		mov	r3, r0
 1123 0008 FB71     		strb	r3, [r7, #7]
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable interrupt */
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 1124              		.loc 3 248 0
 1125 000a 97F90730 		ldrsb	r3, [r7, #7]
 1126 000e 1846     		mov	r0, r3
 1127 0010 FFF7FEFF 		bl	NVIC_DisableIRQ
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1128              		.loc 3 249 0
 1129 0014 00BF     		nop
 1130 0016 0837     		adds	r7, r7, #8
 1131              	.LCFI95:
 1132              		.cfi_def_cfa_offset 8
 1133 0018 BD46     		mov	sp, r7
 1134              	.LCFI96:
 1135              		.cfi_def_cfa_register 13
 1136              		@ sp needed
 1137 001a 80BD     		pop	{r7, pc}
 1138              		.cfi_endproc
 1139              	.LFE129:
 1141              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 1142              		.align	1
 1143              		.global	HAL_NVIC_SystemReset
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv4-sp-d16
 1149              	HAL_NVIC_SystemReset:
 1150              	.LFB130:
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
ARM GAS  /tmp/cccl8fOf.s 			page 65


 1151              		.loc 3 256 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 1, uses_anonymous_args = 0
 1155 0000 80B5     		push	{r7, lr}
 1156              	.LCFI97:
 1157              		.cfi_def_cfa_offset 8
 1158              		.cfi_offset 7, -8
 1159              		.cfi_offset 14, -4
 1160 0002 00AF     		add	r7, sp, #0
 1161              	.LCFI98:
 1162              		.cfi_def_cfa_register 7
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* System Reset */
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SystemReset();
 1163              		.loc 3 258 0
 1164 0004 FFF7FEFF 		bl	NVIC_SystemReset
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1165              		.loc 3 259 0
 1166 0008 00BF     		nop
 1167 000a 80BD     		pop	{r7, pc}
 1168              		.cfi_endproc
 1169              	.LFE130:
 1171              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 1172              		.align	1
 1173              		.global	HAL_SYSTICK_Config
 1174              		.syntax unified
 1175              		.thumb
 1176              		.thumb_func
 1177              		.fpu fpv4-sp-d16
 1179              	HAL_SYSTICK_Config:
 1180              	.LFB131:
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                  - 1  Function failed.
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1181              		.loc 3 269 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 8
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              	.LCFI99:
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 82B0     		sub	sp, sp, #8
 1191              	.LCFI100:
 1192              		.cfi_def_cfa_offset 16
 1193 0004 00AF     		add	r7, sp, #0
 1194              	.LCFI101:
 1195              		.cfi_def_cfa_register 7
 1196 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cccl8fOf.s 			page 66


 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 1197              		.loc 3 270 0
 1198 0008 7868     		ldr	r0, [r7, #4]
 1199 000a FFF7FEFF 		bl	SysTick_Config
 1200 000e 0346     		mov	r3, r0
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1201              		.loc 3 271 0
 1202 0010 1846     		mov	r0, r3
 1203 0012 0837     		adds	r7, r7, #8
 1204              	.LCFI102:
 1205              		.cfi_def_cfa_offset 8
 1206 0014 BD46     		mov	sp, r7
 1207              	.LCFI103:
 1208              		.cfi_def_cfa_register 13
 1209              		@ sp needed
 1210 0016 80BD     		pop	{r7, pc}
 1211              		.cfi_endproc
 1212              	.LFE131:
 1214              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 1215              		.align	1
 1216              		.global	HAL_NVIC_GetPriorityGrouping
 1217              		.syntax unified
 1218              		.thumb
 1219              		.thumb_func
 1220              		.fpu fpv4-sp-d16
 1222              	HAL_NVIC_GetPriorityGrouping:
 1223              	.LFB132:
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @}
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief   Cortex control functions
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1224              		.loc 3 297 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cccl8fOf.s 			page 67


 1228 0000 80B5     		push	{r7, lr}
 1229              	.LCFI104:
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 7, -8
 1232              		.cfi_offset 14, -4
 1233 0002 00AF     		add	r7, sp, #0
 1234              	.LCFI105:
 1235              		.cfi_def_cfa_register 7
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 1236              		.loc 3 299 0
 1237 0004 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 1238 0008 0346     		mov	r3, r0
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1239              		.loc 3 300 0
 1240 000a 1846     		mov	r0, r3
 1241 000c 80BD     		pop	{r7, pc}
 1242              		.cfi_endproc
 1243              	.LFE132:
 1245              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1246              		.align	1
 1247              		.global	HAL_NVIC_GetPriority
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1251              		.fpu fpv4-sp-d16
 1253              	HAL_NVIC_GetPriority:
 1254              	.LFB133:
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      1 bit for subpriority
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      0 bit for subpriority
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1255              		.loc 3 324 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 16
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cccl8fOf.s 			page 68


 1260              	.LCFI106:
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 84B0     		sub	sp, sp, #16
 1265              	.LCFI107:
 1266              		.cfi_def_cfa_offset 24
 1267 0004 00AF     		add	r7, sp, #0
 1268              	.LCFI108:
 1269              		.cfi_def_cfa_register 7
 1270 0006 B960     		str	r1, [r7, #8]
 1271 0008 7A60     		str	r2, [r7, #4]
 1272 000a 3B60     		str	r3, [r7]
 1273 000c 0346     		mov	r3, r0
 1274 000e FB73     		strb	r3, [r7, #15]
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1275              		.loc 3 328 0
 1276 0010 97F90F30 		ldrsb	r3, [r7, #15]
 1277 0014 1846     		mov	r0, r3
 1278 0016 FFF7FEFF 		bl	NVIC_GetPriority
 1279 001a 3B68     		ldr	r3, [r7]
 1280 001c 7A68     		ldr	r2, [r7, #4]
 1281 001e B968     		ldr	r1, [r7, #8]
 1282 0020 FFF7FEFF 		bl	NVIC_DecodePriority
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1283              		.loc 3 329 0
 1284 0024 00BF     		nop
 1285 0026 1037     		adds	r7, r7, #16
 1286              	.LCFI109:
 1287              		.cfi_def_cfa_offset 8
 1288 0028 BD46     		mov	sp, r7
 1289              	.LCFI110:
 1290              		.cfi_def_cfa_register 13
 1291              		@ sp needed
 1292 002a 80BD     		pop	{r7, pc}
 1293              		.cfi_endproc
 1294              	.LFE133:
 1296              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1297              		.align	1
 1298              		.global	HAL_NVIC_SetPendingIRQ
 1299              		.syntax unified
 1300              		.thumb
 1301              		.thumb_func
 1302              		.fpu fpv4-sp-d16
 1304              	HAL_NVIC_SetPendingIRQ:
 1305              	.LFB134:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
ARM GAS  /tmp/cccl8fOf.s 			page 69


 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1306              		.loc 3 339 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 8
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310 0000 80B5     		push	{r7, lr}
 1311              	.LCFI111:
 1312              		.cfi_def_cfa_offset 8
 1313              		.cfi_offset 7, -8
 1314              		.cfi_offset 14, -4
 1315 0002 82B0     		sub	sp, sp, #8
 1316              	.LCFI112:
 1317              		.cfi_def_cfa_offset 16
 1318 0004 00AF     		add	r7, sp, #0
 1319              	.LCFI113:
 1320              		.cfi_def_cfa_register 7
 1321 0006 0346     		mov	r3, r0
 1322 0008 FB71     		strb	r3, [r7, #7]
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set interrupt pending */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1323              		.loc 3 341 0
 1324 000a 97F90730 		ldrsb	r3, [r7, #7]
 1325 000e 1846     		mov	r0, r3
 1326 0010 FFF7FEFF 		bl	NVIC_SetPendingIRQ
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1327              		.loc 3 342 0
 1328 0014 00BF     		nop
 1329 0016 0837     		adds	r7, r7, #8
 1330              	.LCFI114:
 1331              		.cfi_def_cfa_offset 8
 1332 0018 BD46     		mov	sp, r7
 1333              	.LCFI115:
 1334              		.cfi_def_cfa_register 13
 1335              		@ sp needed
 1336 001a 80BD     		pop	{r7, pc}
 1337              		.cfi_endproc
 1338              	.LFE134:
 1340              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1341              		.align	1
 1342              		.global	HAL_NVIC_GetPendingIRQ
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	HAL_NVIC_GetPendingIRQ:
 1349              	.LFB135:
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
ARM GAS  /tmp/cccl8fOf.s 			page 70


 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1350              		.loc 3 354 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 8
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 80B5     		push	{r7, lr}
 1355              	.LCFI116:
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 7, -8
 1358              		.cfi_offset 14, -4
 1359 0002 82B0     		sub	sp, sp, #8
 1360              	.LCFI117:
 1361              		.cfi_def_cfa_offset 16
 1362 0004 00AF     		add	r7, sp, #0
 1363              	.LCFI118:
 1364              		.cfi_def_cfa_register 7
 1365 0006 0346     		mov	r3, r0
 1366 0008 FB71     		strb	r3, [r7, #7]
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1367              		.loc 3 356 0
 1368 000a 97F90730 		ldrsb	r3, [r7, #7]
 1369 000e 1846     		mov	r0, r3
 1370 0010 FFF7FEFF 		bl	NVIC_GetPendingIRQ
 1371 0014 0346     		mov	r3, r0
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1372              		.loc 3 357 0
 1373 0016 1846     		mov	r0, r3
 1374 0018 0837     		adds	r7, r7, #8
 1375              	.LCFI119:
 1376              		.cfi_def_cfa_offset 8
 1377 001a BD46     		mov	sp, r7
 1378              	.LCFI120:
 1379              		.cfi_def_cfa_register 13
 1380              		@ sp needed
 1381 001c 80BD     		pop	{r7, pc}
 1382              		.cfi_endproc
 1383              	.LFE135:
 1385              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1386              		.align	1
 1387              		.global	HAL_NVIC_ClearPendingIRQ
 1388              		.syntax unified
 1389              		.thumb
 1390              		.thumb_func
 1391              		.fpu fpv4-sp-d16
 1393              	HAL_NVIC_ClearPendingIRQ:
 1394              	.LFB136:
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
ARM GAS  /tmp/cccl8fOf.s 			page 71


 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1395              		.loc 3 367 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 8
 1398              		@ frame_needed = 1, uses_anonymous_args = 0
 1399 0000 80B5     		push	{r7, lr}
 1400              	.LCFI121:
 1401              		.cfi_def_cfa_offset 8
 1402              		.cfi_offset 7, -8
 1403              		.cfi_offset 14, -4
 1404 0002 82B0     		sub	sp, sp, #8
 1405              	.LCFI122:
 1406              		.cfi_def_cfa_offset 16
 1407 0004 00AF     		add	r7, sp, #0
 1408              	.LCFI123:
 1409              		.cfi_def_cfa_register 7
 1410 0006 0346     		mov	r3, r0
 1411 0008 FB71     		strb	r3, [r7, #7]
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Clear pending interrupt */
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1412              		.loc 3 369 0
 1413 000a 97F90730 		ldrsb	r3, [r7, #7]
 1414 000e 1846     		mov	r0, r3
 1415 0010 FFF7FEFF 		bl	NVIC_ClearPendingIRQ
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1416              		.loc 3 370 0
 1417 0014 00BF     		nop
 1418 0016 0837     		adds	r7, r7, #8
 1419              	.LCFI124:
 1420              		.cfi_def_cfa_offset 8
 1421 0018 BD46     		mov	sp, r7
 1422              	.LCFI125:
 1423              		.cfi_def_cfa_register 13
 1424              		@ sp needed
 1425 001a 80BD     		pop	{r7, pc}
 1426              		.cfi_endproc
 1427              	.LFE136:
 1429              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1430              		.align	1
 1431              		.global	HAL_NVIC_GetActive
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1435              		.fpu fpv4-sp-d16
 1437              	HAL_NVIC_GetActive:
 1438              	.LFB137:
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
ARM GAS  /tmp/cccl8fOf.s 			page 72


 1439              		.loc 3 381 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 8
 1442              		@ frame_needed = 1, uses_anonymous_args = 0
 1443 0000 80B5     		push	{r7, lr}
 1444              	.LCFI126:
 1445              		.cfi_def_cfa_offset 8
 1446              		.cfi_offset 7, -8
 1447              		.cfi_offset 14, -4
 1448 0002 82B0     		sub	sp, sp, #8
 1449              	.LCFI127:
 1450              		.cfi_def_cfa_offset 16
 1451 0004 00AF     		add	r7, sp, #0
 1452              	.LCFI128:
 1453              		.cfi_def_cfa_register 7
 1454 0006 0346     		mov	r3, r0
 1455 0008 FB71     		strb	r3, [r7, #7]
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1456              		.loc 3 383 0
 1457 000a 97F90730 		ldrsb	r3, [r7, #7]
 1458 000e 1846     		mov	r0, r3
 1459 0010 FFF7FEFF 		bl	NVIC_GetActive
 1460 0014 0346     		mov	r3, r0
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1461              		.loc 3 384 0
 1462 0016 1846     		mov	r0, r3
 1463 0018 0837     		adds	r7, r7, #8
 1464              	.LCFI129:
 1465              		.cfi_def_cfa_offset 8
 1466 001a BD46     		mov	sp, r7
 1467              	.LCFI130:
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 001c 80BD     		pop	{r7, pc}
 1471              		.cfi_endproc
 1472              	.LFE137:
 1474              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1475              		.align	1
 1476              		.global	HAL_SYSTICK_CLKSourceConfig
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1480              		.fpu fpv4-sp-d16
 1482              	HAL_SYSTICK_CLKSourceConfig:
 1483              	.LFB138:
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
ARM GAS  /tmp/cccl8fOf.s 			page 73


 1484              		.loc 3 395 0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 8
 1487              		@ frame_needed = 1, uses_anonymous_args = 0
 1488              		@ link register save eliminated.
 1489 0000 80B4     		push	{r7}
 1490              	.LCFI131:
 1491              		.cfi_def_cfa_offset 4
 1492              		.cfi_offset 7, -4
 1493 0002 83B0     		sub	sp, sp, #12
 1494              	.LCFI132:
 1495              		.cfi_def_cfa_offset 16
 1496 0004 00AF     		add	r7, sp, #0
 1497              	.LCFI133:
 1498              		.cfi_def_cfa_register 7
 1499 0006 7860     		str	r0, [r7, #4]
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1500              		.loc 3 398 0
 1501 0008 7B68     		ldr	r3, [r7, #4]
 1502 000a 042B     		cmp	r3, #4
 1503 000c 06D1     		bne	.L72
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 1504              		.loc 3 400 0
 1505 000e 094A     		ldr	r2, .L75
 1506 0010 084B     		ldr	r3, .L75
 1507 0012 1B68     		ldr	r3, [r3]
 1508 0014 43F00403 		orr	r3, r3, #4
 1509 0018 1360     		str	r3, [r2]
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1510              		.loc 3 406 0
 1511 001a 05E0     		b	.L74
 1512              	.L72:
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 1513              		.loc 3 404 0
 1514 001c 054A     		ldr	r2, .L75
 1515 001e 054B     		ldr	r3, .L75
 1516 0020 1B68     		ldr	r3, [r3]
 1517 0022 23F00403 		bic	r3, r3, #4
 1518 0026 1360     		str	r3, [r2]
 1519              	.L74:
 1520              		.loc 3 406 0
 1521 0028 00BF     		nop
 1522 002a 0C37     		adds	r7, r7, #12
 1523              	.LCFI134:
 1524              		.cfi_def_cfa_offset 4
 1525 002c BD46     		mov	sp, r7
 1526              	.LCFI135:
 1527              		.cfi_def_cfa_register 13
 1528              		@ sp needed
ARM GAS  /tmp/cccl8fOf.s 			page 74


 1529 002e 5DF8047B 		ldr	r7, [sp], #4
 1530              	.LCFI136:
 1531              		.cfi_restore 7
 1532              		.cfi_def_cfa_offset 0
 1533 0032 7047     		bx	lr
 1534              	.L76:
 1535              		.align	2
 1536              	.L75:
 1537 0034 10E000E0 		.word	-536813552
 1538              		.cfi_endproc
 1539              	.LFE138:
 1541              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1542              		.align	1
 1543              		.global	HAL_SYSTICK_IRQHandler
 1544              		.syntax unified
 1545              		.thumb
 1546              		.thumb_func
 1547              		.fpu fpv4-sp-d16
 1549              	HAL_SYSTICK_IRQHandler:
 1550              	.LFB139:
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1551              		.loc 3 413 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555 0000 80B5     		push	{r7, lr}
 1556              	.LCFI137:
 1557              		.cfi_def_cfa_offset 8
 1558              		.cfi_offset 7, -8
 1559              		.cfi_offset 14, -4
 1560 0002 00AF     		add	r7, sp, #0
 1561              	.LCFI138:
 1562              		.cfi_def_cfa_register 7
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1563              		.loc 3 414 0
 1564 0004 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1565              		.loc 3 415 0
 1566 0008 00BF     		nop
 1567 000a 80BD     		pop	{r7, pc}
 1568              		.cfi_endproc
 1569              	.LFE139:
 1571              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1572              		.align	1
 1573              		.weak	HAL_SYSTICK_Callback
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1577              		.fpu fpv4-sp-d16
 1579              	HAL_SYSTICK_Callback:
 1580              	.LFB140:
ARM GAS  /tmp/cccl8fOf.s 			page 75


 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1581              		.loc 3 422 0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 1, uses_anonymous_args = 0
 1585              		@ link register save eliminated.
 1586 0000 80B4     		push	{r7}
 1587              	.LCFI139:
 1588              		.cfi_def_cfa_offset 4
 1589              		.cfi_offset 7, -4
 1590 0002 00AF     		add	r7, sp, #0
 1591              	.LCFI140:
 1592              		.cfi_def_cfa_register 7
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    */
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1593              		.loc 3 426 0
 1594 0004 00BF     		nop
 1595 0006 BD46     		mov	sp, r7
 1596              	.LCFI141:
 1597              		.cfi_def_cfa_register 13
 1598              		@ sp needed
 1599 0008 5DF8047B 		ldr	r7, [sp], #4
 1600              	.LCFI142:
 1601              		.cfi_restore 7
 1602              		.cfi_def_cfa_offset 0
 1603 000c 7047     		bx	lr
 1604              		.cfi_endproc
 1605              	.LFE140:
 1607              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1608              		.align	1
 1609              		.global	HAL_MPU_ConfigRegion
 1610              		.syntax unified
 1611              		.thumb
 1612              		.thumb_func
 1613              		.fpu fpv4-sp-d16
 1615              	HAL_MPU_ConfigRegion:
 1616              	.LFB141:
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                the initialization and configuration information.
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1617              		.loc 3 436 0
 1618              		.cfi_startproc
ARM GAS  /tmp/cccl8fOf.s 			page 76


 1619              		@ args = 0, pretend = 0, frame = 8
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 1622 0000 80B4     		push	{r7}
 1623              	.LCFI143:
 1624              		.cfi_def_cfa_offset 4
 1625              		.cfi_offset 7, -4
 1626 0002 83B0     		sub	sp, sp, #12
 1627              	.LCFI144:
 1628              		.cfi_def_cfa_offset 16
 1629 0004 00AF     		add	r7, sp, #0
 1630              	.LCFI145:
 1631              		.cfi_def_cfa_register 7
 1632 0006 7860     		str	r0, [r7, #4]
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1633              		.loc 3 442 0
 1634 0008 1E4A     		ldr	r2, .L83
 1635 000a 7B68     		ldr	r3, [r7, #4]
 1636 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1637 000e 9360     		str	r3, [r2, #8]
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 1638              		.loc 3 444 0
 1639 0010 7B68     		ldr	r3, [r7, #4]
 1640 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1641 0014 002B     		cmp	r3, #0
 1642 0016 28D0     		beq	.L80
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     /* Check the parameters */
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1643              		.loc 3 456 0
 1644 0018 1A4A     		ldr	r2, .L83
 1645 001a 7B68     		ldr	r3, [r7, #4]
 1646 001c 5B68     		ldr	r3, [r3, #4]
 1647 001e D360     		str	r3, [r2, #12]
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1648              		.loc 3 457 0
 1649 0020 1849     		ldr	r1, .L83
 1650 0022 7B68     		ldr	r3, [r7, #4]
 1651 0024 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1652 0026 1A07     		lsls	r2, r3, #28
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1653              		.loc 3 458 0
ARM GAS  /tmp/cccl8fOf.s 			page 77


 1654 0028 7B68     		ldr	r3, [r7, #4]
 1655 002a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1656 002c 1B06     		lsls	r3, r3, #24
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1657              		.loc 3 457 0
 1658 002e 1A43     		orrs	r2, r2, r3
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1659              		.loc 3 459 0
 1660 0030 7B68     		ldr	r3, [r7, #4]
 1661 0032 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1662 0034 DB04     		lsls	r3, r3, #19
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1663              		.loc 3 458 0
 1664 0036 1A43     		orrs	r2, r2, r3
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 1665              		.loc 3 460 0
 1666 0038 7B68     		ldr	r3, [r7, #4]
 1667 003a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1668 003c 9B04     		lsls	r3, r3, #18
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1669              		.loc 3 459 0
 1670 003e 1A43     		orrs	r2, r2, r3
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1671              		.loc 3 461 0
 1672 0040 7B68     		ldr	r3, [r7, #4]
 1673 0042 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1674 0044 5B04     		lsls	r3, r3, #17
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 1675              		.loc 3 460 0
 1676 0046 1A43     		orrs	r2, r2, r3
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1677              		.loc 3 462 0
 1678 0048 7B68     		ldr	r3, [r7, #4]
 1679 004a DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1680 004c 1B04     		lsls	r3, r3, #16
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1681              		.loc 3 461 0
 1682 004e 1A43     		orrs	r2, r2, r3
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1683              		.loc 3 463 0
 1684 0050 7B68     		ldr	r3, [r7, #4]
 1685 0052 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1686 0054 1B02     		lsls	r3, r3, #8
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1687              		.loc 3 462 0
 1688 0056 1A43     		orrs	r2, r2, r3
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1689              		.loc 3 464 0
 1690 0058 7B68     		ldr	r3, [r7, #4]
 1691 005a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1692 005c 5B00     		lsls	r3, r3, #1
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1693              		.loc 3 463 0
 1694 005e 1343     		orrs	r3, r3, r2
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 1695              		.loc 3 465 0
 1696 0060 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/cccl8fOf.s 			page 78


 1697 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1698              		.loc 3 464 0
 1699 0064 1343     		orrs	r3, r3, r2
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1700              		.loc 3 457 0
 1701 0066 0B61     		str	r3, [r1, #16]
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1702              		.loc 3 472 0
 1703 0068 05E0     		b	.L82
 1704              	.L80:
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1705              		.loc 3 469 0
 1706 006a 064B     		ldr	r3, .L83
 1707 006c 0022     		movs	r2, #0
 1708 006e DA60     		str	r2, [r3, #12]
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 1709              		.loc 3 470 0
 1710 0070 044B     		ldr	r3, .L83
 1711 0072 0022     		movs	r2, #0
 1712 0074 1A61     		str	r2, [r3, #16]
 1713              	.L82:
 1714              		.loc 3 472 0
 1715 0076 00BF     		nop
 1716 0078 0C37     		adds	r7, r7, #12
 1717              	.LCFI146:
 1718              		.cfi_def_cfa_offset 4
 1719 007a BD46     		mov	sp, r7
 1720              	.LCFI147:
 1721              		.cfi_def_cfa_register 13
 1722              		@ sp needed
 1723 007c 5DF8047B 		ldr	r7, [sp], #4
 1724              	.LCFI148:
 1725              		.cfi_restore 7
 1726              		.cfi_def_cfa_offset 0
 1727 0080 7047     		bx	lr
 1728              	.L84:
 1729 0082 00BF     		.align	2
 1730              	.L83:
 1731 0084 90ED00E0 		.word	-536810096
 1732              		.cfi_endproc
 1733              	.LFE141:
 1735              		.text
 1736              	.Letext0:
 1737              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 1738              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1739              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1740              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 1741              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1742              		.file 9 "/usr/arm-none-eabi/include/sys/lock.h"
 1743              		.file 10 "/usr/arm-none-eabi/include/sys/_types.h"
ARM GAS  /tmp/cccl8fOf.s 			page 79


 1744              		.file 11 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 1745              		.file 12 "/usr/arm-none-eabi/include/sys/reent.h"
 1746              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  /tmp/cccl8fOf.s 			page 80


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_cortex.c
     /tmp/cccl8fOf.s:18     .text.NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/cccl8fOf.s:24     .text.NVIC_SetPriorityGrouping:0000000000000000 NVIC_SetPriorityGrouping
     /tmp/cccl8fOf.s:87     .text.NVIC_SetPriorityGrouping:0000000000000044 $d
     /tmp/cccl8fOf.s:92     .text.NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/cccl8fOf.s:98     .text.NVIC_GetPriorityGrouping:0000000000000000 NVIC_GetPriorityGrouping
     /tmp/cccl8fOf.s:131    .text.NVIC_GetPriorityGrouping:0000000000000018 $d
     /tmp/cccl8fOf.s:136    .text.NVIC_EnableIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:142    .text.NVIC_EnableIRQ:0000000000000000 NVIC_EnableIRQ
     /tmp/cccl8fOf.s:187    .text.NVIC_EnableIRQ:0000000000000030 $d
     /tmp/cccl8fOf.s:192    .text.NVIC_DisableIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:198    .text.NVIC_DisableIRQ:0000000000000000 NVIC_DisableIRQ
     /tmp/cccl8fOf.s:244    .text.NVIC_DisableIRQ:0000000000000030 $d
     /tmp/cccl8fOf.s:249    .text.NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:255    .text.NVIC_GetPendingIRQ:0000000000000000 NVIC_GetPendingIRQ
     /tmp/cccl8fOf.s:301    .text.NVIC_GetPendingIRQ:0000000000000034 $d
     /tmp/cccl8fOf.s:306    .text.NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:312    .text.NVIC_SetPendingIRQ:0000000000000000 NVIC_SetPendingIRQ
     /tmp/cccl8fOf.s:358    .text.NVIC_SetPendingIRQ:0000000000000030 $d
     /tmp/cccl8fOf.s:363    .text.NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:369    .text.NVIC_ClearPendingIRQ:0000000000000000 NVIC_ClearPendingIRQ
     /tmp/cccl8fOf.s:415    .text.NVIC_ClearPendingIRQ:0000000000000030 $d
     /tmp/cccl8fOf.s:420    .text.NVIC_GetActive:0000000000000000 $t
     /tmp/cccl8fOf.s:426    .text.NVIC_GetActive:0000000000000000 NVIC_GetActive
     /tmp/cccl8fOf.s:472    .text.NVIC_GetActive:0000000000000034 $d
     /tmp/cccl8fOf.s:477    .text.NVIC_SetPriority:0000000000000000 $t
     /tmp/cccl8fOf.s:483    .text.NVIC_SetPriority:0000000000000000 NVIC_SetPriority
     /tmp/cccl8fOf.s:548    .text.NVIC_SetPriority:000000000000004c $d
     /tmp/cccl8fOf.s:554    .text.NVIC_GetPriority:0000000000000000 $t
     /tmp/cccl8fOf.s:560    .text.NVIC_GetPriority:0000000000000000 NVIC_GetPriority
     /tmp/cccl8fOf.s:621    .text.NVIC_GetPriority:0000000000000048 $d
     /tmp/cccl8fOf.s:627    .text.NVIC_EncodePriority:0000000000000000 $t
     /tmp/cccl8fOf.s:633    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
     /tmp/cccl8fOf.s:715    .text.NVIC_DecodePriority:0000000000000000 $t
     /tmp/cccl8fOf.s:721    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
     /tmp/cccl8fOf.s:806    .text.NVIC_SystemReset:0000000000000000 $t
     /tmp/cccl8fOf.s:812    .text.NVIC_SystemReset:0000000000000000 NVIC_SystemReset
     /tmp/cccl8fOf.s:876    .text.NVIC_SystemReset:0000000000000020 $d
     /tmp/cccl8fOf.s:882    .text.SysTick_Config:0000000000000000 $t
     /tmp/cccl8fOf.s:888    .text.SysTick_Config:0000000000000000 SysTick_Config
     /tmp/cccl8fOf.s:948    .text.SysTick_Config:0000000000000040 $d
     /tmp/cccl8fOf.s:953    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/cccl8fOf.s:960    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/cccl8fOf.s:996    .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/cccl8fOf.s:1003   .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/cccl8fOf.s:1054   .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:1061   .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/cccl8fOf.s:1098   .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:1105   .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/cccl8fOf.s:1142   .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/cccl8fOf.s:1149   .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/cccl8fOf.s:1172   .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/cccl8fOf.s:1179   .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/cccl8fOf.s:1215   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/cccl8fOf.s:1222   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/cccl8fOf.s:1246   .text.HAL_NVIC_GetPriority:0000000000000000 $t
ARM GAS  /tmp/cccl8fOf.s 			page 81


     /tmp/cccl8fOf.s:1253   .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/cccl8fOf.s:1297   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:1304   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/cccl8fOf.s:1341   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:1348   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/cccl8fOf.s:1386   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/cccl8fOf.s:1393   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/cccl8fOf.s:1430   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/cccl8fOf.s:1437   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/cccl8fOf.s:1475   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/cccl8fOf.s:1482   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/cccl8fOf.s:1537   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000034 $d
     /tmp/cccl8fOf.s:1542   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/cccl8fOf.s:1549   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/cccl8fOf.s:1579   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/cccl8fOf.s:1572   .text.HAL_SYSTICK_Callback:0000000000000000 $t
     /tmp/cccl8fOf.s:1608   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/cccl8fOf.s:1615   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/cccl8fOf.s:1731   .text.HAL_MPU_ConfigRegion:0000000000000084 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
