ARM GAS  /tmp/ccMdFX4h.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_UART_Init:
  26              	.LFB126:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @version V1.5.2
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @date    12-September-2016
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
ARM GAS  /tmp/ccMdFX4h.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt and Error Interrupts) are managed using the macros
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit and receive 
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *      without specific prior written permission.
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /tmp/ccMdFX4h.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_LPUART_BRR_MIN           ((uint32_t)0x00000300)  /* LPUART BRR minimum authorized valu
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_LPUART_BRR_MAX           ((uint32_t)0x000FFFFF)  /* LPUART BRR maximum authorized valu
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/ccMdFX4h.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit, 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the 
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
ARM GAS  /tmp/ccMdFX4h.s 			page 5


 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  28              		.loc 1 228 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
  44              		.loc 1 230 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 002B     		cmp	r3, #0
  47 000c 01D1     		bne	.L2
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  48              		.loc 1 232 0
  49 000e 0123     		movs	r3, #1
  50 0010 43E0     		b	.L3
  51              	.L2:
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
ARM GAS  /tmp/ccMdFX4h.s 			page 6


 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
  52              		.loc 1 246 0
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F86930 		ldrb	r3, [r3, #105]
  55 0018 DBB2     		uxtb	r3, r3
  56 001a 002B     		cmp	r3, #0
  57 001c 06D1     		bne	.L4
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  58              		.loc 1 249 0
  59 001e 7B68     		ldr	r3, [r7, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 83F86820 		strb	r2, [r3, #104]
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  62              		.loc 1 252 0
  63 0026 7868     		ldr	r0, [r7, #4]
  64 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  65              	.L4:
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  66              		.loc 1 255 0
  67 002c 7B68     		ldr	r3, [r7, #4]
  68 002e 2422     		movs	r2, #36
  69 0030 83F86920 		strb	r2, [r3, #105]
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  70              		.loc 1 258 0
  71 0034 7B68     		ldr	r3, [r7, #4]
  72 0036 1B68     		ldr	r3, [r3]
  73 0038 7A68     		ldr	r2, [r7, #4]
  74 003a 1268     		ldr	r2, [r2]
  75 003c 1268     		ldr	r2, [r2]
  76 003e 22F00102 		bic	r2, r2, #1
  77 0042 1A60     		str	r2, [r3]
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  78              		.loc 1 261 0
  79 0044 7868     		ldr	r0, [r7, #4]
  80 0046 FFF7FEFF 		bl	UART_SetConfig
  81 004a 0346     		mov	r3, r0
  82 004c 012B     		cmp	r3, #1
ARM GAS  /tmp/ccMdFX4h.s 			page 7


  83 004e 01D1     		bne	.L5
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  84              		.loc 1 263 0
  85 0050 0123     		movs	r3, #1
  86 0052 22E0     		b	.L3
  87              	.L5:
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  88              		.loc 1 266 0
  89 0054 7B68     		ldr	r3, [r7, #4]
  90 0056 5B6A     		ldr	r3, [r3, #36]
  91 0058 002B     		cmp	r3, #0
  92 005a 02D0     		beq	.L6
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  93              		.loc 1 268 0
  94 005c 7868     		ldr	r0, [r7, #4]
  95 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
  96              	.L6:
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  97              		.loc 1 274 0
  98 0062 7B68     		ldr	r3, [r7, #4]
  99 0064 1B68     		ldr	r3, [r3]
 100 0066 7A68     		ldr	r2, [r7, #4]
 101 0068 1268     		ldr	r2, [r2]
 102 006a 5268     		ldr	r2, [r2, #4]
 103 006c 22F49042 		bic	r2, r2, #18432
 104 0070 5A60     		str	r2, [r3, #4]
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 105              		.loc 1 275 0
 106 0072 7B68     		ldr	r3, [r7, #4]
 107 0074 1B68     		ldr	r3, [r3]
 108 0076 7A68     		ldr	r2, [r7, #4]
 109 0078 1268     		ldr	r2, [r2]
 110 007a 9268     		ldr	r2, [r2, #8]
 111 007c 22F02A02 		bic	r2, r2, #42
 112 0080 9A60     		str	r2, [r3, #8]
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 113              		.loc 1 278 0
 114 0082 7B68     		ldr	r3, [r7, #4]
 115 0084 1B68     		ldr	r3, [r3]
 116 0086 7A68     		ldr	r2, [r7, #4]
 117 0088 1268     		ldr	r2, [r2]
 118 008a 1268     		ldr	r2, [r2]
 119 008c 42F00102 		orr	r2, r2, #1
 120 0090 1A60     		str	r2, [r3]
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
ARM GAS  /tmp/ccMdFX4h.s 			page 8


 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 121              		.loc 1 281 0
 122 0092 7868     		ldr	r0, [r7, #4]
 123 0094 FFF7FEFF 		bl	UART_CheckIdleState
 124 0098 0346     		mov	r3, r0
 125              	.L3:
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 126              		.loc 1 282 0
 127 009a 1846     		mov	r0, r3
 128 009c 0837     		adds	r7, r7, #8
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 009e BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 00a0 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE126:
 139              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_HalfDuplex_Init
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	HAL_HalfDuplex_Init:
 148              	.LFB127:
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 149              		.loc 1 291 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI5:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
 159              	.LCFI6:
 160              		.cfi_def_cfa_offset 16
 161 0004 00AF     		add	r7, sp, #0
 162              	.LCFI7:
 163              		.cfi_def_cfa_register 7
 164 0006 7860     		str	r0, [r7, #4]
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 165              		.loc 1 293 0
 166 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 9


 167 000a 002B     		cmp	r3, #0
 168 000c 01D1     		bne	.L8
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 169              		.loc 1 295 0
 170 000e 0123     		movs	r3, #1
 171 0010 4BE0     		b	.L9
 172              	.L8:
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 173              		.loc 1 301 0
 174 0012 7B68     		ldr	r3, [r7, #4]
 175 0014 93F86930 		ldrb	r3, [r3, #105]
 176 0018 DBB2     		uxtb	r3, r3
 177 001a 002B     		cmp	r3, #0
 178 001c 06D1     		bne	.L10
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 179              		.loc 1 304 0
 180 001e 7B68     		ldr	r3, [r7, #4]
 181 0020 0022     		movs	r2, #0
 182 0022 83F86820 		strb	r2, [r3, #104]
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 183              		.loc 1 307 0
 184 0026 7868     		ldr	r0, [r7, #4]
 185 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 186              	.L10:
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 187              		.loc 1 310 0
 188 002c 7B68     		ldr	r3, [r7, #4]
 189 002e 2422     		movs	r2, #36
 190 0030 83F86920 		strb	r2, [r3, #105]
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 191              		.loc 1 313 0
 192 0034 7B68     		ldr	r3, [r7, #4]
 193 0036 1B68     		ldr	r3, [r3]
 194 0038 7A68     		ldr	r2, [r7, #4]
 195 003a 1268     		ldr	r2, [r2]
 196 003c 1268     		ldr	r2, [r2]
 197 003e 22F00102 		bic	r2, r2, #1
 198 0042 1A60     		str	r2, [r3]
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 199              		.loc 1 316 0
 200 0044 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 10


 201 0046 FFF7FEFF 		bl	UART_SetConfig
 202 004a 0346     		mov	r3, r0
 203 004c 012B     		cmp	r3, #1
 204 004e 01D1     		bne	.L11
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 205              		.loc 1 318 0
 206 0050 0123     		movs	r3, #1
 207 0052 2AE0     		b	.L9
 208              	.L11:
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 209              		.loc 1 321 0
 210 0054 7B68     		ldr	r3, [r7, #4]
 211 0056 5B6A     		ldr	r3, [r3, #36]
 212 0058 002B     		cmp	r3, #0
 213 005a 02D0     		beq	.L12
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 214              		.loc 1 323 0
 215 005c 7868     		ldr	r0, [r7, #4]
 216 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 217              	.L12:
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 218              		.loc 1 329 0
 219 0062 7B68     		ldr	r3, [r7, #4]
 220 0064 1B68     		ldr	r3, [r3]
 221 0066 7A68     		ldr	r2, [r7, #4]
 222 0068 1268     		ldr	r2, [r2]
 223 006a 5268     		ldr	r2, [r2, #4]
 224 006c 22F49042 		bic	r2, r2, #18432
 225 0070 5A60     		str	r2, [r3, #4]
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 226              		.loc 1 330 0
 227 0072 7B68     		ldr	r3, [r7, #4]
 228 0074 1B68     		ldr	r3, [r3]
 229 0076 7A68     		ldr	r2, [r7, #4]
 230 0078 1268     		ldr	r2, [r2]
 231 007a 9268     		ldr	r2, [r2, #8]
 232 007c 22F02202 		bic	r2, r2, #34
 233 0080 9A60     		str	r2, [r3, #8]
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 234              		.loc 1 333 0
 235 0082 7B68     		ldr	r3, [r7, #4]
 236 0084 1B68     		ldr	r3, [r3]
 237 0086 7A68     		ldr	r2, [r7, #4]
 238 0088 1268     		ldr	r2, [r2]
 239 008a 9268     		ldr	r2, [r2, #8]
 240 008c 42F00802 		orr	r2, r2, #8
ARM GAS  /tmp/ccMdFX4h.s 			page 11


 241 0090 9A60     		str	r2, [r3, #8]
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 242              		.loc 1 336 0
 243 0092 7B68     		ldr	r3, [r7, #4]
 244 0094 1B68     		ldr	r3, [r3]
 245 0096 7A68     		ldr	r2, [r7, #4]
 246 0098 1268     		ldr	r2, [r2]
 247 009a 1268     		ldr	r2, [r2]
 248 009c 42F00102 		orr	r2, r2, #1
 249 00a0 1A60     		str	r2, [r3]
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 250              		.loc 1 339 0
 251 00a2 7868     		ldr	r0, [r7, #4]
 252 00a4 FFF7FEFF 		bl	UART_CheckIdleState
 253 00a8 0346     		mov	r3, r0
 254              	.L9:
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 255              		.loc 1 340 0
 256 00aa 1846     		mov	r0, r3
 257 00ac 0837     		adds	r7, r7, #8
 258              	.LCFI8:
 259              		.cfi_def_cfa_offset 8
 260 00ae BD46     		mov	sp, r7
 261              	.LCFI9:
 262              		.cfi_def_cfa_register 13
 263              		@ sp needed
 264 00b0 80BD     		pop	{r7, pc}
 265              		.cfi_endproc
 266              	.LFE127:
 268              		.section	.text.HAL_LIN_Init,"ax",%progbits
 269              		.align	1
 270              		.global	HAL_LIN_Init
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 274              		.fpu fpv4-sp-d16
 276              	HAL_LIN_Init:
 277              	.LFB128:
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle .
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength: specifies the LIN break detection length.
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 278              		.loc 1 354 0
ARM GAS  /tmp/ccMdFX4h.s 			page 12


 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 8
 281              		@ frame_needed = 1, uses_anonymous_args = 0
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI10:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              	.LCFI11:
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI12:
 292              		.cfi_def_cfa_register 7
 293 0006 7860     		str	r0, [r7, #4]
 294 0008 3960     		str	r1, [r7]
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 295              		.loc 1 356 0
 296 000a 7B68     		ldr	r3, [r7, #4]
 297 000c 002B     		cmp	r3, #0
 298 000e 01D1     		bne	.L14
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 299              		.loc 1 358 0
 300 0010 0123     		movs	r3, #1
 301 0012 62E0     		b	.L15
 302              	.L14:
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 303              		.loc 1 367 0
 304 0014 7B68     		ldr	r3, [r7, #4]
 305 0016 DB69     		ldr	r3, [r3, #28]
 306 0018 B3F5004F 		cmp	r3, #32768
 307 001c 01D1     		bne	.L16
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 308              		.loc 1 369 0
 309 001e 0123     		movs	r3, #1
 310 0020 5BE0     		b	.L15
 311              	.L16:
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->Init.WordLength != UART_WORDLENGTH_8B)
 312              		.loc 1 372 0
 313 0022 7B68     		ldr	r3, [r7, #4]
 314 0024 9B68     		ldr	r3, [r3, #8]
 315 0026 002B     		cmp	r3, #0
 316 0028 01D0     		beq	.L17
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccMdFX4h.s 			page 13


 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 317              		.loc 1 374 0
 318 002a 0123     		movs	r3, #1
 319 002c 55E0     		b	.L15
 320              	.L17:
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 321              		.loc 1 377 0
 322 002e 7B68     		ldr	r3, [r7, #4]
 323 0030 93F86930 		ldrb	r3, [r3, #105]
 324 0034 DBB2     		uxtb	r3, r3
 325 0036 002B     		cmp	r3, #0
 326 0038 06D1     		bne	.L18
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 327              		.loc 1 380 0
 328 003a 7B68     		ldr	r3, [r7, #4]
 329 003c 0022     		movs	r2, #0
 330 003e 83F86820 		strb	r2, [r3, #104]
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 331              		.loc 1 383 0
 332 0042 7868     		ldr	r0, [r7, #4]
 333 0044 FFF7FEFF 		bl	HAL_UART_MspInit
 334              	.L18:
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 335              		.loc 1 386 0
 336 0048 7B68     		ldr	r3, [r7, #4]
 337 004a 2422     		movs	r2, #36
 338 004c 83F86920 		strb	r2, [r3, #105]
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 339              		.loc 1 389 0
 340 0050 7B68     		ldr	r3, [r7, #4]
 341 0052 1B68     		ldr	r3, [r3]
 342 0054 7A68     		ldr	r2, [r7, #4]
 343 0056 1268     		ldr	r2, [r2]
 344 0058 1268     		ldr	r2, [r2]
 345 005a 22F00102 		bic	r2, r2, #1
 346 005e 1A60     		str	r2, [r3]
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 347              		.loc 1 392 0
 348 0060 7868     		ldr	r0, [r7, #4]
 349 0062 FFF7FEFF 		bl	UART_SetConfig
 350 0066 0346     		mov	r3, r0
 351 0068 012B     		cmp	r3, #1
 352 006a 01D1     		bne	.L19
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccMdFX4h.s 			page 14


 353              		.loc 1 394 0
 354 006c 0123     		movs	r3, #1
 355 006e 34E0     		b	.L15
 356              	.L19:
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 357              		.loc 1 397 0
 358 0070 7B68     		ldr	r3, [r7, #4]
 359 0072 5B6A     		ldr	r3, [r3, #36]
 360 0074 002B     		cmp	r3, #0
 361 0076 02D0     		beq	.L20
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 362              		.loc 1 399 0
 363 0078 7868     		ldr	r0, [r7, #4]
 364 007a FFF7FEFF 		bl	UART_AdvFeatureConfig
 365              	.L20:
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 366              		.loc 1 405 0
 367 007e 7B68     		ldr	r3, [r7, #4]
 368 0080 1B68     		ldr	r3, [r3]
 369 0082 7A68     		ldr	r2, [r7, #4]
 370 0084 1268     		ldr	r2, [r2]
 371 0086 5268     		ldr	r2, [r2, #4]
 372 0088 22F40062 		bic	r2, r2, #2048
 373 008c 5A60     		str	r2, [r3, #4]
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 374              		.loc 1 406 0
 375 008e 7B68     		ldr	r3, [r7, #4]
 376 0090 1B68     		ldr	r3, [r3]
 377 0092 7A68     		ldr	r2, [r7, #4]
 378 0094 1268     		ldr	r2, [r2]
 379 0096 9268     		ldr	r2, [r2, #8]
 380 0098 22F02A02 		bic	r2, r2, #42
 381 009c 9A60     		str	r2, [r3, #8]
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 382              		.loc 1 409 0
 383 009e 7B68     		ldr	r3, [r7, #4]
 384 00a0 1B68     		ldr	r3, [r3]
 385 00a2 7A68     		ldr	r2, [r7, #4]
 386 00a4 1268     		ldr	r2, [r2]
 387 00a6 5268     		ldr	r2, [r2, #4]
 388 00a8 42F48042 		orr	r2, r2, #16384
 389 00ac 5A60     		str	r2, [r3, #4]
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 390              		.loc 1 412 0
 391 00ae 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 15


 392 00b0 1B68     		ldr	r3, [r3]
 393 00b2 7A68     		ldr	r2, [r7, #4]
 394 00b4 1268     		ldr	r2, [r2]
 395 00b6 5268     		ldr	r2, [r2, #4]
 396 00b8 22F02001 		bic	r1, r2, #32
 397 00bc 3A68     		ldr	r2, [r7]
 398 00be 0A43     		orrs	r2, r2, r1
 399 00c0 5A60     		str	r2, [r3, #4]
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 400              		.loc 1 415 0
 401 00c2 7B68     		ldr	r3, [r7, #4]
 402 00c4 1B68     		ldr	r3, [r3]
 403 00c6 7A68     		ldr	r2, [r7, #4]
 404 00c8 1268     		ldr	r2, [r2]
 405 00ca 1268     		ldr	r2, [r2]
 406 00cc 42F00102 		orr	r2, r2, #1
 407 00d0 1A60     		str	r2, [r3]
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 408              		.loc 1 418 0
 409 00d2 7868     		ldr	r0, [r7, #4]
 410 00d4 FFF7FEFF 		bl	UART_CheckIdleState
 411 00d8 0346     		mov	r3, r0
 412              	.L15:
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 413              		.loc 1 419 0
 414 00da 1846     		mov	r0, r3
 415 00dc 0837     		adds	r7, r7, #8
 416              	.LCFI13:
 417              		.cfi_def_cfa_offset 8
 418 00de BD46     		mov	sp, r7
 419              	.LCFI14:
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 00e0 80BD     		pop	{r7, pc}
 423              		.cfi_endproc
 424              	.LFE128:
 426              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 427              		.align	1
 428              		.global	HAL_MultiProcessor_Init
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv4-sp-d16
 434              	HAL_MultiProcessor_Init:
 435              	.LFB129:
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address: UART node address (4-, 6-, 7- or 8-bit long).
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod: specifies the UART wakeup method.
ARM GAS  /tmp/ccMdFX4h.s 			page 16


 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 436              		.loc 1 441 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 16
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 80B5     		push	{r7, lr}
 441              	.LCFI15:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 84B0     		sub	sp, sp, #16
 446              	.LCFI16:
 447              		.cfi_def_cfa_offset 24
 448 0004 00AF     		add	r7, sp, #0
 449              	.LCFI17:
 450              		.cfi_def_cfa_register 7
 451 0006 F860     		str	r0, [r7, #12]
 452 0008 0B46     		mov	r3, r1
 453 000a 7A60     		str	r2, [r7, #4]
 454 000c FB72     		strb	r3, [r7, #11]
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 455              		.loc 1 443 0
 456 000e FB68     		ldr	r3, [r7, #12]
 457 0010 002B     		cmp	r3, #0
 458 0012 01D1     		bne	.L22
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 459              		.loc 1 445 0
 460 0014 0123     		movs	r3, #1
 461 0016 5CE0     		b	.L23
 462              	.L22:
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 463              		.loc 1 451 0
 464 0018 FB68     		ldr	r3, [r7, #12]
 465 001a 93F86930 		ldrb	r3, [r3, #105]
 466 001e DBB2     		uxtb	r3, r3
 467 0020 002B     		cmp	r3, #0
 468 0022 06D1     		bne	.L24
ARM GAS  /tmp/ccMdFX4h.s 			page 17


 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 469              		.loc 1 454 0
 470 0024 FB68     		ldr	r3, [r7, #12]
 471 0026 0022     		movs	r2, #0
 472 0028 83F86820 		strb	r2, [r3, #104]
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 473              		.loc 1 457 0
 474 002c F868     		ldr	r0, [r7, #12]
 475 002e FFF7FEFF 		bl	HAL_UART_MspInit
 476              	.L24:
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 477              		.loc 1 460 0
 478 0032 FB68     		ldr	r3, [r7, #12]
 479 0034 2422     		movs	r2, #36
 480 0036 83F86920 		strb	r2, [r3, #105]
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 481              		.loc 1 463 0
 482 003a FB68     		ldr	r3, [r7, #12]
 483 003c 1B68     		ldr	r3, [r3]
 484 003e FA68     		ldr	r2, [r7, #12]
 485 0040 1268     		ldr	r2, [r2]
 486 0042 1268     		ldr	r2, [r2]
 487 0044 22F00102 		bic	r2, r2, #1
 488 0048 1A60     		str	r2, [r3]
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 489              		.loc 1 466 0
 490 004a F868     		ldr	r0, [r7, #12]
 491 004c FFF7FEFF 		bl	UART_SetConfig
 492 0050 0346     		mov	r3, r0
 493 0052 012B     		cmp	r3, #1
 494 0054 01D1     		bne	.L25
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 495              		.loc 1 468 0
 496 0056 0123     		movs	r3, #1
 497 0058 3BE0     		b	.L23
 498              	.L25:
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 499              		.loc 1 471 0
 500 005a FB68     		ldr	r3, [r7, #12]
 501 005c 5B6A     		ldr	r3, [r3, #36]
 502 005e 002B     		cmp	r3, #0
 503 0060 02D0     		beq	.L26
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
ARM GAS  /tmp/ccMdFX4h.s 			page 18


 504              		.loc 1 473 0
 505 0062 F868     		ldr	r0, [r7, #12]
 506 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 507              	.L26:
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 508              		.loc 1 479 0
 509 0068 FB68     		ldr	r3, [r7, #12]
 510 006a 1B68     		ldr	r3, [r3]
 511 006c FA68     		ldr	r2, [r7, #12]
 512 006e 1268     		ldr	r2, [r2]
 513 0070 5268     		ldr	r2, [r2, #4]
 514 0072 22F49042 		bic	r2, r2, #18432
 515 0076 5A60     		str	r2, [r3, #4]
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 516              		.loc 1 480 0
 517 0078 FB68     		ldr	r3, [r7, #12]
 518 007a 1B68     		ldr	r3, [r3]
 519 007c FA68     		ldr	r2, [r7, #12]
 520 007e 1268     		ldr	r2, [r2]
 521 0080 9268     		ldr	r2, [r2, #8]
 522 0082 22F02A02 		bic	r2, r2, #42
 523 0086 9A60     		str	r2, [r3, #8]
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 524              		.loc 1 482 0
 525 0088 7B68     		ldr	r3, [r7, #4]
 526 008a B3F5006F 		cmp	r3, #2048
 527 008e 0AD1     		bne	.L27
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 528              		.loc 1 485 0
 529 0090 FB68     		ldr	r3, [r7, #12]
 530 0092 1B68     		ldr	r3, [r3]
 531 0094 FA68     		ldr	r2, [r7, #12]
 532 0096 1268     		ldr	r2, [r2]
 533 0098 5268     		ldr	r2, [r2, #4]
 534 009a 22F07F41 		bic	r1, r2, #-16777216
 535 009e FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 536 00a0 1206     		lsls	r2, r2, #24
 537 00a2 0A43     		orrs	r2, r2, r1
 538 00a4 5A60     		str	r2, [r3, #4]
 539              	.L27:
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 540              		.loc 1 489 0
 541 00a6 FB68     		ldr	r3, [r7, #12]
 542 00a8 1B68     		ldr	r3, [r3]
 543 00aa FA68     		ldr	r2, [r7, #12]
 544 00ac 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccMdFX4h.s 			page 19


 545 00ae 1268     		ldr	r2, [r2]
 546 00b0 22F40061 		bic	r1, r2, #2048
 547 00b4 7A68     		ldr	r2, [r7, #4]
 548 00b6 0A43     		orrs	r2, r2, r1
 549 00b8 1A60     		str	r2, [r3]
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Peripheral */
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 550              		.loc 1 492 0
 551 00ba FB68     		ldr	r3, [r7, #12]
 552 00bc 1B68     		ldr	r3, [r3]
 553 00be FA68     		ldr	r2, [r7, #12]
 554 00c0 1268     		ldr	r2, [r2]
 555 00c2 1268     		ldr	r2, [r2]
 556 00c4 42F00102 		orr	r2, r2, #1
 557 00c8 1A60     		str	r2, [r3]
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 558              		.loc 1 495 0
 559 00ca F868     		ldr	r0, [r7, #12]
 560 00cc FFF7FEFF 		bl	UART_CheckIdleState
 561 00d0 0346     		mov	r3, r0
 562              	.L23:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 563              		.loc 1 496 0
 564 00d2 1846     		mov	r0, r3
 565 00d4 1037     		adds	r7, r7, #16
 566              	.LCFI18:
 567              		.cfi_def_cfa_offset 8
 568 00d6 BD46     		mov	sp, r7
 569              	.LCFI19:
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 00d8 80BD     		pop	{r7, pc}
 573              		.cfi_endproc
 574              	.LFE129:
 576              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 577              		.align	1
 578              		.global	HAL_UART_DeInit
 579              		.syntax unified
 580              		.thumb
 581              		.thumb_func
 582              		.fpu fpv4-sp-d16
 584              	HAL_UART_DeInit:
 585              	.LFB130:
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 586              		.loc 1 505 0
 587              		.cfi_startproc
ARM GAS  /tmp/ccMdFX4h.s 			page 20


 588              		@ args = 0, pretend = 0, frame = 8
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590 0000 80B5     		push	{r7, lr}
 591              	.LCFI20:
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 82B0     		sub	sp, sp, #8
 596              	.LCFI21:
 597              		.cfi_def_cfa_offset 16
 598 0004 00AF     		add	r7, sp, #0
 599              	.LCFI22:
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart == NULL)
 602              		.loc 1 507 0
 603 0008 7B68     		ldr	r3, [r7, #4]
 604 000a 002B     		cmp	r3, #0
 605 000c 01D1     		bne	.L29
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 606              		.loc 1 509 0
 607 000e 0123     		movs	r3, #1
 608 0010 2AE0     		b	.L30
 609              	.L29:
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 610              		.loc 1 515 0
 611 0012 7B68     		ldr	r3, [r7, #4]
 612 0014 2422     		movs	r2, #36
 613 0016 83F86920 		strb	r2, [r3, #105]
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the Peripheral */
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 614              		.loc 1 518 0
 615 001a 7B68     		ldr	r3, [r7, #4]
 616 001c 1B68     		ldr	r3, [r3]
 617 001e 7A68     		ldr	r2, [r7, #4]
 618 0020 1268     		ldr	r2, [r2]
 619 0022 1268     		ldr	r2, [r2]
 620 0024 22F00102 		bic	r2, r2, #1
 621 0028 1A60     		str	r2, [r3]
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0;
 622              		.loc 1 520 0
 623 002a 7B68     		ldr	r3, [r7, #4]
 624 002c 1B68     		ldr	r3, [r3]
 625 002e 0022     		movs	r2, #0
 626 0030 1A60     		str	r2, [r3]
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0;
 627              		.loc 1 521 0
 628 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 21


 629 0034 1B68     		ldr	r3, [r3]
 630 0036 0022     		movs	r2, #0
 631 0038 5A60     		str	r2, [r3, #4]
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0;
 632              		.loc 1 522 0
 633 003a 7B68     		ldr	r3, [r7, #4]
 634 003c 1B68     		ldr	r3, [r3]
 635 003e 0022     		movs	r2, #0
 636 0040 9A60     		str	r2, [r3, #8]
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 637              		.loc 1 525 0
 638 0042 7868     		ldr	r0, [r7, #4]
 639 0044 FFF7FEFF 		bl	HAL_UART_MspDeInit
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 640              		.loc 1 527 0
 641 0048 7B68     		ldr	r3, [r7, #4]
 642 004a 0022     		movs	r2, #0
 643 004c DA66     		str	r2, [r3, #108]
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState    = HAL_UART_STATE_RESET;
 644              		.loc 1 528 0
 645 004e 7B68     		ldr	r3, [r7, #4]
 646 0050 0022     		movs	r2, #0
 647 0052 83F86920 		strb	r2, [r3, #105]
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState   = HAL_UART_STATE_RESET;
 648              		.loc 1 529 0
 649 0056 7B68     		ldr	r3, [r7, #4]
 650 0058 0022     		movs	r2, #0
 651 005a 83F86A20 		strb	r2, [r3, #106]
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlock */
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 652              		.loc 1 532 0
 653 005e 7B68     		ldr	r3, [r7, #4]
 654 0060 0022     		movs	r2, #0
 655 0062 83F86820 		strb	r2, [r3, #104]
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 656              		.loc 1 534 0
 657 0066 0023     		movs	r3, #0
 658              	.L30:
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 659              		.loc 1 535 0
 660 0068 1846     		mov	r0, r3
 661 006a 0837     		adds	r7, r7, #8
 662              	.LCFI23:
 663              		.cfi_def_cfa_offset 8
 664 006c BD46     		mov	sp, r7
 665              	.LCFI24:
 666              		.cfi_def_cfa_register 13
 667              		@ sp needed
 668 006e 80BD     		pop	{r7, pc}
 669              		.cfi_endproc
 670              	.LFE130:
 672              		.section	.text.HAL_UART_MspInit,"ax",%progbits
ARM GAS  /tmp/ccMdFX4h.s 			page 22


 673              		.align	1
 674              		.weak	HAL_UART_MspInit
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 678              		.fpu fpv4-sp-d16
 680              	HAL_UART_MspInit:
 681              	.LFB131:
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 682              		.loc 1 543 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 8
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687 0000 80B4     		push	{r7}
 688              	.LCFI25:
 689              		.cfi_def_cfa_offset 4
 690              		.cfi_offset 7, -4
 691 0002 83B0     		sub	sp, sp, #12
 692              	.LCFI26:
 693              		.cfi_def_cfa_offset 16
 694 0004 00AF     		add	r7, sp, #0
 695              	.LCFI27:
 696              		.cfi_def_cfa_register 7
 697 0006 7860     		str	r0, [r7, #4]
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 698              		.loc 1 550 0
 699 0008 00BF     		nop
 700 000a 0C37     		adds	r7, r7, #12
 701              	.LCFI28:
 702              		.cfi_def_cfa_offset 4
 703 000c BD46     		mov	sp, r7
 704              	.LCFI29:
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
 707 000e 5DF8047B 		ldr	r7, [sp], #4
 708              	.LCFI30:
 709              		.cfi_restore 7
 710              		.cfi_def_cfa_offset 0
 711 0012 7047     		bx	lr
 712              		.cfi_endproc
 713              	.LFE131:
 715              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 716              		.align	1
ARM GAS  /tmp/ccMdFX4h.s 			page 23


 717              		.weak	HAL_UART_MspDeInit
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu fpv4-sp-d16
 723              	HAL_UART_MspDeInit:
 724              	.LFB132:
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 725              		.loc 1 558 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 8
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0000 80B4     		push	{r7}
 731              	.LCFI31:
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 0002 83B0     		sub	sp, sp, #12
 735              	.LCFI32:
 736              		.cfi_def_cfa_offset 16
 737 0004 00AF     		add	r7, sp, #0
 738              	.LCFI33:
 739              		.cfi_def_cfa_register 7
 740 0006 7860     		str	r0, [r7, #4]
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 741              		.loc 1 565 0
 742 0008 00BF     		nop
 743 000a 0C37     		adds	r7, r7, #12
 744              	.LCFI34:
 745              		.cfi_def_cfa_offset 4
 746 000c BD46     		mov	sp, r7
 747              	.LCFI35:
 748              		.cfi_def_cfa_register 13
 749              		@ sp needed
 750 000e 5DF8047B 		ldr	r7, [sp], #4
 751              	.LCFI36:
 752              		.cfi_restore 7
 753              		.cfi_def_cfa_offset 0
 754 0012 7047     		bx	lr
 755              		.cfi_endproc
 756              	.LFE132:
 758              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 759              		.align	1
 760              		.global	HAL_UART_Transmit
ARM GAS  /tmp/ccMdFX4h.s 			page 24


 761              		.syntax unified
 762              		.thumb
 763              		.thumb_func
 764              		.fpu fpv4-sp-d16
 766              	HAL_UART_Transmit:
 767              	.LFB133:
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccMdFX4h.s 			page 25


 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData: Pointer to data buffer.
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size: Amount of data to be sent.
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 768              		.loc 1 657 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 24
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772 0000 80B5     		push	{r7, lr}
 773              	.LCFI37:
 774              		.cfi_def_cfa_offset 8
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 88B0     		sub	sp, sp, #32
 778              	.LCFI38:
 779              		.cfi_def_cfa_offset 40
 780 0004 02AF     		add	r7, sp, #8
 781              	.LCFI39:
 782              		.cfi_def_cfa 7, 32
 783 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 26


 784 0008 B960     		str	r1, [r7, #8]
 785 000a 3B60     		str	r3, [r7]
 786 000c 1346     		mov	r3, r2	@ movhi
 787 000e FB80     		strh	r3, [r7, #6]	@ movhi
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
 788              		.loc 1 659 0
 789 0010 0023     		movs	r3, #0
 790 0012 7B61     		str	r3, [r7, #20]
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 791              		.loc 1 662 0
 792 0014 FB68     		ldr	r3, [r7, #12]
 793 0016 93F86930 		ldrb	r3, [r3, #105]
 794 001a DBB2     		uxtb	r3, r3
 795 001c 202B     		cmp	r3, #32
 796 001e 77D1     		bne	.L34
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 797              		.loc 1 664 0
 798 0020 BB68     		ldr	r3, [r7, #8]
 799 0022 002B     		cmp	r3, #0
 800 0024 02D0     		beq	.L35
 801              		.loc 1 664 0 is_stmt 0 discriminator 1
 802 0026 FB88     		ldrh	r3, [r7, #6]
 803 0028 002B     		cmp	r3, #0
 804 002a 01D1     		bne	.L36
 805              	.L35:
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 806              		.loc 1 666 0 is_stmt 1
 807 002c 0123     		movs	r3, #1
 808 002e 70E0     		b	.L37
 809              	.L36:
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 810              		.loc 1 670 0
 811 0030 FB68     		ldr	r3, [r7, #12]
 812 0032 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 813 0036 012B     		cmp	r3, #1
 814 0038 01D1     		bne	.L38
 815              		.loc 1 670 0 is_stmt 0 discriminator 1
 816 003a 0223     		movs	r3, #2
 817 003c 69E0     		b	.L37
 818              	.L38:
 819              		.loc 1 670 0 discriminator 2
 820 003e FB68     		ldr	r3, [r7, #12]
 821 0040 0122     		movs	r2, #1
 822 0042 83F86820 		strb	r2, [r3, #104]
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 823              		.loc 1 672 0 is_stmt 1 discriminator 2
 824 0046 FB68     		ldr	r3, [r7, #12]
 825 0048 0022     		movs	r2, #0
ARM GAS  /tmp/ccMdFX4h.s 			page 27


 826 004a DA66     		str	r2, [r3, #108]
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 827              		.loc 1 673 0 discriminator 2
 828 004c FB68     		ldr	r3, [r7, #12]
 829 004e 2122     		movs	r2, #33
 830 0050 83F86920 		strb	r2, [r3, #105]
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 831              		.loc 1 676 0 discriminator 2
 832 0054 FFF7FEFF 		bl	HAL_GetTick
 833 0058 7861     		str	r0, [r7, #20]
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize = Size;
 834              		.loc 1 678 0 discriminator 2
 835 005a FB68     		ldr	r3, [r7, #12]
 836 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 837 005e A3F85020 		strh	r2, [r3, #80]	@ movhi
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 838              		.loc 1 679 0 discriminator 2
 839 0062 FB68     		ldr	r3, [r7, #12]
 840 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 841 0066 A3F85220 		strh	r2, [r3, #82]	@ movhi
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while(huart->TxXferCount > 0)
 842              		.loc 1 680 0 discriminator 2
 843 006a 34E0     		b	.L39
 844              	.L42:
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 845              		.loc 1 682 0
 846 006c FB68     		ldr	r3, [r7, #12]
 847 006e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 848 0072 9BB2     		uxth	r3, r3
 849 0074 013B     		subs	r3, r3, #1
 850 0076 9AB2     		uxth	r2, r3
 851 0078 FB68     		ldr	r3, [r7, #12]
 852 007a A3F85220 		strh	r2, [r3, #82]	@ movhi
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 853              		.loc 1 683 0
 854 007e 3B68     		ldr	r3, [r7]
 855 0080 0093     		str	r3, [sp]
 856 0082 7B69     		ldr	r3, [r7, #20]
 857 0084 0022     		movs	r2, #0
 858 0086 8021     		movs	r1, #128
 859 0088 F868     		ldr	r0, [r7, #12]
 860 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 861 008e 0346     		mov	r3, r0
 862 0090 002B     		cmp	r3, #0
 863 0092 01D0     		beq	.L40
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 864              		.loc 1 685 0
 865 0094 0323     		movs	r3, #3
 866 0096 3CE0     		b	.L37
 867              	.L40:
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
ARM GAS  /tmp/ccMdFX4h.s 			page 28


 868              		.loc 1 687 0
 869 0098 FB68     		ldr	r3, [r7, #12]
 870 009a 9B68     		ldr	r3, [r3, #8]
 871 009c B3F5805F 		cmp	r3, #4096
 872 00a0 11D1     		bne	.L41
 873              		.loc 1 687 0 is_stmt 0 discriminator 1
 874 00a2 FB68     		ldr	r3, [r7, #12]
 875 00a4 1B69     		ldr	r3, [r3, #16]
 876 00a6 002B     		cmp	r3, #0
 877 00a8 0DD1     		bne	.L41
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 878              		.loc 1 689 0 is_stmt 1
 879 00aa BB68     		ldr	r3, [r7, #8]
 880 00ac 3B61     		str	r3, [r7, #16]
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 881              		.loc 1 690 0
 882 00ae FB68     		ldr	r3, [r7, #12]
 883 00b0 1B68     		ldr	r3, [r3]
 884 00b2 3A69     		ldr	r2, [r7, #16]
 885 00b4 1288     		ldrh	r2, [r2]
 886 00b6 C2F30802 		ubfx	r2, r2, #0, #9
 887 00ba 92B2     		uxth	r2, r2
 888 00bc 1A85     		strh	r2, [r3, #40]	@ movhi
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData += 2;
 889              		.loc 1 691 0
 890 00be BB68     		ldr	r3, [r7, #8]
 891 00c0 0233     		adds	r3, r3, #2
 892 00c2 BB60     		str	r3, [r7, #8]
 893 00c4 07E0     		b	.L39
 894              	.L41:
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFF);
 895              		.loc 1 695 0
 896 00c6 FB68     		ldr	r3, [r7, #12]
 897 00c8 1A68     		ldr	r2, [r3]
 898 00ca BB68     		ldr	r3, [r7, #8]
 899 00cc 591C     		adds	r1, r3, #1
 900 00ce B960     		str	r1, [r7, #8]
 901 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 902 00d2 9BB2     		uxth	r3, r3
 903 00d4 1385     		strh	r3, [r2, #40]	@ movhi
 904              	.L39:
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 905              		.loc 1 680 0
 906 00d6 FB68     		ldr	r3, [r7, #12]
 907 00d8 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 908 00dc 9BB2     		uxth	r3, r3
 909 00de 002B     		cmp	r3, #0
 910 00e0 C4D1     		bne	.L42
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 911              		.loc 1 698 0
 912 00e2 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccMdFX4h.s 			page 29


 913 00e4 0093     		str	r3, [sp]
 914 00e6 7B69     		ldr	r3, [r7, #20]
 915 00e8 0022     		movs	r2, #0
 916 00ea 4021     		movs	r1, #64
 917 00ec F868     		ldr	r0, [r7, #12]
 918 00ee FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 919 00f2 0346     		mov	r3, r0
 920 00f4 002B     		cmp	r3, #0
 921 00f6 01D0     		beq	.L43
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 922              		.loc 1 700 0
 923 00f8 0323     		movs	r3, #3
 924 00fa 0AE0     		b	.L37
 925              	.L43:
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 926              		.loc 1 704 0
 927 00fc FB68     		ldr	r3, [r7, #12]
 928 00fe 2022     		movs	r2, #32
 929 0100 83F86920 		strb	r2, [r3, #105]
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 930              		.loc 1 707 0
 931 0104 FB68     		ldr	r3, [r7, #12]
 932 0106 0022     		movs	r2, #0
 933 0108 83F86820 		strb	r2, [r3, #104]
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 934              		.loc 1 709 0
 935 010c 0023     		movs	r3, #0
 936 010e 00E0     		b	.L37
 937              	.L34:
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 938              		.loc 1 713 0
 939 0110 0223     		movs	r3, #2
 940              	.L37:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 941              		.loc 1 715 0
 942 0112 1846     		mov	r0, r3
 943 0114 1837     		adds	r7, r7, #24
 944              	.LCFI40:
 945              		.cfi_def_cfa_offset 8
 946 0116 BD46     		mov	sp, r7
 947              	.LCFI41:
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 0118 80BD     		pop	{r7, pc}
 951              		.cfi_endproc
 952              	.LFE133:
ARM GAS  /tmp/ccMdFX4h.s 			page 30


 954              		.section	.text.HAL_UART_Receive,"ax",%progbits
 955              		.align	1
 956              		.global	HAL_UART_Receive
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu fpv4-sp-d16
 962              	HAL_UART_Receive:
 963              	.LFB134:
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size: amount of data to be received.
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout: Timeout duration.
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 964              		.loc 1 726 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 32
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968 0000 80B5     		push	{r7, lr}
 969              	.LCFI42:
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 8AB0     		sub	sp, sp, #40
 974              	.LCFI43:
 975              		.cfi_def_cfa_offset 48
 976 0004 02AF     		add	r7, sp, #8
 977              	.LCFI44:
 978              		.cfi_def_cfa 7, 40
 979 0006 F860     		str	r0, [r7, #12]
 980 0008 B960     		str	r1, [r7, #8]
 981 000a 3B60     		str	r3, [r7]
 982 000c 1346     		mov	r3, r2	@ movhi
 983 000e FB80     		strh	r3, [r7, #6]	@ movhi
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
 984              		.loc 1 729 0
 985 0010 0023     		movs	r3, #0
 986 0012 FB61     		str	r3, [r7, #28]
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 987              		.loc 1 732 0
 988 0014 FB68     		ldr	r3, [r7, #12]
 989 0016 93F86A30 		ldrb	r3, [r3, #106]
 990 001a DBB2     		uxtb	r3, r3
 991 001c 202B     		cmp	r3, #32
 992 001e 40F0AD80 		bne	.L45
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
ARM GAS  /tmp/ccMdFX4h.s 			page 31


 993              		.loc 1 734 0
 994 0022 BB68     		ldr	r3, [r7, #8]
 995 0024 002B     		cmp	r3, #0
 996 0026 02D0     		beq	.L46
 997              		.loc 1 734 0 is_stmt 0 discriminator 1
 998 0028 FB88     		ldrh	r3, [r7, #6]
 999 002a 002B     		cmp	r3, #0
 1000 002c 01D1     		bne	.L47
 1001              	.L46:
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 1002              		.loc 1 736 0 is_stmt 1
 1003 002e 0123     		movs	r3, #1
 1004 0030 A5E0     		b	.L48
 1005              	.L47:
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1006              		.loc 1 740 0
 1007 0032 FB68     		ldr	r3, [r7, #12]
 1008 0034 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1009 0038 012B     		cmp	r3, #1
 1010 003a 01D1     		bne	.L49
 1011              		.loc 1 740 0 is_stmt 0 discriminator 1
 1012 003c 0223     		movs	r3, #2
 1013 003e 9EE0     		b	.L48
 1014              	.L49:
 1015              		.loc 1 740 0 discriminator 2
 1016 0040 FB68     		ldr	r3, [r7, #12]
 1017 0042 0122     		movs	r2, #1
 1018 0044 83F86820 		strb	r2, [r3, #104]
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1019              		.loc 1 742 0 is_stmt 1 discriminator 2
 1020 0048 FB68     		ldr	r3, [r7, #12]
 1021 004a 0022     		movs	r2, #0
 1022 004c DA66     		str	r2, [r3, #108]
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1023              		.loc 1 743 0 discriminator 2
 1024 004e FB68     		ldr	r3, [r7, #12]
 1025 0050 2222     		movs	r2, #34
 1026 0052 83F86A20 		strb	r2, [r3, #106]
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1027              		.loc 1 746 0 discriminator 2
 1028 0056 FFF7FEFF 		bl	HAL_GetTick
 1029 005a F861     		str	r0, [r7, #28]
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1030              		.loc 1 748 0 discriminator 2
 1031 005c FB68     		ldr	r3, [r7, #12]
 1032 005e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1033 0060 A3F85820 		strh	r2, [r3, #88]	@ movhi
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1034              		.loc 1 749 0 discriminator 2
ARM GAS  /tmp/ccMdFX4h.s 			page 32


 1035 0064 FB68     		ldr	r3, [r7, #12]
 1036 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1037 0068 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1038              		.loc 1 752 0 discriminator 2
 1039 006c FB68     		ldr	r3, [r7, #12]
 1040 006e 9B68     		ldr	r3, [r3, #8]
 1041 0070 B3F5805F 		cmp	r3, #4096
 1042 0074 0ED1     		bne	.L50
 1043              		.loc 1 752 0 is_stmt 0 discriminator 1
 1044 0076 FB68     		ldr	r3, [r7, #12]
 1045 0078 1B69     		ldr	r3, [r3, #16]
 1046 007a 002B     		cmp	r3, #0
 1047 007c 05D1     		bne	.L51
 1048              		.loc 1 752 0 discriminator 3
 1049 007e FB68     		ldr	r3, [r7, #12]
 1050 0080 40F2FF12 		movw	r2, #511
 1051 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1052 0088 28E0     		b	.L53
 1053              	.L51:
 1054              		.loc 1 752 0 discriminator 4
 1055 008a FB68     		ldr	r3, [r7, #12]
 1056 008c FF22     		movs	r2, #255
 1057 008e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1058 0092 23E0     		b	.L53
 1059              	.L50:
 1060              		.loc 1 752 0 discriminator 2
 1061 0094 FB68     		ldr	r3, [r7, #12]
 1062 0096 9B68     		ldr	r3, [r3, #8]
 1063 0098 002B     		cmp	r3, #0
 1064 009a 0DD1     		bne	.L54
 1065              		.loc 1 752 0 discriminator 5
 1066 009c FB68     		ldr	r3, [r7, #12]
 1067 009e 1B69     		ldr	r3, [r3, #16]
 1068 00a0 002B     		cmp	r3, #0
 1069 00a2 04D1     		bne	.L55
 1070              		.loc 1 752 0 discriminator 7
 1071 00a4 FB68     		ldr	r3, [r7, #12]
 1072 00a6 FF22     		movs	r2, #255
 1073 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1074 00ac 16E0     		b	.L53
 1075              	.L55:
 1076              		.loc 1 752 0 discriminator 8
 1077 00ae FB68     		ldr	r3, [r7, #12]
 1078 00b0 7F22     		movs	r2, #127
 1079 00b2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1080 00b6 11E0     		b	.L53
 1081              	.L54:
 1082              		.loc 1 752 0 discriminator 6
 1083 00b8 FB68     		ldr	r3, [r7, #12]
 1084 00ba 9B68     		ldr	r3, [r3, #8]
 1085 00bc B3F1805F 		cmp	r3, #268435456
 1086 00c0 0CD1     		bne	.L53
 1087              		.loc 1 752 0 discriminator 9
 1088 00c2 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 33


 1089 00c4 1B69     		ldr	r3, [r3, #16]
 1090 00c6 002B     		cmp	r3, #0
 1091 00c8 04D1     		bne	.L57
 1092              		.loc 1 752 0 discriminator 10
 1093 00ca FB68     		ldr	r3, [r7, #12]
 1094 00cc 7F22     		movs	r2, #127
 1095 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1096 00d2 03E0     		b	.L53
 1097              	.L57:
 1098              		.loc 1 752 0 discriminator 11
 1099 00d4 FB68     		ldr	r3, [r7, #12]
 1100 00d6 3F22     		movs	r2, #63
 1101 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1102              	.L53:
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 1103              		.loc 1 753 0 is_stmt 1
 1104 00dc FB68     		ldr	r3, [r7, #12]
 1105 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1106 00e2 7B83     		strh	r3, [r7, #26]	@ movhi
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while(huart->RxXferCount > 0)
 1107              		.loc 1 756 0
 1108 00e4 3AE0     		b	.L58
 1109              	.L61:
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
 1110              		.loc 1 758 0
 1111 00e6 FB68     		ldr	r3, [r7, #12]
 1112 00e8 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1113 00ec 9BB2     		uxth	r3, r3
 1114 00ee 013B     		subs	r3, r3, #1
 1115 00f0 9AB2     		uxth	r2, r3
 1116 00f2 FB68     		ldr	r3, [r7, #12]
 1117 00f4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1118              		.loc 1 759 0
 1119 00f8 3B68     		ldr	r3, [r7]
 1120 00fa 0093     		str	r3, [sp]
 1121 00fc FB69     		ldr	r3, [r7, #28]
 1122 00fe 0022     		movs	r2, #0
 1123 0100 2021     		movs	r1, #32
 1124 0102 F868     		ldr	r0, [r7, #12]
 1125 0104 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1126 0108 0346     		mov	r3, r0
 1127 010a 002B     		cmp	r3, #0
 1128 010c 01D0     		beq	.L59
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1129              		.loc 1 761 0
 1130 010e 0323     		movs	r3, #3
 1131 0110 35E0     		b	.L48
 1132              	.L59:
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 1133              		.loc 1 763 0
 1134 0112 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 34


 1135 0114 9B68     		ldr	r3, [r3, #8]
 1136 0116 B3F5805F 		cmp	r3, #4096
 1137 011a 12D1     		bne	.L60
 1138              		.loc 1 763 0 is_stmt 0 discriminator 1
 1139 011c FB68     		ldr	r3, [r7, #12]
 1140 011e 1B69     		ldr	r3, [r3, #16]
 1141 0120 002B     		cmp	r3, #0
 1142 0122 0ED1     		bne	.L60
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t*) pData ;
 1143              		.loc 1 765 0 is_stmt 1
 1144 0124 BB68     		ldr	r3, [r7, #8]
 1145 0126 7B61     		str	r3, [r7, #20]
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 1146              		.loc 1 766 0
 1147 0128 FB68     		ldr	r3, [r7, #12]
 1148 012a 1B68     		ldr	r3, [r3]
 1149 012c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1150 012e 9AB2     		uxth	r2, r3
 1151 0130 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 1152 0132 1340     		ands	r3, r3, r2
 1153 0134 9AB2     		uxth	r2, r3
 1154 0136 7B69     		ldr	r3, [r7, #20]
 1155 0138 1A80     		strh	r2, [r3]	@ movhi
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pData +=2;
 1156              		.loc 1 767 0
 1157 013a BB68     		ldr	r3, [r7, #8]
 1158 013c 0233     		adds	r3, r3, #2
 1159 013e BB60     		str	r3, [r7, #8]
 1160 0140 0CE0     		b	.L58
 1161              	.L60:
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1162              		.loc 1 771 0
 1163 0142 BB68     		ldr	r3, [r7, #8]
 1164 0144 5A1C     		adds	r2, r3, #1
 1165 0146 BA60     		str	r2, [r7, #8]
 1166 0148 FA68     		ldr	r2, [r7, #12]
 1167 014a 1268     		ldr	r2, [r2]
 1168 014c 928C     		ldrh	r2, [r2, #36]	@ movhi
 1169 014e 92B2     		uxth	r2, r2
 1170 0150 D1B2     		uxtb	r1, r2
 1171 0152 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 1172 0154 D2B2     		uxtb	r2, r2
 1173 0156 0A40     		ands	r2, r2, r1
 1174 0158 D2B2     		uxtb	r2, r2
 1175 015a 1A70     		strb	r2, [r3]
 1176              	.L58:
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1177              		.loc 1 756 0
 1178 015c FB68     		ldr	r3, [r7, #12]
 1179 015e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1180 0162 9BB2     		uxth	r3, r3
 1181 0164 002B     		cmp	r3, #0
 1182 0166 BED1     		bne	.L61
ARM GAS  /tmp/ccMdFX4h.s 			page 35


 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1183              		.loc 1 776 0
 1184 0168 FB68     		ldr	r3, [r7, #12]
 1185 016a 2022     		movs	r2, #32
 1186 016c 83F86A20 		strb	r2, [r3, #106]
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1187              		.loc 1 779 0
 1188 0170 FB68     		ldr	r3, [r7, #12]
 1189 0172 0022     		movs	r2, #0
 1190 0174 83F86820 		strb	r2, [r3, #104]
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1191              		.loc 1 781 0
 1192 0178 0023     		movs	r3, #0
 1193 017a 00E0     		b	.L48
 1194              	.L45:
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1195              		.loc 1 785 0
 1196 017c 0223     		movs	r3, #2
 1197              	.L48:
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1198              		.loc 1 787 0
 1199 017e 1846     		mov	r0, r3
 1200 0180 2037     		adds	r7, r7, #32
 1201              	.LCFI45:
 1202              		.cfi_def_cfa_offset 8
 1203 0182 BD46     		mov	sp, r7
 1204              	.LCFI46:
 1205              		.cfi_def_cfa_register 13
 1206              		@ sp needed
 1207 0184 80BD     		pop	{r7, pc}
 1208              		.cfi_endproc
 1209              	.LFE134:
 1211              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1212              		.align	1
 1213              		.global	HAL_UART_Transmit_IT
 1214              		.syntax unified
 1215              		.thumb
 1216              		.thumb_func
 1217              		.fpu fpv4-sp-d16
 1219              	HAL_UART_Transmit_IT:
 1220              	.LFB135:
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData: pointer to data buffer.
ARM GAS  /tmp/ccMdFX4h.s 			page 36


 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1221              		.loc 1 797 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 16
 1224              		@ frame_needed = 1, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 1226 0000 80B4     		push	{r7}
 1227              	.LCFI47:
 1228              		.cfi_def_cfa_offset 4
 1229              		.cfi_offset 7, -4
 1230 0002 85B0     		sub	sp, sp, #20
 1231              	.LCFI48:
 1232              		.cfi_def_cfa_offset 24
 1233 0004 00AF     		add	r7, sp, #0
 1234              	.LCFI49:
 1235              		.cfi_def_cfa_register 7
 1236 0006 F860     		str	r0, [r7, #12]
 1237 0008 B960     		str	r1, [r7, #8]
 1238 000a 1346     		mov	r3, r2
 1239 000c FB80     		strh	r3, [r7, #6]	@ movhi
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1240              		.loc 1 799 0
 1241 000e FB68     		ldr	r3, [r7, #12]
 1242 0010 93F86930 		ldrb	r3, [r3, #105]
 1243 0014 DBB2     		uxtb	r3, r3
 1244 0016 202B     		cmp	r3, #32
 1245 0018 32D1     		bne	.L63
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1246              		.loc 1 801 0
 1247 001a BB68     		ldr	r3, [r7, #8]
 1248 001c 002B     		cmp	r3, #0
 1249 001e 02D0     		beq	.L64
 1250              		.loc 1 801 0 is_stmt 0 discriminator 1
 1251 0020 FB88     		ldrh	r3, [r7, #6]
 1252 0022 002B     		cmp	r3, #0
 1253 0024 01D1     		bne	.L65
 1254              	.L64:
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1255              		.loc 1 803 0 is_stmt 1
 1256 0026 0123     		movs	r3, #1
 1257 0028 2BE0     		b	.L66
 1258              	.L65:
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1259              		.loc 1 807 0
 1260 002a FB68     		ldr	r3, [r7, #12]
 1261 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1262 0030 012B     		cmp	r3, #1
ARM GAS  /tmp/ccMdFX4h.s 			page 37


 1263 0032 01D1     		bne	.L67
 1264              		.loc 1 807 0 is_stmt 0 discriminator 1
 1265 0034 0223     		movs	r3, #2
 1266 0036 24E0     		b	.L66
 1267              	.L67:
 1268              		.loc 1 807 0 discriminator 2
 1269 0038 FB68     		ldr	r3, [r7, #12]
 1270 003a 0122     		movs	r2, #1
 1271 003c 83F86820 		strb	r2, [r3, #104]
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1272              		.loc 1 809 0 is_stmt 1 discriminator 2
 1273 0040 FB68     		ldr	r3, [r7, #12]
 1274 0042 BA68     		ldr	r2, [r7, #8]
 1275 0044 DA64     		str	r2, [r3, #76]
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1276              		.loc 1 810 0 discriminator 2
 1277 0046 FB68     		ldr	r3, [r7, #12]
 1278 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1279 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1280              		.loc 1 811 0 discriminator 2
 1281 004e FB68     		ldr	r3, [r7, #12]
 1282 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1283 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1284              		.loc 1 813 0 discriminator 2
 1285 0056 FB68     		ldr	r3, [r7, #12]
 1286 0058 0022     		movs	r2, #0
 1287 005a DA66     		str	r2, [r3, #108]
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1288              		.loc 1 814 0 discriminator 2
 1289 005c FB68     		ldr	r3, [r7, #12]
 1290 005e 2122     		movs	r2, #33
 1291 0060 83F86920 		strb	r2, [r3, #105]
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1292              		.loc 1 817 0 discriminator 2
 1293 0064 FB68     		ldr	r3, [r7, #12]
 1294 0066 0022     		movs	r2, #0
 1295 0068 83F86820 		strb	r2, [r3, #104]
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Data Register Empty Interrupt */
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1296              		.loc 1 820 0 discriminator 2
 1297 006c FB68     		ldr	r3, [r7, #12]
 1298 006e 1B68     		ldr	r3, [r3]
 1299 0070 FA68     		ldr	r2, [r7, #12]
 1300 0072 1268     		ldr	r2, [r2]
 1301 0074 1268     		ldr	r2, [r2]
 1302 0076 42F08002 		orr	r2, r2, #128
 1303 007a 1A60     		str	r2, [r3]
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1304              		.loc 1 822 0 discriminator 2
ARM GAS  /tmp/ccMdFX4h.s 			page 38


 1305 007c 0023     		movs	r3, #0
 1306 007e 00E0     		b	.L66
 1307              	.L63:
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1308              		.loc 1 826 0
 1309 0080 0223     		movs	r3, #2
 1310              	.L66:
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1311              		.loc 1 828 0
 1312 0082 1846     		mov	r0, r3
 1313 0084 1437     		adds	r7, r7, #20
 1314              	.LCFI50:
 1315              		.cfi_def_cfa_offset 4
 1316 0086 BD46     		mov	sp, r7
 1317              	.LCFI51:
 1318              		.cfi_def_cfa_register 13
 1319              		@ sp needed
 1320 0088 5DF8047B 		ldr	r7, [sp], #4
 1321              	.LCFI52:
 1322              		.cfi_restore 7
 1323              		.cfi_def_cfa_offset 0
 1324 008c 7047     		bx	lr
 1325              		.cfi_endproc
 1326              	.LFE135:
 1328              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1329              		.align	1
 1330              		.global	HAL_UART_Receive_IT
 1331              		.syntax unified
 1332              		.thumb
 1333              		.thumb_func
 1334              		.fpu fpv4-sp-d16
 1336              	HAL_UART_Receive_IT:
 1337              	.LFB136:
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size: amount of data to be received.
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1338              		.loc 1 838 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 16
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342              		@ link register save eliminated.
 1343 0000 80B4     		push	{r7}
 1344              	.LCFI53:
 1345              		.cfi_def_cfa_offset 4
 1346              		.cfi_offset 7, -4
 1347 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccMdFX4h.s 			page 39


 1348              	.LCFI54:
 1349              		.cfi_def_cfa_offset 24
 1350 0004 00AF     		add	r7, sp, #0
 1351              	.LCFI55:
 1352              		.cfi_def_cfa_register 7
 1353 0006 F860     		str	r0, [r7, #12]
 1354 0008 B960     		str	r1, [r7, #8]
 1355 000a 1346     		mov	r3, r2
 1356 000c FB80     		strh	r3, [r7, #6]	@ movhi
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1357              		.loc 1 840 0
 1358 000e FB68     		ldr	r3, [r7, #12]
 1359 0010 93F86A30 		ldrb	r3, [r3, #106]
 1360 0014 DBB2     		uxtb	r3, r3
 1361 0016 202B     		cmp	r3, #32
 1362 0018 72D1     		bne	.L69
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1363              		.loc 1 842 0
 1364 001a BB68     		ldr	r3, [r7, #8]
 1365 001c 002B     		cmp	r3, #0
 1366 001e 02D0     		beq	.L70
 1367              		.loc 1 842 0 is_stmt 0 discriminator 1
 1368 0020 FB88     		ldrh	r3, [r7, #6]
 1369 0022 002B     		cmp	r3, #0
 1370 0024 01D1     		bne	.L71
 1371              	.L70:
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1372              		.loc 1 844 0 is_stmt 1
 1373 0026 0123     		movs	r3, #1
 1374 0028 6BE0     		b	.L72
 1375              	.L71:
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1376              		.loc 1 848 0
 1377 002a FB68     		ldr	r3, [r7, #12]
 1378 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1379 0030 012B     		cmp	r3, #1
 1380 0032 01D1     		bne	.L73
 1381              		.loc 1 848 0 is_stmt 0 discriminator 1
 1382 0034 0223     		movs	r3, #2
 1383 0036 64E0     		b	.L72
 1384              	.L73:
 1385              		.loc 1 848 0 discriminator 2
 1386 0038 FB68     		ldr	r3, [r7, #12]
 1387 003a 0122     		movs	r2, #1
 1388 003c 83F86820 		strb	r2, [r3, #104]
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1389              		.loc 1 850 0 is_stmt 1 discriminator 2
 1390 0040 FB68     		ldr	r3, [r7, #12]
 1391 0042 BA68     		ldr	r2, [r7, #8]
 1392 0044 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccMdFX4h.s 			page 40


 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1393              		.loc 1 851 0 discriminator 2
 1394 0046 FB68     		ldr	r3, [r7, #12]
 1395 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1396 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1397              		.loc 1 852 0 discriminator 2
 1398 004e FB68     		ldr	r3, [r7, #12]
 1399 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1400 0052 A3F85A20 		strh	r2, [r3, #90]	@ movhi
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1401              		.loc 1 855 0 discriminator 2
 1402 0056 FB68     		ldr	r3, [r7, #12]
 1403 0058 9B68     		ldr	r3, [r3, #8]
 1404 005a B3F5805F 		cmp	r3, #4096
 1405 005e 0ED1     		bne	.L74
 1406              		.loc 1 855 0 is_stmt 0 discriminator 1
 1407 0060 FB68     		ldr	r3, [r7, #12]
 1408 0062 1B69     		ldr	r3, [r3, #16]
 1409 0064 002B     		cmp	r3, #0
 1410 0066 05D1     		bne	.L75
 1411              		.loc 1 855 0 discriminator 3
 1412 0068 FB68     		ldr	r3, [r7, #12]
 1413 006a 40F2FF12 		movw	r2, #511
 1414 006e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1415 0072 28E0     		b	.L77
 1416              	.L75:
 1417              		.loc 1 855 0 discriminator 4
 1418 0074 FB68     		ldr	r3, [r7, #12]
 1419 0076 FF22     		movs	r2, #255
 1420 0078 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1421 007c 23E0     		b	.L77
 1422              	.L74:
 1423              		.loc 1 855 0 discriminator 2
 1424 007e FB68     		ldr	r3, [r7, #12]
 1425 0080 9B68     		ldr	r3, [r3, #8]
 1426 0082 002B     		cmp	r3, #0
 1427 0084 0DD1     		bne	.L78
 1428              		.loc 1 855 0 discriminator 5
 1429 0086 FB68     		ldr	r3, [r7, #12]
 1430 0088 1B69     		ldr	r3, [r3, #16]
 1431 008a 002B     		cmp	r3, #0
 1432 008c 04D1     		bne	.L79
 1433              		.loc 1 855 0 discriminator 7
 1434 008e FB68     		ldr	r3, [r7, #12]
 1435 0090 FF22     		movs	r2, #255
 1436 0092 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1437 0096 16E0     		b	.L77
 1438              	.L79:
 1439              		.loc 1 855 0 discriminator 8
 1440 0098 FB68     		ldr	r3, [r7, #12]
 1441 009a 7F22     		movs	r2, #127
 1442 009c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1443 00a0 11E0     		b	.L77
 1444              	.L78:
ARM GAS  /tmp/ccMdFX4h.s 			page 41


 1445              		.loc 1 855 0 discriminator 6
 1446 00a2 FB68     		ldr	r3, [r7, #12]
 1447 00a4 9B68     		ldr	r3, [r3, #8]
 1448 00a6 B3F1805F 		cmp	r3, #268435456
 1449 00aa 0CD1     		bne	.L77
 1450              		.loc 1 855 0 discriminator 9
 1451 00ac FB68     		ldr	r3, [r7, #12]
 1452 00ae 1B69     		ldr	r3, [r3, #16]
 1453 00b0 002B     		cmp	r3, #0
 1454 00b2 04D1     		bne	.L81
 1455              		.loc 1 855 0 discriminator 10
 1456 00b4 FB68     		ldr	r3, [r7, #12]
 1457 00b6 7F22     		movs	r2, #127
 1458 00b8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1459 00bc 03E0     		b	.L77
 1460              	.L81:
 1461              		.loc 1 855 0 discriminator 11
 1462 00be FB68     		ldr	r3, [r7, #12]
 1463 00c0 3F22     		movs	r2, #63
 1464 00c2 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1465              	.L77:
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1466              		.loc 1 857 0 is_stmt 1
 1467 00c6 FB68     		ldr	r3, [r7, #12]
 1468 00c8 0022     		movs	r2, #0
 1469 00ca DA66     		str	r2, [r3, #108]
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1470              		.loc 1 858 0
 1471 00cc FB68     		ldr	r3, [r7, #12]
 1472 00ce 2222     		movs	r2, #34
 1473 00d0 83F86A20 		strb	r2, [r3, #106]
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1474              		.loc 1 861 0
 1475 00d4 FB68     		ldr	r3, [r7, #12]
 1476 00d6 0022     		movs	r2, #0
 1477 00d8 83F86820 		strb	r2, [r3, #104]
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1478              		.loc 1 864 0
 1479 00dc FB68     		ldr	r3, [r7, #12]
 1480 00de 1B68     		ldr	r3, [r3]
 1481 00e0 FA68     		ldr	r2, [r7, #12]
 1482 00e2 1268     		ldr	r2, [r2]
 1483 00e4 9268     		ldr	r2, [r2, #8]
 1484 00e6 42F00102 		orr	r2, r2, #1
 1485 00ea 9A60     		str	r2, [r3, #8]
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1486              		.loc 1 867 0
 1487 00ec FB68     		ldr	r3, [r7, #12]
 1488 00ee 1B68     		ldr	r3, [r3]
 1489 00f0 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 42


 1490 00f2 1268     		ldr	r2, [r2]
 1491 00f4 1268     		ldr	r2, [r2]
 1492 00f6 42F49072 		orr	r2, r2, #288
 1493 00fa 1A60     		str	r2, [r3]
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1494              		.loc 1 869 0
 1495 00fc 0023     		movs	r3, #0
 1496 00fe 00E0     		b	.L72
 1497              	.L69:
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1498              		.loc 1 873 0
 1499 0100 0223     		movs	r3, #2
 1500              	.L72:
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1501              		.loc 1 875 0
 1502 0102 1846     		mov	r0, r3
 1503 0104 1437     		adds	r7, r7, #20
 1504              	.LCFI56:
 1505              		.cfi_def_cfa_offset 4
 1506 0106 BD46     		mov	sp, r7
 1507              	.LCFI57:
 1508              		.cfi_def_cfa_register 13
 1509              		@ sp needed
 1510 0108 5DF8047B 		ldr	r7, [sp], #4
 1511              	.LCFI58:
 1512              		.cfi_restore 7
 1513              		.cfi_def_cfa_offset 0
 1514 010c 7047     		bx	lr
 1515              		.cfi_endproc
 1516              	.LFE136:
 1518              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1519              		.align	1
 1520              		.global	HAL_UART_Transmit_DMA
 1521              		.syntax unified
 1522              		.thumb
 1523              		.thumb_func
 1524              		.fpu fpv4-sp-d16
 1526              	HAL_UART_Transmit_DMA:
 1527              	.LFB137:
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size: amount of data to be sent.
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1528              		.loc 1 885 0
 1529              		.cfi_startproc
 1530              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccMdFX4h.s 			page 43


 1531              		@ frame_needed = 1, uses_anonymous_args = 0
 1532 0000 80B5     		push	{r7, lr}
 1533              	.LCFI59:
 1534              		.cfi_def_cfa_offset 8
 1535              		.cfi_offset 7, -8
 1536              		.cfi_offset 14, -4
 1537 0002 84B0     		sub	sp, sp, #16
 1538              	.LCFI60:
 1539              		.cfi_def_cfa_offset 24
 1540 0004 00AF     		add	r7, sp, #0
 1541              	.LCFI61:
 1542              		.cfi_def_cfa_register 7
 1543 0006 F860     		str	r0, [r7, #12]
 1544 0008 B960     		str	r1, [r7, #8]
 1545 000a 1346     		mov	r3, r2
 1546 000c FB80     		strh	r3, [r7, #6]	@ movhi
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 1547              		.loc 1 887 0
 1548 000e FB68     		ldr	r3, [r7, #12]
 1549 0010 93F86930 		ldrb	r3, [r3, #105]
 1550 0014 DBB2     		uxtb	r3, r3
 1551 0016 202B     		cmp	r3, #32
 1552 0018 52D1     		bne	.L83
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1553              		.loc 1 889 0
 1554 001a BB68     		ldr	r3, [r7, #8]
 1555 001c 002B     		cmp	r3, #0
 1556 001e 02D0     		beq	.L84
 1557              		.loc 1 889 0 is_stmt 0 discriminator 1
 1558 0020 FB88     		ldrh	r3, [r7, #6]
 1559 0022 002B     		cmp	r3, #0
 1560 0024 01D1     		bne	.L85
 1561              	.L84:
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1562              		.loc 1 891 0 is_stmt 1
 1563 0026 0123     		movs	r3, #1
 1564 0028 4BE0     		b	.L86
 1565              	.L85:
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1566              		.loc 1 895 0
 1567 002a FB68     		ldr	r3, [r7, #12]
 1568 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1569 0030 012B     		cmp	r3, #1
 1570 0032 01D1     		bne	.L87
 1571              		.loc 1 895 0 is_stmt 0 discriminator 1
 1572 0034 0223     		movs	r3, #2
 1573 0036 44E0     		b	.L86
 1574              	.L87:
 1575              		.loc 1 895 0 discriminator 2
 1576 0038 FB68     		ldr	r3, [r7, #12]
 1577 003a 0122     		movs	r2, #1
ARM GAS  /tmp/ccMdFX4h.s 			page 44


 1578 003c 83F86820 		strb	r2, [r3, #104]
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1579              		.loc 1 897 0 is_stmt 1 discriminator 2
 1580 0040 FB68     		ldr	r3, [r7, #12]
 1581 0042 BA68     		ldr	r2, [r7, #8]
 1582 0044 DA64     		str	r2, [r3, #76]
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1583              		.loc 1 898 0 discriminator 2
 1584 0046 FB68     		ldr	r3, [r7, #12]
 1585 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1586 004a A3F85020 		strh	r2, [r3, #80]	@ movhi
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1587              		.loc 1 899 0 discriminator 2
 1588 004e FB68     		ldr	r3, [r7, #12]
 1589 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1590 0052 A3F85220 		strh	r2, [r3, #82]	@ movhi
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1591              		.loc 1 901 0 discriminator 2
 1592 0056 FB68     		ldr	r3, [r7, #12]
 1593 0058 0022     		movs	r2, #0
 1594 005a DA66     		str	r2, [r3, #108]
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1595              		.loc 1 902 0 discriminator 2
 1596 005c FB68     		ldr	r3, [r7, #12]
 1597 005e 2122     		movs	r2, #33
 1598 0060 83F86920 		strb	r2, [r3, #105]
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1599              		.loc 1 905 0 discriminator 2
 1600 0064 FB68     		ldr	r3, [r7, #12]
 1601 0066 1B6E     		ldr	r3, [r3, #96]
 1602 0068 184A     		ldr	r2, .L88
 1603 006a DA62     		str	r2, [r3, #44]
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1604              		.loc 1 908 0 discriminator 2
 1605 006c FB68     		ldr	r3, [r7, #12]
 1606 006e 1B6E     		ldr	r3, [r3, #96]
 1607 0070 174A     		ldr	r2, .L88+4
 1608 0072 1A63     		str	r2, [r3, #48]
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1609              		.loc 1 911 0 discriminator 2
 1610 0074 FB68     		ldr	r3, [r7, #12]
 1611 0076 1B6E     		ldr	r3, [r3, #96]
 1612 0078 164A     		ldr	r2, .L88+8
 1613 007a 5A63     		str	r2, [r3, #52]
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1614              		.loc 1 914 0 discriminator 2
 1615 007c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 45


 1616 007e 1B6E     		ldr	r3, [r3, #96]
 1617 0080 0022     		movs	r2, #0
 1618 0082 9A63     		str	r2, [r3, #56]
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART transmit DMA channel */
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, S
 1619              		.loc 1 917 0 discriminator 2
 1620 0084 FB68     		ldr	r3, [r7, #12]
 1621 0086 186E     		ldr	r0, [r3, #96]
 1622 0088 FB68     		ldr	r3, [r7, #12]
 1623 008a DB6C     		ldr	r3, [r3, #76]
 1624 008c 1946     		mov	r1, r3
 1625 008e FB68     		ldr	r3, [r7, #12]
 1626 0090 1B68     		ldr	r3, [r3]
 1627 0092 2833     		adds	r3, r3, #40
 1628 0094 1A46     		mov	r2, r3
 1629 0096 FB88     		ldrh	r3, [r7, #6]
 1630 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1631              		.loc 1 920 0 discriminator 2
 1632 009c FB68     		ldr	r3, [r7, #12]
 1633 009e 1B68     		ldr	r3, [r3]
 1634 00a0 4022     		movs	r2, #64
 1635 00a2 1A62     		str	r2, [r3, #32]
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1636              		.loc 1 923 0 discriminator 2
 1637 00a4 FB68     		ldr	r3, [r7, #12]
 1638 00a6 0022     		movs	r2, #0
 1639 00a8 83F86820 		strb	r2, [r3, #104]
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1640              		.loc 1 927 0 discriminator 2
 1641 00ac FB68     		ldr	r3, [r7, #12]
 1642 00ae 1B68     		ldr	r3, [r3]
 1643 00b0 FA68     		ldr	r2, [r7, #12]
 1644 00b2 1268     		ldr	r2, [r2]
 1645 00b4 9268     		ldr	r2, [r2, #8]
 1646 00b6 42F08002 		orr	r2, r2, #128
 1647 00ba 9A60     		str	r2, [r3, #8]
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1648              		.loc 1 929 0 discriminator 2
 1649 00bc 0023     		movs	r3, #0
 1650 00be 00E0     		b	.L86
 1651              	.L83:
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1652              		.loc 1 933 0
 1653 00c0 0223     		movs	r3, #2
ARM GAS  /tmp/ccMdFX4h.s 			page 46


 1654              	.L86:
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1655              		.loc 1 935 0
 1656 00c2 1846     		mov	r0, r3
 1657 00c4 1037     		adds	r7, r7, #16
 1658              	.LCFI62:
 1659              		.cfi_def_cfa_offset 8
 1660 00c6 BD46     		mov	sp, r7
 1661              	.LCFI63:
 1662              		.cfi_def_cfa_register 13
 1663              		@ sp needed
 1664 00c8 80BD     		pop	{r7, pc}
 1665              	.L89:
 1666 00ca 00BF     		.align	2
 1667              	.L88:
 1668 00cc 00000000 		.word	UART_DMATransmitCplt
 1669 00d0 00000000 		.word	UART_DMATxHalfCplt
 1670 00d4 00000000 		.word	UART_DMAError
 1671              		.cfi_endproc
 1672              	.LFE137:
 1674              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1675              		.align	1
 1676              		.global	HAL_UART_Receive_DMA
 1677              		.syntax unified
 1678              		.thumb
 1679              		.thumb_func
 1680              		.fpu fpv4-sp-d16
 1682              	HAL_UART_Receive_DMA:
 1683              	.LFB138:
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData: pointer to data buffer.
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size: amount of data to be received.
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1684              		.loc 1 947 0
 1685              		.cfi_startproc
 1686              		@ args = 0, pretend = 0, frame = 16
 1687              		@ frame_needed = 1, uses_anonymous_args = 0
 1688 0000 80B5     		push	{r7, lr}
 1689              	.LCFI64:
 1690              		.cfi_def_cfa_offset 8
 1691              		.cfi_offset 7, -8
 1692              		.cfi_offset 14, -4
 1693 0002 84B0     		sub	sp, sp, #16
 1694              	.LCFI65:
 1695              		.cfi_def_cfa_offset 24
 1696 0004 00AF     		add	r7, sp, #0
 1697              	.LCFI66:
 1698              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccMdFX4h.s 			page 47


 1699 0006 F860     		str	r0, [r7, #12]
 1700 0008 B960     		str	r1, [r7, #8]
 1701 000a 1346     		mov	r3, r2
 1702 000c FB80     		strh	r3, [r7, #6]	@ movhi
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 1703              		.loc 1 949 0
 1704 000e FB68     		ldr	r3, [r7, #12]
 1705 0010 93F86A30 		ldrb	r3, [r3, #106]
 1706 0014 DBB2     		uxtb	r3, r3
 1707 0016 202B     		cmp	r3, #32
 1708 0018 5AD1     		bne	.L91
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 1709              		.loc 1 951 0
 1710 001a BB68     		ldr	r3, [r7, #8]
 1711 001c 002B     		cmp	r3, #0
 1712 001e 02D0     		beq	.L92
 1713              		.loc 1 951 0 is_stmt 0 discriminator 1
 1714 0020 FB88     		ldrh	r3, [r7, #6]
 1715 0022 002B     		cmp	r3, #0
 1716 0024 01D1     		bne	.L93
 1717              	.L92:
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1718              		.loc 1 953 0 is_stmt 1
 1719 0026 0123     		movs	r3, #1
 1720 0028 53E0     		b	.L94
 1721              	.L93:
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Locked */
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1722              		.loc 1 957 0
 1723 002a FB68     		ldr	r3, [r7, #12]
 1724 002c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1725 0030 012B     		cmp	r3, #1
 1726 0032 01D1     		bne	.L95
 1727              		.loc 1 957 0 is_stmt 0 discriminator 1
 1728 0034 0223     		movs	r3, #2
 1729 0036 4CE0     		b	.L94
 1730              	.L95:
 1731              		.loc 1 957 0 discriminator 2
 1732 0038 FB68     		ldr	r3, [r7, #12]
 1733 003a 0122     		movs	r2, #1
 1734 003c 83F86820 		strb	r2, [r3, #104]
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1735              		.loc 1 959 0 is_stmt 1 discriminator 2
 1736 0040 FB68     		ldr	r3, [r7, #12]
 1737 0042 BA68     		ldr	r2, [r7, #8]
 1738 0044 5A65     		str	r2, [r3, #84]
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1739              		.loc 1 960 0 discriminator 2
 1740 0046 FB68     		ldr	r3, [r7, #12]
 1741 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1742 004a A3F85820 		strh	r2, [r3, #88]	@ movhi
ARM GAS  /tmp/ccMdFX4h.s 			page 48


 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1743              		.loc 1 962 0 discriminator 2
 1744 004e FB68     		ldr	r3, [r7, #12]
 1745 0050 0022     		movs	r2, #0
 1746 0052 DA66     		str	r2, [r3, #108]
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1747              		.loc 1 963 0 discriminator 2
 1748 0054 FB68     		ldr	r3, [r7, #12]
 1749 0056 2222     		movs	r2, #34
 1750 0058 83F86A20 		strb	r2, [r3, #106]
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1751              		.loc 1 966 0 discriminator 2
 1752 005c FB68     		ldr	r3, [r7, #12]
 1753 005e 5B6E     		ldr	r3, [r3, #100]
 1754 0060 1E4A     		ldr	r2, .L96
 1755 0062 DA62     		str	r2, [r3, #44]
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1756              		.loc 1 969 0 discriminator 2
 1757 0064 FB68     		ldr	r3, [r7, #12]
 1758 0066 5B6E     		ldr	r3, [r3, #100]
 1759 0068 1D4A     		ldr	r2, .L96+4
 1760 006a 1A63     		str	r2, [r3, #48]
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA error callback */
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 1761              		.loc 1 972 0 discriminator 2
 1762 006c FB68     		ldr	r3, [r7, #12]
 1763 006e 5B6E     		ldr	r3, [r3, #100]
 1764 0070 1C4A     		ldr	r2, .L96+8
 1765 0072 5A63     		str	r2, [r3, #52]
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the DMA abort callback */
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 1766              		.loc 1 975 0 discriminator 2
 1767 0074 FB68     		ldr	r3, [r7, #12]
 1768 0076 5B6E     		ldr	r3, [r3, #100]
 1769 0078 0022     		movs	r2, #0
 1770 007a 9A63     		str	r2, [r3, #56]
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA channel */
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuffPtr, S
 1771              		.loc 1 978 0 discriminator 2
 1772 007c FB68     		ldr	r3, [r7, #12]
 1773 007e 586E     		ldr	r0, [r3, #100]
 1774 0080 FB68     		ldr	r3, [r7, #12]
 1775 0082 1B68     		ldr	r3, [r3]
 1776 0084 2433     		adds	r3, r3, #36
 1777 0086 1946     		mov	r1, r3
 1778 0088 FB68     		ldr	r3, [r7, #12]
 1779 008a 5B6D     		ldr	r3, [r3, #84]
 1780 008c 1A46     		mov	r2, r3
 1781 008e FB88     		ldrh	r3, [r7, #6]
ARM GAS  /tmp/ccMdFX4h.s 			page 49


 1782 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Process Unlocked */
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1783              		.loc 1 981 0 discriminator 2
 1784 0094 FB68     		ldr	r3, [r7, #12]
 1785 0096 0022     		movs	r2, #0
 1786 0098 83F86820 		strb	r2, [r3, #104]
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1787              		.loc 1 984 0 discriminator 2
 1788 009c FB68     		ldr	r3, [r7, #12]
 1789 009e 1B68     		ldr	r3, [r3]
 1790 00a0 FA68     		ldr	r2, [r7, #12]
 1791 00a2 1268     		ldr	r2, [r2]
 1792 00a4 1268     		ldr	r2, [r2]
 1793 00a6 42F48072 		orr	r2, r2, #256
 1794 00aa 1A60     		str	r2, [r3]
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1795              		.loc 1 987 0 discriminator 2
 1796 00ac FB68     		ldr	r3, [r7, #12]
 1797 00ae 1B68     		ldr	r3, [r3]
 1798 00b0 FA68     		ldr	r2, [r7, #12]
 1799 00b2 1268     		ldr	r2, [r2]
 1800 00b4 9268     		ldr	r2, [r2, #8]
 1801 00b6 42F00102 		orr	r2, r2, #1
 1802 00ba 9A60     		str	r2, [r3, #8]
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1803              		.loc 1 991 0 discriminator 2
 1804 00bc FB68     		ldr	r3, [r7, #12]
 1805 00be 1B68     		ldr	r3, [r3]
 1806 00c0 FA68     		ldr	r2, [r7, #12]
 1807 00c2 1268     		ldr	r2, [r2]
 1808 00c4 9268     		ldr	r2, [r2, #8]
 1809 00c6 42F04002 		orr	r2, r2, #64
 1810 00ca 9A60     		str	r2, [r3, #8]
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1811              		.loc 1 993 0 discriminator 2
 1812 00cc 0023     		movs	r3, #0
 1813 00ce 00E0     		b	.L94
 1814              	.L91:
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1815              		.loc 1 997 0
 1816 00d0 0223     		movs	r3, #2
 1817              	.L94:
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccMdFX4h.s 			page 50


 1818              		.loc 1 999 0
 1819 00d2 1846     		mov	r0, r3
 1820 00d4 1037     		adds	r7, r7, #16
 1821              	.LCFI67:
 1822              		.cfi_def_cfa_offset 8
 1823 00d6 BD46     		mov	sp, r7
 1824              	.LCFI68:
 1825              		.cfi_def_cfa_register 13
 1826              		@ sp needed
 1827 00d8 80BD     		pop	{r7, pc}
 1828              	.L97:
 1829 00da 00BF     		.align	2
 1830              	.L96:
 1831 00dc 00000000 		.word	UART_DMAReceiveCplt
 1832 00e0 00000000 		.word	UART_DMARxHalfCplt
 1833 00e4 00000000 		.word	UART_DMAError
 1834              		.cfi_endproc
 1835              	.LFE138:
 1837              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1838              		.align	1
 1839              		.global	HAL_UART_DMAPause
 1840              		.syntax unified
 1841              		.thumb
 1842              		.thumb_func
 1843              		.fpu fpv4-sp-d16
 1845              	HAL_UART_DMAPause:
 1846              	.LFB139:
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1847              		.loc 1 1007 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 8
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852 0000 80B4     		push	{r7}
 1853              	.LCFI69:
 1854              		.cfi_def_cfa_offset 4
 1855              		.cfi_offset 7, -4
 1856 0002 83B0     		sub	sp, sp, #12
 1857              	.LCFI70:
 1858              		.cfi_def_cfa_offset 16
 1859 0004 00AF     		add	r7, sp, #0
 1860              	.LCFI71:
 1861              		.cfi_def_cfa_register 7
 1862 0006 7860     		str	r0, [r7, #4]
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1863              		.loc 1 1009 0
 1864 0008 7B68     		ldr	r3, [r7, #4]
 1865 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1866 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccMdFX4h.s 			page 51


 1867 0010 01D1     		bne	.L99
 1868              		.loc 1 1009 0 is_stmt 0 discriminator 1
 1869 0012 0223     		movs	r3, #2
 1870 0014 42E0     		b	.L100
 1871              	.L99:
 1872              		.loc 1 1009 0 discriminator 2
 1873 0016 7B68     		ldr	r3, [r7, #4]
 1874 0018 0122     		movs	r2, #1
 1875 001a 83F86820 		strb	r2, [r3, #104]
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 1876              		.loc 1 1011 0 is_stmt 1 discriminator 2
 1877 001e 7B68     		ldr	r3, [r7, #4]
 1878 0020 93F86930 		ldrb	r3, [r3, #105]
 1879 0024 DBB2     		uxtb	r3, r3
 1880 0026 212B     		cmp	r3, #33
 1881 0028 0ED1     		bne	.L101
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1882              		.loc 1 1012 0 discriminator 1
 1883 002a 7B68     		ldr	r3, [r7, #4]
 1884 002c 1B68     		ldr	r3, [r3]
 1885 002e 9B68     		ldr	r3, [r3, #8]
 1886 0030 03F08003 		and	r3, r3, #128
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 1887              		.loc 1 1011 0 discriminator 1
 1888 0034 802B     		cmp	r3, #128
 1889 0036 07D1     		bne	.L101
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1890              		.loc 1 1015 0
 1891 0038 7B68     		ldr	r3, [r7, #4]
 1892 003a 1B68     		ldr	r3, [r3]
 1893 003c 7A68     		ldr	r2, [r7, #4]
 1894 003e 1268     		ldr	r2, [r2]
 1895 0040 9268     		ldr	r2, [r2, #8]
 1896 0042 22F08002 		bic	r2, r2, #128
 1897 0046 9A60     		str	r2, [r3, #8]
 1898              	.L101:
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 1899              		.loc 1 1017 0
 1900 0048 7B68     		ldr	r3, [r7, #4]
 1901 004a 93F86A30 		ldrb	r3, [r3, #106]
 1902 004e DBB2     		uxtb	r3, r3
 1903 0050 222B     		cmp	r3, #34
 1904 0052 1ED1     		bne	.L102
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1905              		.loc 1 1018 0 discriminator 1
 1906 0054 7B68     		ldr	r3, [r7, #4]
 1907 0056 1B68     		ldr	r3, [r3]
 1908 0058 9B68     		ldr	r3, [r3, #8]
 1909 005a 03F04003 		and	r3, r3, #64
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 1910              		.loc 1 1017 0 discriminator 1
 1911 005e 402B     		cmp	r3, #64
 1912 0060 17D1     		bne	.L102
ARM GAS  /tmp/ccMdFX4h.s 			page 52


1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1913              		.loc 1 1021 0
 1914 0062 7B68     		ldr	r3, [r7, #4]
 1915 0064 1B68     		ldr	r3, [r3]
 1916 0066 7A68     		ldr	r2, [r7, #4]
 1917 0068 1268     		ldr	r2, [r2]
 1918 006a 1268     		ldr	r2, [r2]
 1919 006c 22F48072 		bic	r2, r2, #256
 1920 0070 1A60     		str	r2, [r3]
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1921              		.loc 1 1022 0
 1922 0072 7B68     		ldr	r3, [r7, #4]
 1923 0074 1B68     		ldr	r3, [r3]
 1924 0076 7A68     		ldr	r2, [r7, #4]
 1925 0078 1268     		ldr	r2, [r2]
 1926 007a 9268     		ldr	r2, [r2, #8]
 1927 007c 22F00102 		bic	r2, r2, #1
 1928 0080 9A60     		str	r2, [r3, #8]
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1929              		.loc 1 1025 0
 1930 0082 7B68     		ldr	r3, [r7, #4]
 1931 0084 1B68     		ldr	r3, [r3]
 1932 0086 7A68     		ldr	r2, [r7, #4]
 1933 0088 1268     		ldr	r2, [r2]
 1934 008a 9268     		ldr	r2, [r2, #8]
 1935 008c 22F04002 		bic	r2, r2, #64
 1936 0090 9A60     		str	r2, [r3, #8]
 1937              	.L102:
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1938              		.loc 1 1029 0
 1939 0092 7B68     		ldr	r3, [r7, #4]
 1940 0094 0022     		movs	r2, #0
 1941 0096 83F86820 		strb	r2, [r3, #104]
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 1942              		.loc 1 1031 0
 1943 009a 0023     		movs	r3, #0
 1944              	.L100:
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1945              		.loc 1 1032 0
 1946 009c 1846     		mov	r0, r3
 1947 009e 0C37     		adds	r7, r7, #12
 1948              	.LCFI72:
 1949              		.cfi_def_cfa_offset 4
 1950 00a0 BD46     		mov	sp, r7
 1951              	.LCFI73:
 1952              		.cfi_def_cfa_register 13
 1953              		@ sp needed
 1954 00a2 5DF8047B 		ldr	r7, [sp], #4
 1955              	.LCFI74:
ARM GAS  /tmp/ccMdFX4h.s 			page 53


 1956              		.cfi_restore 7
 1957              		.cfi_def_cfa_offset 0
 1958 00a6 7047     		bx	lr
 1959              		.cfi_endproc
 1960              	.LFE139:
 1962              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1963              		.align	1
 1964              		.global	HAL_UART_DMAResume
 1965              		.syntax unified
 1966              		.thumb
 1967              		.thumb_func
 1968              		.fpu fpv4-sp-d16
 1970              	HAL_UART_DMAResume:
 1971              	.LFB140:
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1972              		.loc 1 1040 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 8
 1975              		@ frame_needed = 1, uses_anonymous_args = 0
 1976              		@ link register save eliminated.
 1977 0000 80B4     		push	{r7}
 1978              	.LCFI75:
 1979              		.cfi_def_cfa_offset 4
 1980              		.cfi_offset 7, -4
 1981 0002 83B0     		sub	sp, sp, #12
 1982              	.LCFI76:
 1983              		.cfi_def_cfa_offset 16
 1984 0004 00AF     		add	r7, sp, #0
 1985              	.LCFI77:
 1986              		.cfi_def_cfa_register 7
 1987 0006 7860     		str	r0, [r7, #4]
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1988              		.loc 1 1042 0
 1989 0008 7B68     		ldr	r3, [r7, #4]
 1990 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 1991 000e 012B     		cmp	r3, #1
 1992 0010 01D1     		bne	.L104
 1993              		.loc 1 1042 0 is_stmt 0 discriminator 1
 1994 0012 0223     		movs	r3, #2
 1995 0014 38E0     		b	.L105
 1996              	.L104:
 1997              		.loc 1 1042 0 discriminator 2
 1998 0016 7B68     		ldr	r3, [r7, #4]
 1999 0018 0122     		movs	r2, #1
 2000 001a 83F86820 		strb	r2, [r3, #104]
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
 2001              		.loc 1 1044 0 is_stmt 1 discriminator 2
 2002 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 54


 2003 0020 93F86930 		ldrb	r3, [r3, #105]
 2004 0024 DBB2     		uxtb	r3, r3
 2005 0026 212B     		cmp	r3, #33
 2006 0028 07D1     		bne	.L106
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2007              		.loc 1 1047 0
 2008 002a 7B68     		ldr	r3, [r7, #4]
 2009 002c 1B68     		ldr	r3, [r3]
 2010 002e 7A68     		ldr	r2, [r7, #4]
 2011 0030 1268     		ldr	r2, [r2]
 2012 0032 9268     		ldr	r2, [r2, #8]
 2013 0034 42F08002 		orr	r2, r2, #128
 2014 0038 9A60     		str	r2, [r3, #8]
 2015              	.L106:
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 2016              		.loc 1 1049 0
 2017 003a 7B68     		ldr	r3, [r7, #4]
 2018 003c 93F86A30 		ldrb	r3, [r3, #106]
 2019 0040 DBB2     		uxtb	r3, r3
 2020 0042 222B     		cmp	r3, #34
 2021 0044 1BD1     		bne	.L107
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2022              		.loc 1 1052 0
 2023 0046 7B68     		ldr	r3, [r7, #4]
 2024 0048 1B68     		ldr	r3, [r3]
 2025 004a 0822     		movs	r2, #8
 2026 004c 1A62     		str	r2, [r3, #32]
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2027              		.loc 1 1055 0
 2028 004e 7B68     		ldr	r3, [r7, #4]
 2029 0050 1B68     		ldr	r3, [r3]
 2030 0052 7A68     		ldr	r2, [r7, #4]
 2031 0054 1268     		ldr	r2, [r2]
 2032 0056 1268     		ldr	r2, [r2]
 2033 0058 42F48072 		orr	r2, r2, #256
 2034 005c 1A60     		str	r2, [r3]
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2035              		.loc 1 1056 0
 2036 005e 7B68     		ldr	r3, [r7, #4]
 2037 0060 1B68     		ldr	r3, [r3]
 2038 0062 7A68     		ldr	r2, [r7, #4]
 2039 0064 1268     		ldr	r2, [r2]
 2040 0066 9268     		ldr	r2, [r2, #8]
 2041 0068 42F00102 		orr	r2, r2, #1
 2042 006c 9A60     		str	r2, [r3, #8]
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2043              		.loc 1 1059 0
 2044 006e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 55


 2045 0070 1B68     		ldr	r3, [r3]
 2046 0072 7A68     		ldr	r2, [r7, #4]
 2047 0074 1268     		ldr	r2, [r2]
 2048 0076 9268     		ldr	r2, [r2, #8]
 2049 0078 42F04002 		orr	r2, r2, #64
 2050 007c 9A60     		str	r2, [r3, #8]
 2051              	.L107:
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2052              		.loc 1 1063 0
 2053 007e 7B68     		ldr	r3, [r7, #4]
 2054 0080 0022     		movs	r2, #0
 2055 0082 83F86820 		strb	r2, [r3, #104]
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2056              		.loc 1 1065 0
 2057 0086 0023     		movs	r3, #0
 2058              	.L105:
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2059              		.loc 1 1066 0
 2060 0088 1846     		mov	r0, r3
 2061 008a 0C37     		adds	r7, r7, #12
 2062              	.LCFI78:
 2063              		.cfi_def_cfa_offset 4
 2064 008c BD46     		mov	sp, r7
 2065              	.LCFI79:
 2066              		.cfi_def_cfa_register 13
 2067              		@ sp needed
 2068 008e 5DF8047B 		ldr	r7, [sp], #4
 2069              	.LCFI80:
 2070              		.cfi_restore 7
 2071              		.cfi_def_cfa_offset 0
 2072 0092 7047     		bx	lr
 2073              		.cfi_endproc
 2074              	.LFE140:
 2076              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2077              		.align	1
 2078              		.global	HAL_UART_DMAStop
 2079              		.syntax unified
 2080              		.thumb
 2081              		.thumb_func
 2082              		.fpu fpv4-sp-d16
 2084              	HAL_UART_DMAStop:
 2085              	.LFB141:
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2086              		.loc 1 1074 0
 2087              		.cfi_startproc
 2088              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccMdFX4h.s 			page 56


 2089              		@ frame_needed = 1, uses_anonymous_args = 0
 2090 0000 80B5     		push	{r7, lr}
 2091              	.LCFI81:
 2092              		.cfi_def_cfa_offset 8
 2093              		.cfi_offset 7, -8
 2094              		.cfi_offset 14, -4
 2095 0002 82B0     		sub	sp, sp, #8
 2096              	.LCFI82:
 2097              		.cfi_def_cfa_offset 16
 2098 0004 00AF     		add	r7, sp, #0
 2099              	.LCFI83:
 2100              		.cfi_def_cfa_register 7
 2101 0006 7860     		str	r0, [r7, #4]
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback: 
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete  
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of 
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) &&
 2102              		.loc 1 1083 0
 2103 0008 7B68     		ldr	r3, [r7, #4]
 2104 000a 93F86930 		ldrb	r3, [r3, #105]
 2105 000e DBB2     		uxtb	r3, r3
 2106 0010 212B     		cmp	r3, #33
 2107 0012 1AD1     		bne	.L109
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2108              		.loc 1 1084 0 discriminator 1
 2109 0014 7B68     		ldr	r3, [r7, #4]
 2110 0016 1B68     		ldr	r3, [r3]
 2111 0018 9B68     		ldr	r3, [r3, #8]
 2112 001a 03F08003 		and	r3, r3, #128
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)))
 2113              		.loc 1 1083 0 discriminator 1
 2114 001e 802B     		cmp	r3, #128
 2115 0020 13D1     		bne	.L109
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2116              		.loc 1 1086 0
 2117 0022 7B68     		ldr	r3, [r7, #4]
 2118 0024 1B68     		ldr	r3, [r3]
 2119 0026 7A68     		ldr	r2, [r7, #4]
 2120 0028 1268     		ldr	r2, [r2]
 2121 002a 9268     		ldr	r2, [r2, #8]
 2122 002c 22F08002 		bic	r2, r2, #128
 2123 0030 9A60     		str	r2, [r3, #8]
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2124              		.loc 1 1089 0
 2125 0032 7B68     		ldr	r3, [r7, #4]
 2126 0034 1B6E     		ldr	r3, [r3, #96]
 2127 0036 002B     		cmp	r3, #0
 2128 0038 04D0     		beq	.L110
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccMdFX4h.s 			page 57


1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2129              		.loc 1 1091 0
 2130 003a 7B68     		ldr	r3, [r7, #4]
 2131 003c 1B6E     		ldr	r3, [r3, #96]
 2132 003e 1846     		mov	r0, r3
 2133 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 2134              	.L110:
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2135              		.loc 1 1094 0
 2136 0044 7868     		ldr	r0, [r7, #4]
 2137 0046 FFF7FEFF 		bl	UART_EndTxTransfer
 2138              	.L109:
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) &&
 2139              		.loc 1 1098 0
 2140 004a 7B68     		ldr	r3, [r7, #4]
 2141 004c 93F86A30 		ldrb	r3, [r3, #106]
 2142 0050 DBB2     		uxtb	r3, r3
 2143 0052 222B     		cmp	r3, #34
 2144 0054 1AD1     		bne	.L111
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2145              		.loc 1 1099 0 discriminator 1
 2146 0056 7B68     		ldr	r3, [r7, #4]
 2147 0058 1B68     		ldr	r3, [r3]
 2148 005a 9B68     		ldr	r3, [r3, #8]
 2149 005c 03F04003 		and	r3, r3, #64
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 2150              		.loc 1 1098 0 discriminator 1
 2151 0060 402B     		cmp	r3, #64
 2152 0062 13D1     		bne	.L111
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2153              		.loc 1 1101 0
 2154 0064 7B68     		ldr	r3, [r7, #4]
 2155 0066 1B68     		ldr	r3, [r3]
 2156 0068 7A68     		ldr	r2, [r7, #4]
 2157 006a 1268     		ldr	r2, [r2]
 2158 006c 9268     		ldr	r2, [r2, #8]
 2159 006e 22F04002 		bic	r2, r2, #64
 2160 0072 9A60     		str	r2, [r3, #8]
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2161              		.loc 1 1104 0
 2162 0074 7B68     		ldr	r3, [r7, #4]
 2163 0076 5B6E     		ldr	r3, [r3, #100]
 2164 0078 002B     		cmp	r3, #0
 2165 007a 04D0     		beq	.L112
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2166              		.loc 1 1106 0
 2167 007c 7B68     		ldr	r3, [r7, #4]
 2168 007e 5B6E     		ldr	r3, [r3, #100]
ARM GAS  /tmp/ccMdFX4h.s 			page 58


 2169 0080 1846     		mov	r0, r3
 2170 0082 FFF7FEFF 		bl	HAL_DMA_Abort
 2171              	.L112:
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2172              		.loc 1 1109 0
 2173 0086 7868     		ldr	r0, [r7, #4]
 2174 0088 FFF7FEFF 		bl	UART_EndRxTransfer
 2175              	.L111:
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2176              		.loc 1 1112 0
 2177 008c 0023     		movs	r3, #0
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2178              		.loc 1 1113 0
 2179 008e 1846     		mov	r0, r3
 2180 0090 0837     		adds	r7, r7, #8
 2181              	.LCFI84:
 2182              		.cfi_def_cfa_offset 8
 2183 0092 BD46     		mov	sp, r7
 2184              	.LCFI85:
 2185              		.cfi_def_cfa_register 13
 2186              		@ sp needed
 2187 0094 80BD     		pop	{r7, pc}
 2188              		.cfi_endproc
 2189              	.LFE141:
 2191              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2192              		.align	1
 2193              		.global	HAL_UART_Abort
 2194              		.syntax unified
 2195              		.thumb
 2196              		.thumb_func
 2197              		.fpu fpv4-sp-d16
 2199              	HAL_UART_Abort:
 2200              	.LFB142:
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2201              		.loc 1 1128 0
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 8
 2204              		@ frame_needed = 1, uses_anonymous_args = 0
 2205 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccMdFX4h.s 			page 59


 2206              	.LCFI86:
 2207              		.cfi_def_cfa_offset 8
 2208              		.cfi_offset 7, -8
 2209              		.cfi_offset 14, -4
 2210 0002 82B0     		sub	sp, sp, #8
 2211              	.LCFI87:
 2212              		.cfi_def_cfa_offset 16
 2213 0004 00AF     		add	r7, sp, #0
 2214              	.LCFI88:
 2215              		.cfi_def_cfa_register 7
 2216 0006 7860     		str	r0, [r7, #4]
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2217              		.loc 1 1130 0
 2218 0008 7B68     		ldr	r3, [r7, #4]
 2219 000a 1B68     		ldr	r3, [r3]
 2220 000c 7A68     		ldr	r2, [r7, #4]
 2221 000e 1268     		ldr	r2, [r2]
 2222 0010 1268     		ldr	r2, [r2]
 2223 0012 22F4F072 		bic	r2, r2, #480
 2224 0016 1A60     		str	r2, [r3]
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2225              		.loc 1 1131 0
 2226 0018 7B68     		ldr	r3, [r7, #4]
 2227 001a 1B68     		ldr	r3, [r3]
 2228 001c 7A68     		ldr	r2, [r7, #4]
 2229 001e 1268     		ldr	r2, [r2]
 2230 0020 9268     		ldr	r2, [r2, #8]
 2231 0022 22F00102 		bic	r2, r2, #1
 2232 0026 9A60     		str	r2, [r3, #8]
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2233              		.loc 1 1134 0
 2234 0028 7B68     		ldr	r3, [r7, #4]
 2235 002a 1B68     		ldr	r3, [r3]
 2236 002c 9B68     		ldr	r3, [r3, #8]
 2237 002e 03F08003 		and	r3, r3, #128
 2238 0032 802B     		cmp	r3, #128
 2239 0034 14D1     		bne	.L115
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2240              		.loc 1 1136 0
 2241 0036 7B68     		ldr	r3, [r7, #4]
 2242 0038 1B68     		ldr	r3, [r3]
 2243 003a 7A68     		ldr	r2, [r7, #4]
 2244 003c 1268     		ldr	r2, [r2]
 2245 003e 9268     		ldr	r2, [r2, #8]
 2246 0040 22F08002 		bic	r2, r2, #128
 2247 0044 9A60     		str	r2, [r3, #8]
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2248              		.loc 1 1139 0
 2249 0046 7B68     		ldr	r3, [r7, #4]
 2250 0048 1B6E     		ldr	r3, [r3, #96]
 2251 004a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccMdFX4h.s 			page 60


 2252 004c 08D0     		beq	.L115
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2253              		.loc 1 1143 0
 2254 004e 7B68     		ldr	r3, [r7, #4]
 2255 0050 1B6E     		ldr	r3, [r3, #96]
 2256 0052 0022     		movs	r2, #0
 2257 0054 9A63     		str	r2, [r3, #56]
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2258              		.loc 1 1145 0
 2259 0056 7B68     		ldr	r3, [r7, #4]
 2260 0058 1B6E     		ldr	r3, [r3, #96]
 2261 005a 1846     		mov	r0, r3
 2262 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2263              	.L115:
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2264              		.loc 1 1150 0
 2265 0060 7B68     		ldr	r3, [r7, #4]
 2266 0062 1B68     		ldr	r3, [r3]
 2267 0064 9B68     		ldr	r3, [r3, #8]
 2268 0066 03F04003 		and	r3, r3, #64
 2269 006a 402B     		cmp	r3, #64
 2270 006c 14D1     		bne	.L116
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2271              		.loc 1 1152 0
 2272 006e 7B68     		ldr	r3, [r7, #4]
 2273 0070 1B68     		ldr	r3, [r3]
 2274 0072 7A68     		ldr	r2, [r7, #4]
 2275 0074 1268     		ldr	r2, [r2]
 2276 0076 9268     		ldr	r2, [r2, #8]
 2277 0078 22F04002 		bic	r2, r2, #64
 2278 007c 9A60     		str	r2, [r3, #8]
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2279              		.loc 1 1155 0
 2280 007e 7B68     		ldr	r3, [r7, #4]
 2281 0080 5B6E     		ldr	r3, [r3, #100]
 2282 0082 002B     		cmp	r3, #0
 2283 0084 08D0     		beq	.L116
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2284              		.loc 1 1159 0
 2285 0086 7B68     		ldr	r3, [r7, #4]
 2286 0088 5B6E     		ldr	r3, [r3, #100]
 2287 008a 0022     		movs	r2, #0
 2288 008c 9A63     		str	r2, [r3, #56]
ARM GAS  /tmp/ccMdFX4h.s 			page 61


1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2289              		.loc 1 1161 0
 2290 008e 7B68     		ldr	r3, [r7, #4]
 2291 0090 5B6E     		ldr	r3, [r3, #100]
 2292 0092 1846     		mov	r0, r3
 2293 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 2294              	.L116:
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0; 
 2295              		.loc 1 1166 0
 2296 0098 7B68     		ldr	r3, [r7, #4]
 2297 009a 0022     		movs	r2, #0
 2298 009c A3F85220 		strh	r2, [r3, #82]	@ movhi
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0; 
 2299              		.loc 1 1167 0
 2300 00a0 7B68     		ldr	r3, [r7, #4]
 2301 00a2 0022     		movs	r2, #0
 2302 00a4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2303              		.loc 1 1170 0
 2304 00a8 7B68     		ldr	r3, [r7, #4]
 2305 00aa 1B68     		ldr	r3, [r3]
 2306 00ac 0F22     		movs	r2, #15
 2307 00ae 1A62     		str	r2, [r3, #32]
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2308              		.loc 1 1173 0
 2309 00b0 7B68     		ldr	r3, [r7, #4]
 2310 00b2 2022     		movs	r2, #32
 2311 00b4 83F86920 		strb	r2, [r3, #105]
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2312              		.loc 1 1174 0
 2313 00b8 7B68     		ldr	r3, [r7, #4]
 2314 00ba 2022     		movs	r2, #32
 2315 00bc 83F86A20 		strb	r2, [r3, #106]
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2316              		.loc 1 1177 0
 2317 00c0 7B68     		ldr	r3, [r7, #4]
 2318 00c2 0022     		movs	r2, #0
 2319 00c4 DA66     		str	r2, [r3, #108]
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2320              		.loc 1 1179 0
 2321 00c6 0023     		movs	r3, #0
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2322              		.loc 1 1180 0
 2323 00c8 1846     		mov	r0, r3
 2324 00ca 0837     		adds	r7, r7, #8
ARM GAS  /tmp/ccMdFX4h.s 			page 62


 2325              	.LCFI89:
 2326              		.cfi_def_cfa_offset 8
 2327 00cc BD46     		mov	sp, r7
 2328              	.LCFI90:
 2329              		.cfi_def_cfa_register 13
 2330              		@ sp needed
 2331 00ce 80BD     		pop	{r7, pc}
 2332              		.cfi_endproc
 2333              	.LFE142:
 2335              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2336              		.align	1
 2337              		.global	HAL_UART_AbortTransmit
 2338              		.syntax unified
 2339              		.thumb
 2340              		.thumb_func
 2341              		.fpu fpv4-sp-d16
 2343              	HAL_UART_AbortTransmit:
 2344              	.LFB143:
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2345              		.loc 1 1195 0
 2346              		.cfi_startproc
 2347              		@ args = 0, pretend = 0, frame = 8
 2348              		@ frame_needed = 1, uses_anonymous_args = 0
 2349 0000 80B5     		push	{r7, lr}
 2350              	.LCFI91:
 2351              		.cfi_def_cfa_offset 8
 2352              		.cfi_offset 7, -8
 2353              		.cfi_offset 14, -4
 2354 0002 82B0     		sub	sp, sp, #8
 2355              	.LCFI92:
 2356              		.cfi_def_cfa_offset 16
 2357 0004 00AF     		add	r7, sp, #0
 2358              	.LCFI93:
 2359              		.cfi_def_cfa_register 7
 2360 0006 7860     		str	r0, [r7, #4]
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2361              		.loc 1 1197 0
 2362 0008 7B68     		ldr	r3, [r7, #4]
 2363 000a 1B68     		ldr	r3, [r3]
 2364 000c 7A68     		ldr	r2, [r7, #4]
 2365 000e 1268     		ldr	r2, [r2]
 2366 0010 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccMdFX4h.s 			page 63


 2367 0012 22F0C002 		bic	r2, r2, #192
 2368 0016 1A60     		str	r2, [r3]
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2369              		.loc 1 1200 0
 2370 0018 7B68     		ldr	r3, [r7, #4]
 2371 001a 1B68     		ldr	r3, [r3]
 2372 001c 9B68     		ldr	r3, [r3, #8]
 2373 001e 03F08003 		and	r3, r3, #128
 2374 0022 802B     		cmp	r3, #128
 2375 0024 14D1     		bne	.L119
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2376              		.loc 1 1202 0
 2377 0026 7B68     		ldr	r3, [r7, #4]
 2378 0028 1B68     		ldr	r3, [r3]
 2379 002a 7A68     		ldr	r2, [r7, #4]
 2380 002c 1268     		ldr	r2, [r2]
 2381 002e 9268     		ldr	r2, [r2, #8]
 2382 0030 22F08002 		bic	r2, r2, #128
 2383 0034 9A60     		str	r2, [r3, #8]
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2384              		.loc 1 1205 0
 2385 0036 7B68     		ldr	r3, [r7, #4]
 2386 0038 1B6E     		ldr	r3, [r3, #96]
 2387 003a 002B     		cmp	r3, #0
 2388 003c 08D0     		beq	.L119
1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2389              		.loc 1 1209 0
 2390 003e 7B68     		ldr	r3, [r7, #4]
 2391 0040 1B6E     		ldr	r3, [r3, #96]
 2392 0042 0022     		movs	r2, #0
 2393 0044 9A63     		str	r2, [r3, #56]
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2394              		.loc 1 1211 0
 2395 0046 7B68     		ldr	r3, [r7, #4]
 2396 0048 1B6E     		ldr	r3, [r3, #96]
 2397 004a 1846     		mov	r0, r3
 2398 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2399              	.L119:
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0; 
 2400              		.loc 1 1216 0
 2401 0050 7B68     		ldr	r3, [r7, #4]
 2402 0052 0022     		movs	r2, #0
 2403 0054 A3F85220 		strh	r2, [r3, #82]	@ movhi
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccMdFX4h.s 			page 64


1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2404              		.loc 1 1219 0
 2405 0058 7B68     		ldr	r3, [r7, #4]
 2406 005a 2022     		movs	r2, #32
 2407 005c 83F86920 		strb	r2, [r3, #105]
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2408              		.loc 1 1221 0
 2409 0060 0023     		movs	r3, #0
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2410              		.loc 1 1222 0
 2411 0062 1846     		mov	r0, r3
 2412 0064 0837     		adds	r7, r7, #8
 2413              	.LCFI94:
 2414              		.cfi_def_cfa_offset 8
 2415 0066 BD46     		mov	sp, r7
 2416              	.LCFI95:
 2417              		.cfi_def_cfa_register 13
 2418              		@ sp needed
 2419 0068 80BD     		pop	{r7, pc}
 2420              		.cfi_endproc
 2421              	.LFE143:
 2423              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2424              		.align	1
 2425              		.global	HAL_UART_AbortReceive
 2426              		.syntax unified
 2427              		.thumb
 2428              		.thumb_func
 2429              		.fpu fpv4-sp-d16
 2431              	HAL_UART_AbortReceive:
 2432              	.LFB144:
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2433              		.loc 1 1237 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 8
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437 0000 80B5     		push	{r7, lr}
 2438              	.LCFI96:
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccMdFX4h.s 			page 65


 2443              	.LCFI97:
 2444              		.cfi_def_cfa_offset 16
 2445 0004 00AF     		add	r7, sp, #0
 2446              	.LCFI98:
 2447              		.cfi_def_cfa_register 7
 2448 0006 7860     		str	r0, [r7, #4]
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2449              		.loc 1 1239 0
 2450 0008 7B68     		ldr	r3, [r7, #4]
 2451 000a 1B68     		ldr	r3, [r3]
 2452 000c 7A68     		ldr	r2, [r7, #4]
 2453 000e 1268     		ldr	r2, [r2]
 2454 0010 1268     		ldr	r2, [r2]
 2455 0012 22F49072 		bic	r2, r2, #288
 2456 0016 1A60     		str	r2, [r3]
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2457              		.loc 1 1240 0
 2458 0018 7B68     		ldr	r3, [r7, #4]
 2459 001a 1B68     		ldr	r3, [r3]
 2460 001c 7A68     		ldr	r2, [r7, #4]
 2461 001e 1268     		ldr	r2, [r2]
 2462 0020 9268     		ldr	r2, [r2, #8]
 2463 0022 22F00102 		bic	r2, r2, #1
 2464 0026 9A60     		str	r2, [r3, #8]
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2465              		.loc 1 1243 0
 2466 0028 7B68     		ldr	r3, [r7, #4]
 2467 002a 1B68     		ldr	r3, [r3]
 2468 002c 9B68     		ldr	r3, [r3, #8]
 2469 002e 03F04003 		and	r3, r3, #64
 2470 0032 402B     		cmp	r3, #64
 2471 0034 14D1     		bne	.L122
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2472              		.loc 1 1245 0
 2473 0036 7B68     		ldr	r3, [r7, #4]
 2474 0038 1B68     		ldr	r3, [r3]
 2475 003a 7A68     		ldr	r2, [r7, #4]
 2476 003c 1268     		ldr	r2, [r2]
 2477 003e 9268     		ldr	r2, [r2, #8]
 2478 0040 22F04002 		bic	r2, r2, #64
 2479 0044 9A60     		str	r2, [r3, #8]
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2480              		.loc 1 1248 0
 2481 0046 7B68     		ldr	r3, [r7, #4]
 2482 0048 5B6E     		ldr	r3, [r3, #100]
 2483 004a 002B     		cmp	r3, #0
 2484 004c 08D0     		beq	.L122
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccMdFX4h.s 			page 66


 2485              		.loc 1 1252 0
 2486 004e 7B68     		ldr	r3, [r7, #4]
 2487 0050 5B6E     		ldr	r3, [r3, #100]
 2488 0052 0022     		movs	r2, #0
 2489 0054 9A63     		str	r2, [r3, #56]
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2490              		.loc 1 1254 0
 2491 0056 7B68     		ldr	r3, [r7, #4]
 2492 0058 5B6E     		ldr	r3, [r3, #100]
 2493 005a 1846     		mov	r0, r3
 2494 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2495              	.L122:
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0; 
 2496              		.loc 1 1259 0
 2497 0060 7B68     		ldr	r3, [r7, #4]
 2498 0062 0022     		movs	r2, #0
 2499 0064 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2500              		.loc 1 1262 0
 2501 0068 7B68     		ldr	r3, [r7, #4]
 2502 006a 1B68     		ldr	r3, [r3]
 2503 006c 0F22     		movs	r2, #15
 2504 006e 1A62     		str	r2, [r3, #32]
1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2505              		.loc 1 1265 0
 2506 0070 7B68     		ldr	r3, [r7, #4]
 2507 0072 2022     		movs	r2, #32
 2508 0074 83F86A20 		strb	r2, [r3, #106]
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2509              		.loc 1 1267 0
 2510 0078 0023     		movs	r3, #0
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2511              		.loc 1 1268 0
 2512 007a 1846     		mov	r0, r3
 2513 007c 0837     		adds	r7, r7, #8
 2514              	.LCFI99:
 2515              		.cfi_def_cfa_offset 8
 2516 007e BD46     		mov	sp, r7
 2517              	.LCFI100:
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 0080 80BD     		pop	{r7, pc}
 2521              		.cfi_endproc
 2522              	.LFE144:
 2524              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2525              		.align	1
 2526              		.global	HAL_UART_Abort_IT
ARM GAS  /tmp/ccMdFX4h.s 			page 67


 2527              		.syntax unified
 2528              		.thumb
 2529              		.thumb_func
 2530              		.fpu fpv4-sp-d16
 2532              	HAL_UART_Abort_IT:
 2533              	.LFB145:
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2534              		.loc 1 1285 0
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 16
 2537              		@ frame_needed = 1, uses_anonymous_args = 0
 2538 0000 80B5     		push	{r7, lr}
 2539              	.LCFI101:
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
 2543 0002 84B0     		sub	sp, sp, #16
 2544              	.LCFI102:
 2545              		.cfi_def_cfa_offset 24
 2546 0004 00AF     		add	r7, sp, #0
 2547              	.LCFI103:
 2548              		.cfi_def_cfa_register 7
 2549 0006 7860     		str	r0, [r7, #4]
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1;
 2550              		.loc 1 1286 0
 2551 0008 0123     		movs	r3, #1
 2552 000a FB60     		str	r3, [r7, #12]
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2553              		.loc 1 1289 0
 2554 000c 7B68     		ldr	r3, [r7, #4]
 2555 000e 1B68     		ldr	r3, [r3]
 2556 0010 7A68     		ldr	r2, [r7, #4]
 2557 0012 1268     		ldr	r2, [r2]
 2558 0014 1268     		ldr	r2, [r2]
 2559 0016 22F4F072 		bic	r2, r2, #480
 2560 001a 1A60     		str	r2, [r3]
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2561              		.loc 1 1290 0
 2562 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 68


 2563 001e 1B68     		ldr	r3, [r3]
 2564 0020 7A68     		ldr	r2, [r7, #4]
 2565 0022 1268     		ldr	r2, [r2]
 2566 0024 9268     		ldr	r2, [r2, #8]
 2567 0026 22F00102 		bic	r2, r2, #1
 2568 002a 9A60     		str	r2, [r3, #8]
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 2569              		.loc 1 1295 0
 2570 002c 7B68     		ldr	r3, [r7, #4]
 2571 002e 1B6E     		ldr	r3, [r3, #96]
 2572 0030 002B     		cmp	r3, #0
 2573 0032 0FD0     		beq	.L125
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2574              		.loc 1 1299 0
 2575 0034 7B68     		ldr	r3, [r7, #4]
 2576 0036 1B68     		ldr	r3, [r3]
 2577 0038 9B68     		ldr	r3, [r3, #8]
 2578 003a 03F08003 		and	r3, r3, #128
 2579 003e 802B     		cmp	r3, #128
 2580 0040 04D1     		bne	.L126
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2581              		.loc 1 1301 0
 2582 0042 7B68     		ldr	r3, [r7, #4]
 2583 0044 1B6E     		ldr	r3, [r3, #96]
 2584 0046 414A     		ldr	r2, .L135
 2585 0048 9A63     		str	r2, [r3, #56]
 2586 004a 03E0     		b	.L125
 2587              	.L126:
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2588              		.loc 1 1305 0
 2589 004c 7B68     		ldr	r3, [r7, #4]
 2590 004e 1B6E     		ldr	r3, [r3, #96]
 2591 0050 0022     		movs	r2, #0
 2592 0052 9A63     		str	r2, [r3, #56]
 2593              	.L125:
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 2594              		.loc 1 1309 0
 2595 0054 7B68     		ldr	r3, [r7, #4]
 2596 0056 5B6E     		ldr	r3, [r3, #100]
 2597 0058 002B     		cmp	r3, #0
 2598 005a 0FD0     		beq	.L127
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
ARM GAS  /tmp/ccMdFX4h.s 			page 69


1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2599              		.loc 1 1313 0
 2600 005c 7B68     		ldr	r3, [r7, #4]
 2601 005e 1B68     		ldr	r3, [r3]
 2602 0060 9B68     		ldr	r3, [r3, #8]
 2603 0062 03F04003 		and	r3, r3, #64
 2604 0066 402B     		cmp	r3, #64
 2605 0068 04D1     		bne	.L128
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2606              		.loc 1 1315 0
 2607 006a 7B68     		ldr	r3, [r7, #4]
 2608 006c 5B6E     		ldr	r3, [r3, #100]
 2609 006e 384A     		ldr	r2, .L135+4
 2610 0070 9A63     		str	r2, [r3, #56]
 2611 0072 03E0     		b	.L127
 2612              	.L128:
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2613              		.loc 1 1319 0
 2614 0074 7B68     		ldr	r3, [r7, #4]
 2615 0076 5B6E     		ldr	r3, [r3, #100]
 2616 0078 0022     		movs	r2, #0
 2617 007a 9A63     		str	r2, [r3, #56]
 2618              	.L127:
1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2619              		.loc 1 1324 0
 2620 007c 7B68     		ldr	r3, [r7, #4]
 2621 007e 1B68     		ldr	r3, [r3]
 2622 0080 9B68     		ldr	r3, [r3, #8]
 2623 0082 03F08003 		and	r3, r3, #128
 2624 0086 802B     		cmp	r3, #128
 2625 0088 1AD1     		bne	.L129
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2626              		.loc 1 1327 0
 2627 008a 7B68     		ldr	r3, [r7, #4]
 2628 008c 1B68     		ldr	r3, [r3]
 2629 008e 7A68     		ldr	r2, [r7, #4]
 2630 0090 1268     		ldr	r2, [r2]
 2631 0092 9268     		ldr	r2, [r2, #8]
 2632 0094 22F08002 		bic	r2, r2, #128
 2633 0098 9A60     		str	r2, [r3, #8]
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2634              		.loc 1 1330 0
 2635 009a 7B68     		ldr	r3, [r7, #4]
 2636 009c 1B6E     		ldr	r3, [r3, #96]
ARM GAS  /tmp/ccMdFX4h.s 			page 70


 2637 009e 002B     		cmp	r3, #0
 2638 00a0 0ED0     		beq	.L129
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2639              		.loc 1 1336 0
 2640 00a2 7B68     		ldr	r3, [r7, #4]
 2641 00a4 1B6E     		ldr	r3, [r3, #96]
 2642 00a6 1846     		mov	r0, r3
 2643 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2644 00ac 0346     		mov	r3, r0
 2645 00ae 002B     		cmp	r3, #0
 2646 00b0 04D0     		beq	.L130
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 2647              		.loc 1 1338 0
 2648 00b2 7B68     		ldr	r3, [r7, #4]
 2649 00b4 1B6E     		ldr	r3, [r3, #96]
 2650 00b6 0022     		movs	r2, #0
 2651 00b8 9A63     		str	r2, [r3, #56]
 2652 00ba 01E0     		b	.L129
 2653              	.L130:
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0;
 2654              		.loc 1 1342 0
 2655 00bc 0023     		movs	r3, #0
 2656 00be FB60     		str	r3, [r7, #12]
 2657              	.L129:
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2658              		.loc 1 1348 0
 2659 00c0 7B68     		ldr	r3, [r7, #4]
 2660 00c2 1B68     		ldr	r3, [r3]
 2661 00c4 9B68     		ldr	r3, [r3, #8]
 2662 00c6 03F04003 		and	r3, r3, #64
 2663 00ca 402B     		cmp	r3, #64
 2664 00cc 1CD1     		bne	.L131
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2665              		.loc 1 1350 0
 2666 00ce 7B68     		ldr	r3, [r7, #4]
 2667 00d0 1B68     		ldr	r3, [r3]
 2668 00d2 7A68     		ldr	r2, [r7, #4]
 2669 00d4 1268     		ldr	r2, [r2]
 2670 00d6 9268     		ldr	r2, [r2, #8]
 2671 00d8 22F04002 		bic	r2, r2, #64
 2672 00dc 9A60     		str	r2, [r3, #8]
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccMdFX4h.s 			page 71


1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2673              		.loc 1 1353 0
 2674 00de 7B68     		ldr	r3, [r7, #4]
 2675 00e0 5B6E     		ldr	r3, [r3, #100]
 2676 00e2 002B     		cmp	r3, #0
 2677 00e4 10D0     		beq	.L131
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2678              		.loc 1 1359 0
 2679 00e6 7B68     		ldr	r3, [r7, #4]
 2680 00e8 5B6E     		ldr	r3, [r3, #100]
 2681 00ea 1846     		mov	r0, r3
 2682 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2683 00f0 0346     		mov	r3, r0
 2684 00f2 002B     		cmp	r3, #0
 2685 00f4 06D0     		beq	.L132
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 2686              		.loc 1 1361 0
 2687 00f6 7B68     		ldr	r3, [r7, #4]
 2688 00f8 5B6E     		ldr	r3, [r3, #100]
 2689 00fa 0022     		movs	r2, #0
 2690 00fc 9A63     		str	r2, [r3, #56]
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1;
 2691              		.loc 1 1362 0
 2692 00fe 0123     		movs	r3, #1
 2693 0100 FB60     		str	r3, [r7, #12]
 2694 0102 01E0     		b	.L131
 2695              	.L132:
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0;
 2696              		.loc 1 1366 0
 2697 0104 0023     		movs	r3, #0
 2698 0106 FB60     		str	r3, [r7, #12]
 2699              	.L131:
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1)
 2700              		.loc 1 1372 0
 2701 0108 FB68     		ldr	r3, [r7, #12]
 2702 010a 012B     		cmp	r3, #1
 2703 010c 19D1     		bne	.L133
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0; 
 2704              		.loc 1 1375 0
 2705 010e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 72


 2706 0110 0022     		movs	r2, #0
 2707 0112 A3F85220 		strh	r2, [r3, #82]	@ movhi
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0;
 2708              		.loc 1 1376 0
 2709 0116 7B68     		ldr	r3, [r7, #4]
 2710 0118 0022     		movs	r2, #0
 2711 011a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2712              		.loc 1 1379 0
 2713 011e 7B68     		ldr	r3, [r7, #4]
 2714 0120 0022     		movs	r2, #0
 2715 0122 DA66     		str	r2, [r3, #108]
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 2716              		.loc 1 1382 0
 2717 0124 7B68     		ldr	r3, [r7, #4]
 2718 0126 1B68     		ldr	r3, [r3]
 2719 0128 0F22     		movs	r2, #15
 2720 012a 1A62     		str	r2, [r3, #32]
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 2721              		.loc 1 1385 0
 2722 012c 7B68     		ldr	r3, [r7, #4]
 2723 012e 2022     		movs	r2, #32
 2724 0130 83F86920 		strb	r2, [r3, #105]
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2725              		.loc 1 1386 0
 2726 0134 7B68     		ldr	r3, [r7, #4]
 2727 0136 2022     		movs	r2, #32
 2728 0138 83F86A20 		strb	r2, [r3, #106]
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 2729              		.loc 1 1389 0
 2730 013c 7868     		ldr	r0, [r7, #4]
 2731 013e FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2732              	.L133:
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2733              		.loc 1 1392 0
 2734 0142 0023     		movs	r3, #0
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2735              		.loc 1 1393 0
 2736 0144 1846     		mov	r0, r3
 2737 0146 1037     		adds	r7, r7, #16
 2738              	.LCFI104:
 2739              		.cfi_def_cfa_offset 8
 2740 0148 BD46     		mov	sp, r7
 2741              	.LCFI105:
 2742              		.cfi_def_cfa_register 13
 2743              		@ sp needed
 2744 014a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccMdFX4h.s 			page 73


 2745              	.L136:
 2746              		.align	2
 2747              	.L135:
 2748 014c 00000000 		.word	UART_DMATxAbortCallback
 2749 0150 00000000 		.word	UART_DMARxAbortCallback
 2750              		.cfi_endproc
 2751              	.LFE145:
 2753              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2754              		.align	1
 2755              		.global	HAL_UART_AbortTransmit_IT
 2756              		.syntax unified
 2757              		.thumb
 2758              		.thumb_func
 2759              		.fpu fpv4-sp-d16
 2761              	HAL_UART_AbortTransmit_IT:
 2762              	.LFB146:
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2763              		.loc 1 1410 0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 8
 2766              		@ frame_needed = 1, uses_anonymous_args = 0
 2767 0000 80B5     		push	{r7, lr}
 2768              	.LCFI106:
 2769              		.cfi_def_cfa_offset 8
 2770              		.cfi_offset 7, -8
 2771              		.cfi_offset 14, -4
 2772 0002 82B0     		sub	sp, sp, #8
 2773              	.LCFI107:
 2774              		.cfi_def_cfa_offset 16
 2775 0004 00AF     		add	r7, sp, #0
 2776              	.LCFI108:
 2777              		.cfi_def_cfa_register 7
 2778 0006 7860     		str	r0, [r7, #4]
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2779              		.loc 1 1412 0
 2780 0008 7B68     		ldr	r3, [r7, #4]
 2781 000a 1B68     		ldr	r3, [r3]
 2782 000c 7A68     		ldr	r2, [r7, #4]
 2783 000e 1268     		ldr	r2, [r2]
 2784 0010 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccMdFX4h.s 			page 74


 2785 0012 22F0C002 		bic	r2, r2, #192
 2786 0016 1A60     		str	r2, [r3]
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2787              		.loc 1 1415 0
 2788 0018 7B68     		ldr	r3, [r7, #4]
 2789 001a 1B68     		ldr	r3, [r3]
 2790 001c 9B68     		ldr	r3, [r3, #8]
 2791 001e 03F08003 		and	r3, r3, #128
 2792 0022 802B     		cmp	r3, #128
 2793 0024 2BD1     		bne	.L138
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2794              		.loc 1 1417 0
 2795 0026 7B68     		ldr	r3, [r7, #4]
 2796 0028 1B68     		ldr	r3, [r3]
 2797 002a 7A68     		ldr	r2, [r7, #4]
 2798 002c 1268     		ldr	r2, [r2]
 2799 002e 9268     		ldr	r2, [r2, #8]
 2800 0030 22F08002 		bic	r2, r2, #128
 2801 0034 9A60     		str	r2, [r3, #8]
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
 2802              		.loc 1 1420 0
 2803 0036 7B68     		ldr	r3, [r7, #4]
 2804 0038 1B6E     		ldr	r3, [r3, #96]
 2805 003a 002B     		cmp	r3, #0
 2806 003c 13D0     		beq	.L139
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 2807              		.loc 1 1424 0
 2808 003e 7B68     		ldr	r3, [r7, #4]
 2809 0040 1B6E     		ldr	r3, [r3, #96]
 2810 0042 174A     		ldr	r2, .L144
 2811 0044 9A63     		str	r2, [r3, #56]
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 2812              		.loc 1 1427 0
 2813 0046 7B68     		ldr	r3, [r7, #4]
 2814 0048 1B6E     		ldr	r3, [r3, #96]
 2815 004a 1846     		mov	r0, r3
 2816 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2817 0050 0346     		mov	r3, r0
 2818 0052 002B     		cmp	r3, #0
 2819 0054 1ED0     		beq	.L142
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 2820              		.loc 1 1430 0
 2821 0056 7B68     		ldr	r3, [r7, #4]
 2822 0058 1B6E     		ldr	r3, [r3, #96]
 2823 005a 9B6B     		ldr	r3, [r3, #56]
ARM GAS  /tmp/ccMdFX4h.s 			page 75


 2824 005c 7A68     		ldr	r2, [r7, #4]
 2825 005e 126E     		ldr	r2, [r2, #96]
 2826 0060 1046     		mov	r0, r2
 2827 0062 9847     		blx	r3
 2828              	.LVL0:
 2829 0064 16E0     		b	.L142
 2830              	.L139:
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0; 
 2831              		.loc 1 1436 0
 2832 0066 7B68     		ldr	r3, [r7, #4]
 2833 0068 0022     		movs	r2, #0
 2834 006a A3F85220 		strh	r2, [r3, #82]	@ movhi
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 2835              		.loc 1 1439 0
 2836 006e 7B68     		ldr	r3, [r7, #4]
 2837 0070 2022     		movs	r2, #32
 2838 0072 83F86920 		strb	r2, [r3, #105]
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 2839              		.loc 1 1442 0
 2840 0076 7868     		ldr	r0, [r7, #4]
 2841 0078 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2842 007c 0AE0     		b	.L142
 2843              	.L138:
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0; 
 2844              		.loc 1 1448 0
 2845 007e 7B68     		ldr	r3, [r7, #4]
 2846 0080 0022     		movs	r2, #0
 2847 0082 A3F85220 		strh	r2, [r3, #82]	@ movhi
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 2848              		.loc 1 1451 0
 2849 0086 7B68     		ldr	r3, [r7, #4]
 2850 0088 2022     		movs	r2, #32
 2851 008a 83F86920 		strb	r2, [r3, #105]
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 2852              		.loc 1 1454 0
 2853 008e 7868     		ldr	r0, [r7, #4]
 2854 0090 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2855              	.L142:
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccMdFX4h.s 			page 76


1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2856              		.loc 1 1457 0
 2857 0094 0023     		movs	r3, #0
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2858              		.loc 1 1458 0
 2859 0096 1846     		mov	r0, r3
 2860 0098 0837     		adds	r7, r7, #8
 2861              	.LCFI109:
 2862              		.cfi_def_cfa_offset 8
 2863 009a BD46     		mov	sp, r7
 2864              	.LCFI110:
 2865              		.cfi_def_cfa_register 13
 2866              		@ sp needed
 2867 009c 80BD     		pop	{r7, pc}
 2868              	.L145:
 2869 009e 00BF     		.align	2
 2870              	.L144:
 2871 00a0 00000000 		.word	UART_DMATxOnlyAbortCallback
 2872              		.cfi_endproc
 2873              	.LFE146:
 2875              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2876              		.align	1
 2877              		.global	HAL_UART_AbortReceive_IT
 2878              		.syntax unified
 2879              		.thumb
 2880              		.thumb_func
 2881              		.fpu fpv4-sp-d16
 2883              	HAL_UART_AbortReceive_IT:
 2884              	.LFB147:
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2885              		.loc 1 1475 0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 8
 2888              		@ frame_needed = 1, uses_anonymous_args = 0
 2889 0000 80B5     		push	{r7, lr}
 2890              	.LCFI111:
 2891              		.cfi_def_cfa_offset 8
 2892              		.cfi_offset 7, -8
 2893              		.cfi_offset 14, -4
 2894 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccMdFX4h.s 			page 77


 2895              	.LCFI112:
 2896              		.cfi_def_cfa_offset 16
 2897 0004 00AF     		add	r7, sp, #0
 2898              	.LCFI113:
 2899              		.cfi_def_cfa_register 7
 2900 0006 7860     		str	r0, [r7, #4]
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2901              		.loc 1 1477 0
 2902 0008 7B68     		ldr	r3, [r7, #4]
 2903 000a 1B68     		ldr	r3, [r3]
 2904 000c 7A68     		ldr	r2, [r7, #4]
 2905 000e 1268     		ldr	r2, [r2]
 2906 0010 1268     		ldr	r2, [r2]
 2907 0012 22F49072 		bic	r2, r2, #288
 2908 0016 1A60     		str	r2, [r3]
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2909              		.loc 1 1478 0
 2910 0018 7B68     		ldr	r3, [r7, #4]
 2911 001a 1B68     		ldr	r3, [r3]
 2912 001c 7A68     		ldr	r2, [r7, #4]
 2913 001e 1268     		ldr	r2, [r2]
 2914 0020 9268     		ldr	r2, [r2, #8]
 2915 0022 22F00102 		bic	r2, r2, #1
 2916 0026 9A60     		str	r2, [r3, #8]
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2917              		.loc 1 1481 0
 2918 0028 7B68     		ldr	r3, [r7, #4]
 2919 002a 1B68     		ldr	r3, [r3]
 2920 002c 9B68     		ldr	r3, [r3, #8]
 2921 002e 03F04003 		and	r3, r3, #64
 2922 0032 402B     		cmp	r3, #64
 2923 0034 2FD1     		bne	.L147
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2924              		.loc 1 1483 0
 2925 0036 7B68     		ldr	r3, [r7, #4]
 2926 0038 1B68     		ldr	r3, [r3]
 2927 003a 7A68     		ldr	r2, [r7, #4]
 2928 003c 1268     		ldr	r2, [r2]
 2929 003e 9268     		ldr	r2, [r2, #8]
 2930 0040 22F04002 		bic	r2, r2, #64
 2931 0044 9A60     		str	r2, [r3, #8]
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
 2932              		.loc 1 1486 0
 2933 0046 7B68     		ldr	r3, [r7, #4]
 2934 0048 5B6E     		ldr	r3, [r3, #100]
 2935 004a 002B     		cmp	r3, #0
 2936 004c 13D0     		beq	.L148
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
ARM GAS  /tmp/ccMdFX4h.s 			page 78


 2937              		.loc 1 1490 0
 2938 004e 7B68     		ldr	r3, [r7, #4]
 2939 0050 5B6E     		ldr	r3, [r3, #100]
 2940 0052 1B4A     		ldr	r2, .L153
 2941 0054 9A63     		str	r2, [r3, #56]
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 2942              		.loc 1 1493 0
 2943 0056 7B68     		ldr	r3, [r7, #4]
 2944 0058 5B6E     		ldr	r3, [r3, #100]
 2945 005a 1846     		mov	r0, r3
 2946 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2947 0060 0346     		mov	r3, r0
 2948 0062 002B     		cmp	r3, #0
 2949 0064 26D0     		beq	.L151
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 2950              		.loc 1 1496 0
 2951 0066 7B68     		ldr	r3, [r7, #4]
 2952 0068 5B6E     		ldr	r3, [r3, #100]
 2953 006a 9B6B     		ldr	r3, [r3, #56]
 2954 006c 7A68     		ldr	r2, [r7, #4]
 2955 006e 526E     		ldr	r2, [r2, #100]
 2956 0070 1046     		mov	r0, r2
 2957 0072 9847     		blx	r3
 2958              	.LVL1:
 2959 0074 1EE0     		b	.L151
 2960              	.L148:
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0; 
 2961              		.loc 1 1502 0
 2962 0076 7B68     		ldr	r3, [r7, #4]
 2963 0078 0022     		movs	r2, #0
 2964 007a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 2965              		.loc 1 1505 0
 2966 007e 7B68     		ldr	r3, [r7, #4]
 2967 0080 1B68     		ldr	r3, [r3]
 2968 0082 0F22     		movs	r2, #15
 2969 0084 1A62     		str	r2, [r3, #32]
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 2970              		.loc 1 1508 0
 2971 0086 7B68     		ldr	r3, [r7, #4]
 2972 0088 2022     		movs	r2, #32
 2973 008a 83F86A20 		strb	r2, [r3, #106]
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
ARM GAS  /tmp/ccMdFX4h.s 			page 79


1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 2974              		.loc 1 1511 0
 2975 008e 7868     		ldr	r0, [r7, #4]
 2976 0090 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2977 0094 0EE0     		b	.L151
 2978              	.L147:
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0; 
 2979              		.loc 1 1517 0
 2980 0096 7B68     		ldr	r3, [r7, #4]
 2981 0098 0022     		movs	r2, #0
 2982 009a A3F85A20 		strh	r2, [r3, #90]	@ movhi
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 2983              		.loc 1 1520 0
 2984 009e 7B68     		ldr	r3, [r7, #4]
 2985 00a0 1B68     		ldr	r3, [r3]
 2986 00a2 0F22     		movs	r2, #15
 2987 00a4 1A62     		str	r2, [r3, #32]
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2988              		.loc 1 1523 0
 2989 00a6 7B68     		ldr	r3, [r7, #4]
 2990 00a8 2022     		movs	r2, #32
 2991 00aa 83F86A20 		strb	r2, [r3, #106]
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 2992              		.loc 1 1526 0
 2993 00ae 7868     		ldr	r0, [r7, #4]
 2994 00b0 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2995              	.L151:
1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2996              		.loc 1 1529 0
 2997 00b4 0023     		movs	r3, #0
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2998              		.loc 1 1530 0
 2999 00b6 1846     		mov	r0, r3
 3000 00b8 0837     		adds	r7, r7, #8
 3001              	.LCFI114:
 3002              		.cfi_def_cfa_offset 8
 3003 00ba BD46     		mov	sp, r7
 3004              	.LCFI115:
 3005              		.cfi_def_cfa_register 13
 3006              		@ sp needed
 3007 00bc 80BD     		pop	{r7, pc}
 3008              	.L154:
 3009 00be 00BF     		.align	2
 3010              	.L153:
ARM GAS  /tmp/ccMdFX4h.s 			page 80


 3011 00c0 00000000 		.word	UART_DMARxOnlyAbortCallback
 3012              		.cfi_endproc
 3013              	.LFE147:
 3015              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3016              		.align	1
 3017              		.global	HAL_UART_IRQHandler
 3018              		.syntax unified
 3019              		.thumb
 3020              		.thumb_func
 3021              		.fpu fpv4-sp-d16
 3023              	HAL_UART_IRQHandler:
 3024              	.LFB148:
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3025              		.loc 1 1538 0
 3026              		.cfi_startproc
 3027              		@ args = 0, pretend = 0, frame = 24
 3028              		@ frame_needed = 1, uses_anonymous_args = 0
 3029 0000 80B5     		push	{r7, lr}
 3030              	.LCFI116:
 3031              		.cfi_def_cfa_offset 8
 3032              		.cfi_offset 7, -8
 3033              		.cfi_offset 14, -4
 3034 0002 86B0     		sub	sp, sp, #24
 3035              	.LCFI117:
 3036              		.cfi_def_cfa_offset 32
 3037 0004 00AF     		add	r7, sp, #0
 3038              	.LCFI118:
 3039              		.cfi_def_cfa_register 7
 3040 0006 7860     		str	r0, [r7, #4]
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3041              		.loc 1 1539 0
 3042 0008 7B68     		ldr	r3, [r7, #4]
 3043 000a 1B68     		ldr	r3, [r3]
 3044 000c DB69     		ldr	r3, [r3, #28]
 3045 000e 7B61     		str	r3, [r7, #20]
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3046              		.loc 1 1540 0
 3047 0010 7B68     		ldr	r3, [r7, #4]
 3048 0012 1B68     		ldr	r3, [r3]
 3049 0014 1B68     		ldr	r3, [r3]
 3050 0016 3B61     		str	r3, [r7, #16]
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its;
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 3051              		.loc 1 1545 0
 3052 0018 7B69     		ldr	r3, [r7, #20]
 3053 001a 03F00F03 		and	r3, r3, #15
 3054 001e FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 81


1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == RESET)
 3055              		.loc 1 1546 0
 3056 0020 FB68     		ldr	r3, [r7, #12]
 3057 0022 002B     		cmp	r3, #0
 3058 0024 0DD1     		bne	.L156
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3059              		.loc 1 1549 0
 3060 0026 7B69     		ldr	r3, [r7, #20]
 3061 0028 03F02003 		and	r3, r3, #32
 3062 002c 002B     		cmp	r3, #0
 3063 002e 08D0     		beq	.L156
 3064              		.loc 1 1549 0 is_stmt 0 discriminator 1
 3065 0030 3B69     		ldr	r3, [r7, #16]
 3066 0032 03F02003 		and	r3, r3, #32
 3067 0036 002B     		cmp	r3, #0
 3068 0038 03D0     		beq	.L156
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       UART_Receive_IT(huart);
 3069              		.loc 1 1551 0 is_stmt 1
 3070 003a 7868     		ldr	r0, [r7, #4]
 3071 003c FFF7FEFF 		bl	UART_Receive_IT
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 3072              		.loc 1 1552 0
 3073 0040 FEE0     		b	.L155
 3074              	.L156:
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }  
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
 3075              		.loc 1 1557 0
 3076 0042 7B68     		ldr	r3, [r7, #4]
 3077 0044 1B68     		ldr	r3, [r3]
 3078 0046 9B68     		ldr	r3, [r3, #8]
 3079 0048 BB60     		str	r3, [r7, #8]
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(   (errorflags != RESET)
 3080              		.loc 1 1558 0
 3081 004a FB68     		ldr	r3, [r7, #12]
 3082 004c 002B     		cmp	r3, #0
 3083 004e 00F0BA80 		beq	.L158
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      && (   ((cr3its & USART_CR3_EIE) != RESET)
 3084              		.loc 1 1559 0
 3085 0052 BB68     		ldr	r3, [r7, #8]
 3086 0054 03F00103 		and	r3, r3, #1
 3087 0058 002B     		cmp	r3, #0
 3088 005a 05D1     		bne	.L159
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)) )
 3089              		.loc 1 1560 0
 3090 005c 3B69     		ldr	r3, [r7, #16]
 3091 005e 03F49073 		and	r3, r3, #288
 3092 0062 002B     		cmp	r3, #0
 3093 0064 00F0AF80 		beq	.L158
 3094              	.L159:
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
ARM GAS  /tmp/ccMdFX4h.s 			page 82


1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 3095              		.loc 1 1563 0
 3096 0068 7B69     		ldr	r3, [r7, #20]
 3097 006a 03F00103 		and	r3, r3, #1
 3098 006e 002B     		cmp	r3, #0
 3099 0070 0ED0     		beq	.L160
 3100              		.loc 1 1563 0 is_stmt 0 discriminator 1
 3101 0072 3B69     		ldr	r3, [r7, #16]
 3102 0074 03F48073 		and	r3, r3, #256
 3103 0078 002B     		cmp	r3, #0
 3104 007a 09D0     		beq	.L160
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_PEF);
 3105              		.loc 1 1565 0 is_stmt 1
 3106 007c 7B68     		ldr	r3, [r7, #4]
 3107 007e 1B68     		ldr	r3, [r3]
 3108 0080 0122     		movs	r2, #1
 3109 0082 1A62     		str	r2, [r3, #32]
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3110              		.loc 1 1567 0
 3111 0084 7B68     		ldr	r3, [r7, #4]
 3112 0086 DB6E     		ldr	r3, [r3, #108]
 3113 0088 43F00102 		orr	r2, r3, #1
 3114 008c 7B68     		ldr	r3, [r7, #4]
 3115 008e DA66     		str	r2, [r3, #108]
 3116              	.L160:
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3117              		.loc 1 1571 0
 3118 0090 7B69     		ldr	r3, [r7, #20]
 3119 0092 03F00203 		and	r3, r3, #2
 3120 0096 002B     		cmp	r3, #0
 3121 0098 0ED0     		beq	.L161
 3122              		.loc 1 1571 0 is_stmt 0 discriminator 1
 3123 009a BB68     		ldr	r3, [r7, #8]
 3124 009c 03F00103 		and	r3, r3, #1
 3125 00a0 002B     		cmp	r3, #0
 3126 00a2 09D0     		beq	.L161
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_FEF);
 3127              		.loc 1 1573 0 is_stmt 1
 3128 00a4 7B68     		ldr	r3, [r7, #4]
 3129 00a6 1B68     		ldr	r3, [r3]
 3130 00a8 0222     		movs	r2, #2
 3131 00aa 1A62     		str	r2, [r3, #32]
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3132              		.loc 1 1575 0
 3133 00ac 7B68     		ldr	r3, [r7, #4]
 3134 00ae DB6E     		ldr	r3, [r3, #108]
 3135 00b0 43F00402 		orr	r2, r3, #4
 3136 00b4 7B68     		ldr	r3, [r7, #4]
 3137 00b6 DA66     		str	r2, [r3, #108]
 3138              	.L161:
ARM GAS  /tmp/ccMdFX4h.s 			page 83


1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 3139              		.loc 1 1579 0
 3140 00b8 7B69     		ldr	r3, [r7, #20]
 3141 00ba 03F00403 		and	r3, r3, #4
 3142 00be 002B     		cmp	r3, #0
 3143 00c0 0ED0     		beq	.L162
 3144              		.loc 1 1579 0 is_stmt 0 discriminator 1
 3145 00c2 BB68     		ldr	r3, [r7, #8]
 3146 00c4 03F00103 		and	r3, r3, #1
 3147 00c8 002B     		cmp	r3, #0
 3148 00ca 09D0     		beq	.L162
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_NEF);
 3149              		.loc 1 1581 0 is_stmt 1
 3150 00cc 7B68     		ldr	r3, [r7, #4]
 3151 00ce 1B68     		ldr	r3, [r3]
 3152 00d0 0422     		movs	r2, #4
 3153 00d2 1A62     		str	r2, [r3, #32]
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3154              		.loc 1 1583 0
 3155 00d4 7B68     		ldr	r3, [r7, #4]
 3156 00d6 DB6E     		ldr	r3, [r3, #108]
 3157 00d8 43F00202 		orr	r2, r3, #2
 3158 00dc 7B68     		ldr	r3, [r7, #4]
 3159 00de DA66     		str	r2, [r3, #108]
 3160              	.L162:
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(((isrflags & USART_ISR_ORE) != RESET) &&
 3161              		.loc 1 1587 0
 3162 00e0 7B69     		ldr	r3, [r7, #20]
 3163 00e2 03F00803 		and	r3, r3, #8
 3164 00e6 002B     		cmp	r3, #0
 3165 00e8 13D0     		beq	.L163
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 3166              		.loc 1 1588 0 discriminator 1
 3167 00ea 3B69     		ldr	r3, [r7, #16]
 3168 00ec 03F02003 		and	r3, r3, #32
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (((cr1its & USART_CR1_RXNEIE) != RESET) || ((cr3its & USART_CR3_EIE) != RESET)))
 3169              		.loc 1 1587 0 discriminator 1
 3170 00f0 002B     		cmp	r3, #0
 3171 00f2 04D1     		bne	.L164
 3172              		.loc 1 1588 0
 3173 00f4 BB68     		ldr	r3, [r7, #8]
 3174 00f6 03F00103 		and	r3, r3, #1
 3175 00fa 002B     		cmp	r3, #0
 3176 00fc 09D0     		beq	.L163
 3177              	.L164:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_IT(huart, UART_CLEAR_OREF);
 3178              		.loc 1 1590 0
 3179 00fe 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 84


 3180 0100 1B68     		ldr	r3, [r3]
 3181 0102 0822     		movs	r2, #8
 3182 0104 1A62     		str	r2, [r3, #32]
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3183              		.loc 1 1592 0
 3184 0106 7B68     		ldr	r3, [r7, #4]
 3185 0108 DB6E     		ldr	r3, [r3, #108]
 3186 010a 43F00802 		orr	r2, r3, #8
 3187 010e 7B68     		ldr	r3, [r7, #4]
 3188 0110 DA66     		str	r2, [r3, #108]
 3189              	.L163:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
 3190              		.loc 1 1596 0
 3191 0112 7B68     		ldr	r3, [r7, #4]
 3192 0114 DB6E     		ldr	r3, [r3, #108]
 3193 0116 002B     		cmp	r3, #0
 3194 0118 00F09180 		beq	.L176
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if(((isrflags & USART_ISR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 3195              		.loc 1 1599 0
 3196 011c 7B69     		ldr	r3, [r7, #20]
 3197 011e 03F02003 		and	r3, r3, #32
 3198 0122 002B     		cmp	r3, #0
 3199 0124 07D0     		beq	.L166
 3200              		.loc 1 1599 0 is_stmt 0 discriminator 1
 3201 0126 3B69     		ldr	r3, [r7, #16]
 3202 0128 03F02003 		and	r3, r3, #32
 3203 012c 002B     		cmp	r3, #0
 3204 012e 02D0     		beq	.L166
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_Receive_IT(huart);
 3205              		.loc 1 1601 0 is_stmt 1
 3206 0130 7868     		ldr	r0, [r7, #4]
 3207 0132 FFF7FEFF 		bl	UART_Receive_IT
 3208              	.L166:
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          consider error as blocking */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) ||
 3209              		.loc 1 1606 0
 3210 0136 7B68     		ldr	r3, [r7, #4]
 3211 0138 DB6E     		ldr	r3, [r3, #108]
 3212 013a 03F00803 		and	r3, r3, #8
 3213 013e 002B     		cmp	r3, #0
 3214 0140 06D1     		bne	.L167
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 3215              		.loc 1 1607 0 discriminator 1
 3216 0142 7B68     		ldr	r3, [r7, #4]
 3217 0144 1B68     		ldr	r3, [r3]
 3218 0146 9B68     		ldr	r3, [r3, #8]
 3219 0148 03F04003 		and	r3, r3, #64
ARM GAS  /tmp/ccMdFX4h.s 			page 85


1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)))
 3220              		.loc 1 1606 0 discriminator 1
 3221 014c 402B     		cmp	r3, #64
 3222 014e 31D1     		bne	.L168
 3223              	.L167:
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {  
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 3224              		.loc 1 1612 0
 3225 0150 7868     		ldr	r0, [r7, #4]
 3226 0152 FFF7FEFF 		bl	UART_EndRxTransfer
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3227              		.loc 1 1615 0
 3228 0156 7B68     		ldr	r3, [r7, #4]
 3229 0158 1B68     		ldr	r3, [r3]
 3230 015a 9B68     		ldr	r3, [r3, #8]
 3231 015c 03F04003 		and	r3, r3, #64
 3232 0160 402B     		cmp	r3, #64
 3233 0162 23D1     		bne	.L169
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3234              		.loc 1 1617 0
 3235 0164 7B68     		ldr	r3, [r7, #4]
 3236 0166 1B68     		ldr	r3, [r3]
 3237 0168 7A68     		ldr	r2, [r7, #4]
 3238 016a 1268     		ldr	r2, [r2]
 3239 016c 9268     		ldr	r2, [r2, #8]
 3240 016e 22F04002 		bic	r2, r2, #64
 3241 0172 9A60     		str	r2, [r3, #8]
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
 3242              		.loc 1 1620 0
 3243 0174 7B68     		ldr	r3, [r7, #4]
 3244 0176 5B6E     		ldr	r3, [r3, #100]
 3245 0178 002B     		cmp	r3, #0
 3246 017a 13D0     		beq	.L170
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3247              		.loc 1 1624 0
 3248 017c 7B68     		ldr	r3, [r7, #4]
 3249 017e 5B6E     		ldr	r3, [r3, #100]
 3250 0180 314A     		ldr	r2, .L178
 3251 0182 9A63     		str	r2, [r3, #56]
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3252              		.loc 1 1627 0
 3253 0184 7B68     		ldr	r3, [r7, #4]
 3254 0186 5B6E     		ldr	r3, [r3, #100]
 3255 0188 1846     		mov	r0, r3
ARM GAS  /tmp/ccMdFX4h.s 			page 86


 3256 018a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3257 018e 0346     		mov	r3, r0
 3258 0190 002B     		cmp	r3, #0
 3259 0192 16D0     		beq	.L177
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3260              		.loc 1 1630 0
 3261 0194 7B68     		ldr	r3, [r7, #4]
 3262 0196 5B6E     		ldr	r3, [r3, #100]
 3263 0198 9B6B     		ldr	r3, [r3, #56]
 3264 019a 7A68     		ldr	r2, [r7, #4]
 3265 019c 526E     		ldr	r2, [r2, #100]
 3266 019e 1046     		mov	r0, r2
 3267 01a0 9847     		blx	r3
 3268              	.LVL2:
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3269              		.loc 1 1615 0
 3270 01a2 0EE0     		b	.L177
 3271              	.L170:
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3272              		.loc 1 1636 0
 3273 01a4 7868     		ldr	r0, [r7, #4]
 3274 01a6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3275              		.loc 1 1615 0
 3276 01aa 0AE0     		b	.L177
 3277              	.L169:
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3278              		.loc 1 1642 0
 3279 01ac 7868     		ldr	r0, [r7, #4]
 3280 01ae FFF7FEFF 		bl	HAL_UART_ErrorCallback
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3281              		.loc 1 1615 0
 3282 01b2 06E0     		b	.L177
 3283              	.L168:
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3284              		.loc 1 1649 0
 3285 01b4 7868     		ldr	r0, [r7, #4]
 3286 01b6 FFF7FEFF 		bl	HAL_UART_ErrorCallback
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
ARM GAS  /tmp/ccMdFX4h.s 			page 87


 3287              		.loc 1 1650 0
 3288 01ba 7B68     		ldr	r3, [r7, #4]
 3289 01bc 0022     		movs	r2, #0
 3290 01be DA66     		str	r2, [r3, #108]
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3291              		.loc 1 1653 0
 3292 01c0 3DE0     		b	.L176
 3293              	.L177:
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3294              		.loc 1 1615 0
 3295 01c2 00BF     		nop
 3296              		.loc 1 1653 0
 3297 01c4 3BE0     		b	.L176
 3298              	.L158:
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   cr3its = READ_REG(huart->Instance->CR3);
 3299              		.loc 1 1658 0
 3300 01c6 7B68     		ldr	r3, [r7, #4]
 3301 01c8 1B68     		ldr	r3, [r3]
 3302 01ca 9B68     		ldr	r3, [r3, #8]
 3303 01cc BB60     		str	r3, [r7, #8]
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_WUF) != RESET) && ((cr3its & USART_CR3_WUFIE) != RESET))
 3304              		.loc 1 1659 0
 3305 01ce 7B69     		ldr	r3, [r7, #20]
 3306 01d0 03F48013 		and	r3, r3, #1048576
 3307 01d4 002B     		cmp	r3, #0
 3308 01d6 15D0     		beq	.L174
 3309              		.loc 1 1659 0 is_stmt 0 discriminator 1
 3310 01d8 BB68     		ldr	r3, [r7, #8]
 3311 01da 03F48003 		and	r3, r3, #4194304
 3312 01de 002B     		cmp	r3, #0
 3313 01e0 10D0     		beq	.L174
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_IT(huart, UART_CLEAR_WUF);
 3314              		.loc 1 1661 0 is_stmt 1
 3315 01e2 7B68     		ldr	r3, [r7, #4]
 3316 01e4 1B68     		ldr	r3, [r3]
 3317 01e6 4FF48012 		mov	r2, #1048576
 3318 01ea 1A62     		str	r2, [r3, #32]
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the UART state ready to be able to start again the process */
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3319              		.loc 1 1663 0
 3320 01ec 7B68     		ldr	r3, [r7, #4]
 3321 01ee 2022     		movs	r2, #32
 3322 01f0 83F86920 		strb	r2, [r3, #105]
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3323              		.loc 1 1664 0
 3324 01f4 7B68     		ldr	r3, [r7, #4]
 3325 01f6 2022     		movs	r2, #32
 3326 01f8 83F86A20 		strb	r2, [r3, #106]
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3327              		.loc 1 1665 0
ARM GAS  /tmp/ccMdFX4h.s 			page 88


 3328 01fc 7868     		ldr	r0, [r7, #4]
 3329 01fe FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3330              		.loc 1 1666 0
 3331 0202 1DE0     		b	.L155
 3332              	.L174:
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 3333              		.loc 1 1670 0
 3334 0204 7B69     		ldr	r3, [r7, #20]
 3335 0206 03F08003 		and	r3, r3, #128
 3336 020a 002B     		cmp	r3, #0
 3337 020c 08D0     		beq	.L175
 3338              		.loc 1 1670 0 is_stmt 0 discriminator 1
 3339 020e 3B69     		ldr	r3, [r7, #16]
 3340 0210 03F08003 		and	r3, r3, #128
 3341 0214 002B     		cmp	r3, #0
 3342 0216 03D0     		beq	.L175
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 3343              		.loc 1 1672 0 is_stmt 1
 3344 0218 7868     		ldr	r0, [r7, #4]
 3345 021a FFF7FEFF 		bl	UART_Transmit_IT
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3346              		.loc 1 1673 0
 3347 021e 0FE0     		b	.L155
 3348              	.L175:
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(((isrflags & USART_ISR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 3349              		.loc 1 1677 0
 3350 0220 7B69     		ldr	r3, [r7, #20]
 3351 0222 03F04003 		and	r3, r3, #64
 3352 0226 002B     		cmp	r3, #0
 3353 0228 0AD0     		beq	.L155
 3354              		.loc 1 1677 0 is_stmt 0 discriminator 1
 3355 022a 3B69     		ldr	r3, [r7, #16]
 3356 022c 03F04003 		and	r3, r3, #64
 3357 0230 002B     		cmp	r3, #0
 3358 0232 05D0     		beq	.L155
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3359              		.loc 1 1679 0 is_stmt 1
 3360 0234 7868     		ldr	r0, [r7, #4]
 3361 0236 FFF7FEFF 		bl	UART_EndTransmit_IT
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3362              		.loc 1 1680 0
 3363 023a 00BF     		nop
 3364 023c 00E0     		b	.L155
 3365              	.L176:
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3366              		.loc 1 1653 0
 3367 023e 00BF     		nop
 3368              	.L155:
ARM GAS  /tmp/ccMdFX4h.s 			page 89


1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3369              		.loc 1 1683 0
 3370 0240 1837     		adds	r7, r7, #24
 3371              	.LCFI119:
 3372              		.cfi_def_cfa_offset 8
 3373 0242 BD46     		mov	sp, r7
 3374              	.LCFI120:
 3375              		.cfi_def_cfa_register 13
 3376              		@ sp needed
 3377 0244 80BD     		pop	{r7, pc}
 3378              	.L179:
 3379 0246 00BF     		.align	2
 3380              	.L178:
 3381 0248 00000000 		.word	UART_DMAAbortOnError
 3382              		.cfi_endproc
 3383              	.LFE148:
 3385              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3386              		.align	1
 3387              		.weak	HAL_UART_TxCpltCallback
 3388              		.syntax unified
 3389              		.thumb
 3390              		.thumb_func
 3391              		.fpu fpv4-sp-d16
 3393              	HAL_UART_TxCpltCallback:
 3394              	.LFB149:
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3395              		.loc 1 1691 0
 3396              		.cfi_startproc
 3397              		@ args = 0, pretend = 0, frame = 8
 3398              		@ frame_needed = 1, uses_anonymous_args = 0
 3399              		@ link register save eliminated.
 3400 0000 80B4     		push	{r7}
 3401              	.LCFI121:
 3402              		.cfi_def_cfa_offset 4
 3403              		.cfi_offset 7, -4
 3404 0002 83B0     		sub	sp, sp, #12
 3405              	.LCFI122:
 3406              		.cfi_def_cfa_offset 16
 3407 0004 00AF     		add	r7, sp, #0
 3408              	.LCFI123:
 3409              		.cfi_def_cfa_register 7
 3410 0006 7860     		str	r0, [r7, #4]
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
ARM GAS  /tmp/ccMdFX4h.s 			page 90


1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3411              		.loc 1 1698 0
 3412 0008 00BF     		nop
 3413 000a 0C37     		adds	r7, r7, #12
 3414              	.LCFI124:
 3415              		.cfi_def_cfa_offset 4
 3416 000c BD46     		mov	sp, r7
 3417              	.LCFI125:
 3418              		.cfi_def_cfa_register 13
 3419              		@ sp needed
 3420 000e 5DF8047B 		ldr	r7, [sp], #4
 3421              	.LCFI126:
 3422              		.cfi_restore 7
 3423              		.cfi_def_cfa_offset 0
 3424 0012 7047     		bx	lr
 3425              		.cfi_endproc
 3426              	.LFE149:
 3428              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3429              		.align	1
 3430              		.weak	HAL_UART_TxHalfCpltCallback
 3431              		.syntax unified
 3432              		.thumb
 3433              		.thumb_func
 3434              		.fpu fpv4-sp-d16
 3436              	HAL_UART_TxHalfCpltCallback:
 3437              	.LFB150:
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart: UART handle.
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3438              		.loc 1 1706 0
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 8
 3441              		@ frame_needed = 1, uses_anonymous_args = 0
 3442              		@ link register save eliminated.
 3443 0000 80B4     		push	{r7}
 3444              	.LCFI127:
 3445              		.cfi_def_cfa_offset 4
 3446              		.cfi_offset 7, -4
 3447 0002 83B0     		sub	sp, sp, #12
 3448              	.LCFI128:
 3449              		.cfi_def_cfa_offset 16
 3450 0004 00AF     		add	r7, sp, #0
 3451              	.LCFI129:
 3452              		.cfi_def_cfa_register 7
 3453 0006 7860     		str	r0, [r7, #4]
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccMdFX4h.s 			page 91


 3454              		.loc 1 1713 0
 3455 0008 00BF     		nop
 3456 000a 0C37     		adds	r7, r7, #12
 3457              	.LCFI130:
 3458              		.cfi_def_cfa_offset 4
 3459 000c BD46     		mov	sp, r7
 3460              	.LCFI131:
 3461              		.cfi_def_cfa_register 13
 3462              		@ sp needed
 3463 000e 5DF8047B 		ldr	r7, [sp], #4
 3464              	.LCFI132:
 3465              		.cfi_restore 7
 3466              		.cfi_def_cfa_offset 0
 3467 0012 7047     		bx	lr
 3468              		.cfi_endproc
 3469              	.LFE150:
 3471              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3472              		.align	1
 3473              		.weak	HAL_UART_RxCpltCallback
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3477              		.fpu fpv4-sp-d16
 3479              	HAL_UART_RxCpltCallback:
 3480              	.LFB151:
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Rx Transfer completed callback.
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3481              		.loc 1 1721 0
 3482              		.cfi_startproc
 3483              		@ args = 0, pretend = 0, frame = 8
 3484              		@ frame_needed = 1, uses_anonymous_args = 0
 3485              		@ link register save eliminated.
 3486 0000 80B4     		push	{r7}
 3487              	.LCFI133:
 3488              		.cfi_def_cfa_offset 4
 3489              		.cfi_offset 7, -4
 3490 0002 83B0     		sub	sp, sp, #12
 3491              	.LCFI134:
 3492              		.cfi_def_cfa_offset 16
 3493 0004 00AF     		add	r7, sp, #0
 3494              	.LCFI135:
 3495              		.cfi_def_cfa_register 7
 3496 0006 7860     		str	r0, [r7, #4]
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3497              		.loc 1 1728 0
ARM GAS  /tmp/ccMdFX4h.s 			page 92


 3498 0008 00BF     		nop
 3499 000a 0C37     		adds	r7, r7, #12
 3500              	.LCFI136:
 3501              		.cfi_def_cfa_offset 4
 3502 000c BD46     		mov	sp, r7
 3503              	.LCFI137:
 3504              		.cfi_def_cfa_register 13
 3505              		@ sp needed
 3506 000e 5DF8047B 		ldr	r7, [sp], #4
 3507              	.LCFI138:
 3508              		.cfi_restore 7
 3509              		.cfi_def_cfa_offset 0
 3510 0012 7047     		bx	lr
 3511              		.cfi_endproc
 3512              	.LFE151:
 3514              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3515              		.align	1
 3516              		.weak	HAL_UART_RxHalfCpltCallback
 3517              		.syntax unified
 3518              		.thumb
 3519              		.thumb_func
 3520              		.fpu fpv4-sp-d16
 3522              	HAL_UART_RxHalfCpltCallback:
 3523              	.LFB152:
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart: UART handle.
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3524              		.loc 1 1736 0
 3525              		.cfi_startproc
 3526              		@ args = 0, pretend = 0, frame = 8
 3527              		@ frame_needed = 1, uses_anonymous_args = 0
 3528              		@ link register save eliminated.
 3529 0000 80B4     		push	{r7}
 3530              	.LCFI139:
 3531              		.cfi_def_cfa_offset 4
 3532              		.cfi_offset 7, -4
 3533 0002 83B0     		sub	sp, sp, #12
 3534              	.LCFI140:
 3535              		.cfi_def_cfa_offset 16
 3536 0004 00AF     		add	r7, sp, #0
 3537              	.LCFI141:
 3538              		.cfi_def_cfa_register 7
 3539 0006 7860     		str	r0, [r7, #4]
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3540              		.loc 1 1743 0
 3541 0008 00BF     		nop
ARM GAS  /tmp/ccMdFX4h.s 			page 93


 3542 000a 0C37     		adds	r7, r7, #12
 3543              	.LCFI142:
 3544              		.cfi_def_cfa_offset 4
 3545 000c BD46     		mov	sp, r7
 3546              	.LCFI143:
 3547              		.cfi_def_cfa_register 13
 3548              		@ sp needed
 3549 000e 5DF8047B 		ldr	r7, [sp], #4
 3550              	.LCFI144:
 3551              		.cfi_restore 7
 3552              		.cfi_def_cfa_offset 0
 3553 0012 7047     		bx	lr
 3554              		.cfi_endproc
 3555              	.LFE152:
 3557              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3558              		.align	1
 3559              		.weak	HAL_UART_ErrorCallback
 3560              		.syntax unified
 3561              		.thumb
 3562              		.thumb_func
 3563              		.fpu fpv4-sp-d16
 3565              	HAL_UART_ErrorCallback:
 3566              	.LFB153:
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART error callback.
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3567              		.loc 1 1751 0
 3568              		.cfi_startproc
 3569              		@ args = 0, pretend = 0, frame = 8
 3570              		@ frame_needed = 1, uses_anonymous_args = 0
 3571              		@ link register save eliminated.
 3572 0000 80B4     		push	{r7}
 3573              	.LCFI145:
 3574              		.cfi_def_cfa_offset 4
 3575              		.cfi_offset 7, -4
 3576 0002 83B0     		sub	sp, sp, #12
 3577              	.LCFI146:
 3578              		.cfi_def_cfa_offset 16
 3579 0004 00AF     		add	r7, sp, #0
 3580              	.LCFI147:
 3581              		.cfi_def_cfa_register 7
 3582 0006 7860     		str	r0, [r7, #4]
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3583              		.loc 1 1758 0
 3584 0008 00BF     		nop
 3585 000a 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccMdFX4h.s 			page 94


 3586              	.LCFI148:
 3587              		.cfi_def_cfa_offset 4
 3588 000c BD46     		mov	sp, r7
 3589              	.LCFI149:
 3590              		.cfi_def_cfa_register 13
 3591              		@ sp needed
 3592 000e 5DF8047B 		ldr	r7, [sp], #4
 3593              	.LCFI150:
 3594              		.cfi_restore 7
 3595              		.cfi_def_cfa_offset 0
 3596 0012 7047     		bx	lr
 3597              		.cfi_endproc
 3598              	.LFE153:
 3600              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3601              		.align	1
 3602              		.weak	HAL_UART_AbortCpltCallback
 3603              		.syntax unified
 3604              		.thumb
 3605              		.thumb_func
 3606              		.fpu fpv4-sp-d16
 3608              	HAL_UART_AbortCpltCallback:
 3609              	.LFB154:
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3610              		.loc 1 1766 0
 3611              		.cfi_startproc
 3612              		@ args = 0, pretend = 0, frame = 8
 3613              		@ frame_needed = 1, uses_anonymous_args = 0
 3614              		@ link register save eliminated.
 3615 0000 80B4     		push	{r7}
 3616              	.LCFI151:
 3617              		.cfi_def_cfa_offset 4
 3618              		.cfi_offset 7, -4
 3619 0002 83B0     		sub	sp, sp, #12
 3620              	.LCFI152:
 3621              		.cfi_def_cfa_offset 16
 3622 0004 00AF     		add	r7, sp, #0
 3623              	.LCFI153:
 3624              		.cfi_def_cfa_register 7
 3625 0006 7860     		str	r0, [r7, #4]
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3626              		.loc 1 1773 0
 3627 0008 00BF     		nop
 3628 000a 0C37     		adds	r7, r7, #12
 3629              	.LCFI154:
ARM GAS  /tmp/ccMdFX4h.s 			page 95


 3630              		.cfi_def_cfa_offset 4
 3631 000c BD46     		mov	sp, r7
 3632              	.LCFI155:
 3633              		.cfi_def_cfa_register 13
 3634              		@ sp needed
 3635 000e 5DF8047B 		ldr	r7, [sp], #4
 3636              	.LCFI156:
 3637              		.cfi_restore 7
 3638              		.cfi_def_cfa_offset 0
 3639 0012 7047     		bx	lr
 3640              		.cfi_endproc
 3641              	.LFE154:
 3643              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3644              		.align	1
 3645              		.weak	HAL_UART_AbortTransmitCpltCallback
 3646              		.syntax unified
 3647              		.thumb
 3648              		.thumb_func
 3649              		.fpu fpv4-sp-d16
 3651              	HAL_UART_AbortTransmitCpltCallback:
 3652              	.LFB155:
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3653              		.loc 1 1781 0
 3654              		.cfi_startproc
 3655              		@ args = 0, pretend = 0, frame = 8
 3656              		@ frame_needed = 1, uses_anonymous_args = 0
 3657              		@ link register save eliminated.
 3658 0000 80B4     		push	{r7}
 3659              	.LCFI157:
 3660              		.cfi_def_cfa_offset 4
 3661              		.cfi_offset 7, -4
 3662 0002 83B0     		sub	sp, sp, #12
 3663              	.LCFI158:
 3664              		.cfi_def_cfa_offset 16
 3665 0004 00AF     		add	r7, sp, #0
 3666              	.LCFI159:
 3667              		.cfi_def_cfa_register 7
 3668 0006 7860     		str	r0, [r7, #4]
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3669              		.loc 1 1788 0
 3670 0008 00BF     		nop
 3671 000a 0C37     		adds	r7, r7, #12
 3672              	.LCFI160:
 3673              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccMdFX4h.s 			page 96


 3674 000c BD46     		mov	sp, r7
 3675              	.LCFI161:
 3676              		.cfi_def_cfa_register 13
 3677              		@ sp needed
 3678 000e 5DF8047B 		ldr	r7, [sp], #4
 3679              	.LCFI162:
 3680              		.cfi_restore 7
 3681              		.cfi_def_cfa_offset 0
 3682 0012 7047     		bx	lr
 3683              		.cfi_endproc
 3684              	.LFE155:
 3686              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3687              		.align	1
 3688              		.weak	HAL_UART_AbortReceiveCpltCallback
 3689              		.syntax unified
 3690              		.thumb
 3691              		.thumb_func
 3692              		.fpu fpv4-sp-d16
 3694              	HAL_UART_AbortReceiveCpltCallback:
 3695              	.LFB156:
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3696              		.loc 1 1796 0
 3697              		.cfi_startproc
 3698              		@ args = 0, pretend = 0, frame = 8
 3699              		@ frame_needed = 1, uses_anonymous_args = 0
 3700              		@ link register save eliminated.
 3701 0000 80B4     		push	{r7}
 3702              	.LCFI163:
 3703              		.cfi_def_cfa_offset 4
 3704              		.cfi_offset 7, -4
 3705 0002 83B0     		sub	sp, sp, #12
 3706              	.LCFI164:
 3707              		.cfi_def_cfa_offset 16
 3708 0004 00AF     		add	r7, sp, #0
 3709              	.LCFI165:
 3710              		.cfi_def_cfa_register 7
 3711 0006 7860     		str	r0, [r7, #4]
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3712              		.loc 1 1803 0
 3713 0008 00BF     		nop
 3714 000a 0C37     		adds	r7, r7, #12
 3715              	.LCFI166:
 3716              		.cfi_def_cfa_offset 4
 3717 000c BD46     		mov	sp, r7
ARM GAS  /tmp/ccMdFX4h.s 			page 97


 3718              	.LCFI167:
 3719              		.cfi_def_cfa_register 13
 3720              		@ sp needed
 3721 000e 5DF8047B 		ldr	r7, [sp], #4
 3722              	.LCFI168:
 3723              		.cfi_restore 7
 3724              		.cfi_def_cfa_offset 0
 3725 0012 7047     		bx	lr
 3726              		.cfi_endproc
 3727              	.LFE156:
 3729              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 3730              		.align	1
 3731              		.global	HAL_MultiProcessor_EnableMuteMode
 3732              		.syntax unified
 3733              		.thumb
 3734              		.thumb_func
 3735              		.fpu fpv4-sp-d16
 3737              	HAL_MultiProcessor_EnableMuteMode:
 3738              	.LFB157:
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enable UART in mute mode (does not mean UART enters mute mode;
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3739              		.loc 1 1838 0
 3740              		.cfi_startproc
 3741              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccMdFX4h.s 			page 98


 3742              		@ frame_needed = 1, uses_anonymous_args = 0
 3743 0000 80B5     		push	{r7, lr}
 3744              	.LCFI169:
 3745              		.cfi_def_cfa_offset 8
 3746              		.cfi_offset 7, -8
 3747              		.cfi_offset 14, -4
 3748 0002 82B0     		sub	sp, sp, #8
 3749              	.LCFI170:
 3750              		.cfi_def_cfa_offset 16
 3751 0004 00AF     		add	r7, sp, #0
 3752              	.LCFI171:
 3753              		.cfi_def_cfa_register 7
 3754 0006 7860     		str	r0, [r7, #4]
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3755              		.loc 1 1840 0
 3756 0008 7B68     		ldr	r3, [r7, #4]
 3757 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3758 000e 012B     		cmp	r3, #1
 3759 0010 01D1     		bne	.L189
 3760              		.loc 1 1840 0 is_stmt 0 discriminator 1
 3761 0012 0223     		movs	r3, #2
 3762 0014 17E0     		b	.L190
 3763              	.L189:
 3764              		.loc 1 1840 0 discriminator 2
 3765 0016 7B68     		ldr	r3, [r7, #4]
 3766 0018 0122     		movs	r2, #1
 3767 001a 83F86820 		strb	r2, [r3, #104]
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3768              		.loc 1 1842 0 is_stmt 1 discriminator 2
 3769 001e 7B68     		ldr	r3, [r7, #4]
 3770 0020 2422     		movs	r2, #36
 3771 0022 83F86920 		strb	r2, [r3, #105]
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 3772              		.loc 1 1845 0 discriminator 2
 3773 0026 7B68     		ldr	r3, [r7, #4]
 3774 0028 1B68     		ldr	r3, [r3]
 3775 002a 7A68     		ldr	r2, [r7, #4]
 3776 002c 1268     		ldr	r2, [r2]
 3777 002e 1268     		ldr	r2, [r2]
 3778 0030 42F40052 		orr	r2, r2, #8192
 3779 0034 1A60     		str	r2, [r3]
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3780              		.loc 1 1847 0 discriminator 2
 3781 0036 7B68     		ldr	r3, [r7, #4]
 3782 0038 2022     		movs	r2, #32
 3783 003a 83F86920 		strb	r2, [r3, #105]
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3784              		.loc 1 1849 0 discriminator 2
 3785 003e 7868     		ldr	r0, [r7, #4]
 3786 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3787 0044 0346     		mov	r3, r0
ARM GAS  /tmp/ccMdFX4h.s 			page 99


 3788              	.L190:
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3789              		.loc 1 1850 0
 3790 0046 1846     		mov	r0, r3
 3791 0048 0837     		adds	r7, r7, #8
 3792              	.LCFI172:
 3793              		.cfi_def_cfa_offset 8
 3794 004a BD46     		mov	sp, r7
 3795              	.LCFI173:
 3796              		.cfi_def_cfa_register 13
 3797              		@ sp needed
 3798 004c 80BD     		pop	{r7, pc}
 3799              		.cfi_endproc
 3800              	.LFE157:
 3802              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 3803              		.align	1
 3804              		.global	HAL_MultiProcessor_DisableMuteMode
 3805              		.syntax unified
 3806              		.thumb
 3807              		.thumb_func
 3808              		.fpu fpv4-sp-d16
 3810              	HAL_MultiProcessor_DisableMuteMode:
 3811              	.LFB158:
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart: UART handle.
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3812              		.loc 1 1859 0
 3813              		.cfi_startproc
 3814              		@ args = 0, pretend = 0, frame = 8
 3815              		@ frame_needed = 1, uses_anonymous_args = 0
 3816 0000 80B5     		push	{r7, lr}
 3817              	.LCFI174:
 3818              		.cfi_def_cfa_offset 8
 3819              		.cfi_offset 7, -8
 3820              		.cfi_offset 14, -4
 3821 0002 82B0     		sub	sp, sp, #8
 3822              	.LCFI175:
 3823              		.cfi_def_cfa_offset 16
 3824 0004 00AF     		add	r7, sp, #0
 3825              	.LCFI176:
 3826              		.cfi_def_cfa_register 7
 3827 0006 7860     		str	r0, [r7, #4]
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3828              		.loc 1 1861 0
 3829 0008 7B68     		ldr	r3, [r7, #4]
 3830 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3831 000e 012B     		cmp	r3, #1
 3832 0010 01D1     		bne	.L192
 3833              		.loc 1 1861 0 is_stmt 0 discriminator 1
 3834 0012 0223     		movs	r3, #2
ARM GAS  /tmp/ccMdFX4h.s 			page 100


 3835 0014 17E0     		b	.L193
 3836              	.L192:
 3837              		.loc 1 1861 0 discriminator 2
 3838 0016 7B68     		ldr	r3, [r7, #4]
 3839 0018 0122     		movs	r2, #1
 3840 001a 83F86820 		strb	r2, [r3, #104]
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3841              		.loc 1 1863 0 is_stmt 1 discriminator 2
 3842 001e 7B68     		ldr	r3, [r7, #4]
 3843 0020 2422     		movs	r2, #36
 3844 0022 83F86920 		strb	r2, [r3, #105]
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    /* Disable USART mute mode by clearing the MME bit in the CR1 register */
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 3845              		.loc 1 1866 0 discriminator 2
 3846 0026 7B68     		ldr	r3, [r7, #4]
 3847 0028 1B68     		ldr	r3, [r3]
 3848 002a 7A68     		ldr	r2, [r7, #4]
 3849 002c 1268     		ldr	r2, [r2]
 3850 002e 1268     		ldr	r2, [r2]
 3851 0030 22F40052 		bic	r2, r2, #8192
 3852 0034 1A60     		str	r2, [r3]
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3853              		.loc 1 1868 0 discriminator 2
 3854 0036 7B68     		ldr	r3, [r7, #4]
 3855 0038 2022     		movs	r2, #32
 3856 003a 83F86920 		strb	r2, [r3, #105]
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 3857              		.loc 1 1870 0 discriminator 2
 3858 003e 7868     		ldr	r0, [r7, #4]
 3859 0040 FFF7FEFF 		bl	UART_CheckIdleState
 3860 0044 0346     		mov	r3, r0
 3861              	.L193:
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3862              		.loc 1 1871 0
 3863 0046 1846     		mov	r0, r3
 3864 0048 0837     		adds	r7, r7, #8
 3865              	.LCFI177:
 3866              		.cfi_def_cfa_offset 8
 3867 004a BD46     		mov	sp, r7
 3868              	.LCFI178:
 3869              		.cfi_def_cfa_register 13
 3870              		@ sp needed
 3871 004c 80BD     		pop	{r7, pc}
 3872              		.cfi_endproc
 3873              	.LFE158:
 3875              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3876              		.align	1
 3877              		.global	HAL_MultiProcessor_EnterMuteMode
 3878              		.syntax unified
 3879              		.thumb
 3880              		.thumb_func
 3881              		.fpu fpv4-sp-d16
 3883              	HAL_MultiProcessor_EnterMuteMode:
ARM GAS  /tmp/ccMdFX4h.s 			page 101


 3884              	.LFB159:
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3885              		.loc 1 1880 0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 8
 3888              		@ frame_needed = 1, uses_anonymous_args = 0
 3889              		@ link register save eliminated.
 3890 0000 80B4     		push	{r7}
 3891              	.LCFI179:
 3892              		.cfi_def_cfa_offset 4
 3893              		.cfi_offset 7, -4
 3894 0002 83B0     		sub	sp, sp, #12
 3895              	.LCFI180:
 3896              		.cfi_def_cfa_offset 16
 3897 0004 00AF     		add	r7, sp, #0
 3898              	.LCFI181:
 3899              		.cfi_def_cfa_register 7
 3900 0006 7860     		str	r0, [r7, #4]
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3901              		.loc 1 1881 0
 3902 0008 7B68     		ldr	r3, [r7, #4]
 3903 000a 1B68     		ldr	r3, [r3]
 3904 000c 7A68     		ldr	r2, [r7, #4]
 3905 000e 1268     		ldr	r2, [r2]
 3906 0010 128B     		ldrh	r2, [r2, #24]	@ movhi
 3907 0012 92B2     		uxth	r2, r2
 3908 0014 42F00402 		orr	r2, r2, #4
 3909 0018 92B2     		uxth	r2, r2
 3910 001a 1A83     		strh	r2, [r3, #24]	@ movhi
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3911              		.loc 1 1882 0
 3912 001c 00BF     		nop
 3913 001e 0C37     		adds	r7, r7, #12
 3914              	.LCFI182:
 3915              		.cfi_def_cfa_offset 4
 3916 0020 BD46     		mov	sp, r7
 3917              	.LCFI183:
 3918              		.cfi_def_cfa_register 13
 3919              		@ sp needed
 3920 0022 5DF8047B 		ldr	r7, [sp], #4
 3921              	.LCFI184:
 3922              		.cfi_restore 7
 3923              		.cfi_def_cfa_offset 0
 3924 0026 7047     		bx	lr
 3925              		.cfi_endproc
 3926              	.LFE159:
 3928              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3929              		.align	1
 3930              		.global	HAL_HalfDuplex_EnableTransmitter
ARM GAS  /tmp/ccMdFX4h.s 			page 102


 3931              		.syntax unified
 3932              		.thumb
 3933              		.thumb_func
 3934              		.fpu fpv4-sp-d16
 3936              	HAL_HalfDuplex_EnableTransmitter:
 3937              	.LFB160:
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart: UART handle.
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3938              		.loc 1 1890 0
 3939              		.cfi_startproc
 3940              		@ args = 0, pretend = 0, frame = 8
 3941              		@ frame_needed = 1, uses_anonymous_args = 0
 3942              		@ link register save eliminated.
 3943 0000 80B4     		push	{r7}
 3944              	.LCFI185:
 3945              		.cfi_def_cfa_offset 4
 3946              		.cfi_offset 7, -4
 3947 0002 83B0     		sub	sp, sp, #12
 3948              	.LCFI186:
 3949              		.cfi_def_cfa_offset 16
 3950 0004 00AF     		add	r7, sp, #0
 3951              	.LCFI187:
 3952              		.cfi_def_cfa_register 7
 3953 0006 7860     		str	r0, [r7, #4]
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 3954              		.loc 1 1892 0
 3955 0008 7B68     		ldr	r3, [r7, #4]
 3956 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 3957 000e 012B     		cmp	r3, #1
 3958 0010 01D1     		bne	.L196
 3959              		.loc 1 1892 0 is_stmt 0 discriminator 1
 3960 0012 0223     		movs	r3, #2
 3961 0014 20E0     		b	.L197
 3962              	.L196:
 3963              		.loc 1 1892 0 discriminator 2
 3964 0016 7B68     		ldr	r3, [r7, #4]
 3965 0018 0122     		movs	r2, #1
 3966 001a 83F86820 		strb	r2, [r3, #104]
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3967              		.loc 1 1893 0 is_stmt 1 discriminator 2
 3968 001e 7B68     		ldr	r3, [r7, #4]
 3969 0020 2422     		movs	r2, #36
 3970 0022 83F86920 		strb	r2, [r3, #105]
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 3971              		.loc 1 1896 0 discriminator 2
 3972 0026 7B68     		ldr	r3, [r7, #4]
 3973 0028 1B68     		ldr	r3, [r3]
 3974 002a 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 103


 3975 002c 1268     		ldr	r2, [r2]
 3976 002e 1268     		ldr	r2, [r2]
 3977 0030 22F00C02 		bic	r2, r2, #12
 3978 0034 1A60     		str	r2, [r3]
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 3979              		.loc 1 1898 0 discriminator 2
 3980 0036 7B68     		ldr	r3, [r7, #4]
 3981 0038 1B68     		ldr	r3, [r3]
 3982 003a 7A68     		ldr	r2, [r7, #4]
 3983 003c 1268     		ldr	r2, [r2]
 3984 003e 1268     		ldr	r2, [r2]
 3985 0040 42F00802 		orr	r2, r2, #8
 3986 0044 1A60     		str	r2, [r3]
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3987              		.loc 1 1900 0 discriminator 2
 3988 0046 7B68     		ldr	r3, [r7, #4]
 3989 0048 2022     		movs	r2, #32
 3990 004a 83F86920 		strb	r2, [r3, #105]
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 3991              		.loc 1 1903 0 discriminator 2
 3992 004e 7B68     		ldr	r3, [r7, #4]
 3993 0050 0022     		movs	r2, #0
 3994 0052 83F86820 		strb	r2, [r3, #104]
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3995              		.loc 1 1905 0 discriminator 2
 3996 0056 0023     		movs	r3, #0
 3997              	.L197:
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3998              		.loc 1 1906 0
 3999 0058 1846     		mov	r0, r3
 4000 005a 0C37     		adds	r7, r7, #12
 4001              	.LCFI188:
 4002              		.cfi_def_cfa_offset 4
 4003 005c BD46     		mov	sp, r7
 4004              	.LCFI189:
 4005              		.cfi_def_cfa_register 13
 4006              		@ sp needed
 4007 005e 5DF8047B 		ldr	r7, [sp], #4
 4008              	.LCFI190:
 4009              		.cfi_restore 7
 4010              		.cfi_def_cfa_offset 0
 4011 0062 7047     		bx	lr
 4012              		.cfi_endproc
 4013              	.LFE160:
 4015              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4016              		.align	1
 4017              		.global	HAL_HalfDuplex_EnableReceiver
 4018              		.syntax unified
 4019              		.thumb
 4020              		.thumb_func
 4021              		.fpu fpv4-sp-d16
 4023              	HAL_HalfDuplex_EnableReceiver:
ARM GAS  /tmp/ccMdFX4h.s 			page 104


 4024              	.LFB161:
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart: UART handle.
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4025              		.loc 1 1914 0
 4026              		.cfi_startproc
 4027              		@ args = 0, pretend = 0, frame = 8
 4028              		@ frame_needed = 1, uses_anonymous_args = 0
 4029              		@ link register save eliminated.
 4030 0000 80B4     		push	{r7}
 4031              	.LCFI191:
 4032              		.cfi_def_cfa_offset 4
 4033              		.cfi_offset 7, -4
 4034 0002 83B0     		sub	sp, sp, #12
 4035              	.LCFI192:
 4036              		.cfi_def_cfa_offset 16
 4037 0004 00AF     		add	r7, sp, #0
 4038              	.LCFI193:
 4039              		.cfi_def_cfa_register 7
 4040 0006 7860     		str	r0, [r7, #4]
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4041              		.loc 1 1916 0
 4042 0008 7B68     		ldr	r3, [r7, #4]
 4043 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 4044 000e 012B     		cmp	r3, #1
 4045 0010 01D1     		bne	.L199
 4046              		.loc 1 1916 0 is_stmt 0 discriminator 1
 4047 0012 0223     		movs	r3, #2
 4048 0014 20E0     		b	.L200
 4049              	.L199:
 4050              		.loc 1 1916 0 discriminator 2
 4051 0016 7B68     		ldr	r3, [r7, #4]
 4052 0018 0122     		movs	r2, #1
 4053 001a 83F86820 		strb	r2, [r3, #104]
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4054              		.loc 1 1917 0 is_stmt 1 discriminator 2
 4055 001e 7B68     		ldr	r3, [r7, #4]
 4056 0020 2422     		movs	r2, #36
 4057 0022 83F86920 		strb	r2, [r3, #105]
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4058              		.loc 1 1920 0 discriminator 2
 4059 0026 7B68     		ldr	r3, [r7, #4]
 4060 0028 1B68     		ldr	r3, [r3]
 4061 002a 7A68     		ldr	r2, [r7, #4]
 4062 002c 1268     		ldr	r2, [r2]
 4063 002e 1268     		ldr	r2, [r2]
 4064 0030 22F00C02 		bic	r2, r2, #12
 4065 0034 1A60     		str	r2, [r3]
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
ARM GAS  /tmp/ccMdFX4h.s 			page 105


1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4066              		.loc 1 1922 0 discriminator 2
 4067 0036 7B68     		ldr	r3, [r7, #4]
 4068 0038 1B68     		ldr	r3, [r3]
 4069 003a 7A68     		ldr	r2, [r7, #4]
 4070 003c 1268     		ldr	r2, [r2]
 4071 003e 1268     		ldr	r2, [r2]
 4072 0040 42F00402 		orr	r2, r2, #4
 4073 0044 1A60     		str	r2, [r3]
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4074              		.loc 1 1924 0 discriminator 2
 4075 0046 7B68     		ldr	r3, [r7, #4]
 4076 0048 2022     		movs	r2, #32
 4077 004a 83F86920 		strb	r2, [r3, #105]
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4078              		.loc 1 1926 0 discriminator 2
 4079 004e 7B68     		ldr	r3, [r7, #4]
 4080 0050 0022     		movs	r2, #0
 4081 0052 83F86820 		strb	r2, [r3, #104]
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4082              		.loc 1 1928 0 discriminator 2
 4083 0056 0023     		movs	r3, #0
 4084              	.L200:
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4085              		.loc 1 1929 0
 4086 0058 1846     		mov	r0, r3
 4087 005a 0C37     		adds	r7, r7, #12
 4088              	.LCFI194:
 4089              		.cfi_def_cfa_offset 4
 4090 005c BD46     		mov	sp, r7
 4091              	.LCFI195:
 4092              		.cfi_def_cfa_register 13
 4093              		@ sp needed
 4094 005e 5DF8047B 		ldr	r7, [sp], #4
 4095              	.LCFI196:
 4096              		.cfi_restore 7
 4097              		.cfi_def_cfa_offset 0
 4098 0062 7047     		bx	lr
 4099              		.cfi_endproc
 4100              	.LFE161:
 4102              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4103              		.align	1
 4104              		.global	HAL_LIN_SendBreak
 4105              		.syntax unified
 4106              		.thumb
 4107              		.thumb_func
 4108              		.fpu fpv4-sp-d16
 4110              	HAL_LIN_SendBreak:
 4111              	.LFB162:
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart: UART handle.
ARM GAS  /tmp/ccMdFX4h.s 			page 106


1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4112              		.loc 1 1938 0
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 8
 4115              		@ frame_needed = 1, uses_anonymous_args = 0
 4116              		@ link register save eliminated.
 4117 0000 80B4     		push	{r7}
 4118              	.LCFI197:
 4119              		.cfi_def_cfa_offset 4
 4120              		.cfi_offset 7, -4
 4121 0002 83B0     		sub	sp, sp, #12
 4122              	.LCFI198:
 4123              		.cfi_def_cfa_offset 16
 4124 0004 00AF     		add	r7, sp, #0
 4125              	.LCFI199:
 4126              		.cfi_def_cfa_register 7
 4127 0006 7860     		str	r0, [r7, #4]
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Locked */
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4128              		.loc 1 1943 0
 4129 0008 7B68     		ldr	r3, [r7, #4]
 4130 000a 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 4131 000e 012B     		cmp	r3, #1
 4132 0010 01D1     		bne	.L202
 4133              		.loc 1 1943 0 is_stmt 0 discriminator 1
 4134 0012 0223     		movs	r3, #2
 4135 0014 1AE0     		b	.L203
 4136              	.L202:
 4137              		.loc 1 1943 0 discriminator 2
 4138 0016 7B68     		ldr	r3, [r7, #4]
 4139 0018 0122     		movs	r2, #1
 4140 001a 83F86820 		strb	r2, [r3, #104]
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4141              		.loc 1 1945 0 is_stmt 1 discriminator 2
 4142 001e 7B68     		ldr	r3, [r7, #4]
 4143 0020 2422     		movs	r2, #36
 4144 0022 83F86920 		strb	r2, [r3, #105]
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->RQR |= UART_SENDBREAK_REQUEST;
 4145              		.loc 1 1948 0 discriminator 2
 4146 0026 7B68     		ldr	r3, [r7, #4]
 4147 0028 1B68     		ldr	r3, [r3]
 4148 002a 7A68     		ldr	r2, [r7, #4]
 4149 002c 1268     		ldr	r2, [r2]
 4150 002e 128B     		ldrh	r2, [r2, #24]	@ movhi
 4151 0030 92B2     		uxth	r2, r2
 4152 0032 42F00202 		orr	r2, r2, #2
 4153 0036 92B2     		uxth	r2, r2
 4154 0038 1A83     		strh	r2, [r3, #24]	@ movhi
ARM GAS  /tmp/ccMdFX4h.s 			page 107


1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4155              		.loc 1 1950 0 discriminator 2
 4156 003a 7B68     		ldr	r3, [r7, #4]
 4157 003c 2022     		movs	r2, #32
 4158 003e 83F86920 		strb	r2, [r3, #105]
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4159              		.loc 1 1953 0 discriminator 2
 4160 0042 7B68     		ldr	r3, [r7, #4]
 4161 0044 0022     		movs	r2, #0
 4162 0046 83F86820 		strb	r2, [r3, #104]
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4163              		.loc 1 1955 0 discriminator 2
 4164 004a 0023     		movs	r3, #0
 4165              	.L203:
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4166              		.loc 1 1956 0
 4167 004c 1846     		mov	r0, r3
 4168 004e 0C37     		adds	r7, r7, #12
 4169              	.LCFI200:
 4170              		.cfi_def_cfa_offset 4
 4171 0050 BD46     		mov	sp, r7
 4172              	.LCFI201:
 4173              		.cfi_def_cfa_register 13
 4174              		@ sp needed
 4175 0052 5DF8047B 		ldr	r7, [sp], #4
 4176              	.LCFI202:
 4177              		.cfi_restore 7
 4178              		.cfi_def_cfa_offset 0
 4179 0056 7047     		bx	lr
 4180              		.cfi_endproc
 4181              	.LFE162:
 4183              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4184              		.align	1
 4185              		.global	HAL_UART_GetState
 4186              		.syntax unified
 4187              		.thumb
 4188              		.thumb_func
 4189              		.fpu fpv4-sp-d16
 4191              	HAL_UART_GetState:
 4192              	.LFB163:
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  *
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
ARM GAS  /tmp/ccMdFX4h.s 			page 108


1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle state.
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4193              		.loc 1 1986 0
 4194              		.cfi_startproc
 4195              		@ args = 0, pretend = 0, frame = 16
 4196              		@ frame_needed = 1, uses_anonymous_args = 0
 4197              		@ link register save eliminated.
 4198 0000 80B4     		push	{r7}
 4199              	.LCFI203:
 4200              		.cfi_def_cfa_offset 4
 4201              		.cfi_offset 7, -4
 4202 0002 85B0     		sub	sp, sp, #20
 4203              	.LCFI204:
 4204              		.cfi_def_cfa_offset 24
 4205 0004 00AF     		add	r7, sp, #0
 4206              	.LCFI205:
 4207              		.cfi_def_cfa_register 7
 4208 0006 7860     		str	r0, [r7, #4]
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1= 0x00, temp2 = 0x00;
 4209              		.loc 1 1987 0
 4210 0008 0023     		movs	r3, #0
 4211 000a FB60     		str	r3, [r7, #12]
 4212 000c 0023     		movs	r3, #0
 4213 000e BB60     		str	r3, [r7, #8]
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
 4214              		.loc 1 1988 0
 4215 0010 7B68     		ldr	r3, [r7, #4]
 4216 0012 93F86930 		ldrb	r3, [r3, #105]
 4217 0016 DBB2     		uxtb	r3, r3
 4218 0018 FB60     		str	r3, [r7, #12]
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 4219              		.loc 1 1989 0
 4220 001a 7B68     		ldr	r3, [r7, #4]
 4221 001c 93F86A30 		ldrb	r3, [r3, #106]
 4222 0020 DBB2     		uxtb	r3, r3
 4223 0022 BB60     		str	r3, [r7, #8]
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4224              		.loc 1 1991 0
 4225 0024 FB68     		ldr	r3, [r7, #12]
 4226 0026 DAB2     		uxtb	r2, r3
 4227 0028 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccMdFX4h.s 			page 109


 4228 002a DBB2     		uxtb	r3, r3
 4229 002c 1343     		orrs	r3, r3, r2
 4230 002e DBB2     		uxtb	r3, r3
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4231              		.loc 1 1992 0
 4232 0030 1846     		mov	r0, r3
 4233 0032 1437     		adds	r7, r7, #20
 4234              	.LCFI206:
 4235              		.cfi_def_cfa_offset 4
 4236 0034 BD46     		mov	sp, r7
 4237              	.LCFI207:
 4238              		.cfi_def_cfa_register 13
 4239              		@ sp needed
 4240 0036 5DF8047B 		ldr	r7, [sp], #4
 4241              	.LCFI208:
 4242              		.cfi_restore 7
 4243              		.cfi_def_cfa_offset 0
 4244 003a 7047     		bx	lr
 4245              		.cfi_endproc
 4246              	.LFE163:
 4248              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4249              		.align	1
 4250              		.global	HAL_UART_GetError
 4251              		.syntax unified
 4252              		.thumb
 4253              		.thumb_func
 4254              		.fpu fpv4-sp-d16
 4256              	HAL_UART_GetError:
 4257              	.LFB164:
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** */
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4258              		.loc 1 2001 0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 8
 4261              		@ frame_needed = 1, uses_anonymous_args = 0
 4262              		@ link register save eliminated.
 4263 0000 80B4     		push	{r7}
 4264              	.LCFI209:
 4265              		.cfi_def_cfa_offset 4
 4266              		.cfi_offset 7, -4
 4267 0002 83B0     		sub	sp, sp, #12
 4268              	.LCFI210:
 4269              		.cfi_def_cfa_offset 16
 4270 0004 00AF     		add	r7, sp, #0
 4271              	.LCFI211:
 4272              		.cfi_def_cfa_register 7
 4273 0006 7860     		str	r0, [r7, #4]
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 4274              		.loc 1 2002 0
 4275 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 110


 4276 000a DB6E     		ldr	r3, [r3, #108]
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4277              		.loc 1 2003 0
 4278 000c 1846     		mov	r0, r3
 4279 000e 0C37     		adds	r7, r7, #12
 4280              	.LCFI212:
 4281              		.cfi_def_cfa_offset 4
 4282 0010 BD46     		mov	sp, r7
 4283              	.LCFI213:
 4284              		.cfi_def_cfa_register 13
 4285              		@ sp needed
 4286 0012 5DF8047B 		ldr	r7, [sp], #4
 4287              	.LCFI214:
 4288              		.cfi_restore 7
 4289              		.cfi_def_cfa_offset 0
 4290 0016 7047     		bx	lr
 4291              		.cfi_endproc
 4292              	.LFE164:
 4294              		.global	__aeabi_uldivmod
 4295              		.section	.text.UART_SetConfig,"ax",%progbits
 4296              		.align	1
 4297              		.global	UART_SetConfig
 4298              		.syntax unified
 4299              		.thumb
 4300              		.thumb_func
 4301              		.fpu fpv4-sp-d16
 4303              	UART_SetConfig:
 4304              	.LFB165:
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4305              		.loc 1 2022 0
 4306              		.cfi_startproc
 4307              		@ args = 0, pretend = 0, frame = 24
 4308              		@ frame_needed = 1, uses_anonymous_args = 0
 4309 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 4310              	.LCFI215:
 4311              		.cfi_def_cfa_offset 24
 4312              		.cfi_offset 4, -24
 4313              		.cfi_offset 5, -20
 4314              		.cfi_offset 7, -16
ARM GAS  /tmp/ccMdFX4h.s 			page 111


 4315              		.cfi_offset 8, -12
 4316              		.cfi_offset 9, -8
 4317              		.cfi_offset 14, -4
 4318 0004 86B0     		sub	sp, sp, #24
 4319              	.LCFI216:
 4320              		.cfi_def_cfa_offset 48
 4321 0006 00AF     		add	r7, sp, #0
 4322              	.LCFI217:
 4323              		.cfi_def_cfa_register 7
 4324 0008 7860     		str	r0, [r7, #4]
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg                     = 0x00000000;
 4325              		.loc 1 2023 0
 4326 000a 0023     		movs	r3, #0
 4327 000c 7B61     		str	r3, [r7, #20]
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 4328              		.loc 1 2024 0
 4329 000e 1023     		movs	r3, #16
 4330 0010 FB74     		strb	r3, [r7, #19]
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp                    = 0x0000;
 4331              		.loc 1 2025 0
 4332 0012 0023     		movs	r3, #0
 4333 0014 BB81     		strh	r3, [r7, #12]	@ movhi
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t usartdiv                   = 0x0000;
 4334              		.loc 1 2026 0
 4335 0016 0023     		movs	r3, #0
 4336 0018 3B82     		strh	r3, [r7, #16]	@ movhi
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4337              		.loc 1 2027 0
 4338 001a 0023     		movs	r3, #0
 4339 001c FB73     		strb	r3, [r7, #15]
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *  the UART Word Length, Parity, Mode and oversampling:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *  set the M bits according to huart->Init.WordLength value
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *  set PCE and PS bits according to huart->Init.Parity value
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *  set TE and RE bits according to huart->Init.Mode value
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
ARM GAS  /tmp/ccMdFX4h.s 			page 112


2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4340              		.loc 1 2055 0
 4341 001e 7B68     		ldr	r3, [r7, #4]
 4342 0020 9A68     		ldr	r2, [r3, #8]
 4343 0022 7B68     		ldr	r3, [r7, #4]
 4344 0024 1B69     		ldr	r3, [r3, #16]
 4345 0026 1A43     		orrs	r2, r2, r3
 4346 0028 7B68     		ldr	r3, [r7, #4]
 4347 002a 5B69     		ldr	r3, [r3, #20]
 4348 002c 1A43     		orrs	r2, r2, r3
 4349 002e 7B68     		ldr	r3, [r7, #4]
 4350 0030 DB69     		ldr	r3, [r3, #28]
 4351 0032 1343     		orrs	r3, r3, r2
 4352 0034 7B61     		str	r3, [r7, #20]
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 4353              		.loc 1 2056 0
 4354 0036 7B68     		ldr	r3, [r7, #4]
 4355 0038 1A68     		ldr	r2, [r3]
 4356 003a 7B68     		ldr	r3, [r7, #4]
 4357 003c 1B68     		ldr	r3, [r3]
 4358 003e 1968     		ldr	r1, [r3]
 4359 0040 AB4B     		ldr	r3, .L295
 4360 0042 0B40     		ands	r3, r3, r1
 4361 0044 7969     		ldr	r1, [r7, #20]
 4362 0046 0B43     		orrs	r3, r3, r1
 4363 0048 1360     		str	r3, [r2]
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    * to huart->Init.StopBits value */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4364              		.loc 1 2061 0
 4365 004a 7B68     		ldr	r3, [r7, #4]
 4366 004c 1B68     		ldr	r3, [r3]
 4367 004e 7A68     		ldr	r2, [r7, #4]
 4368 0050 1268     		ldr	r2, [r2]
 4369 0052 5268     		ldr	r2, [r2, #4]
 4370 0054 22F44051 		bic	r1, r2, #12288
 4371 0058 7A68     		ldr	r2, [r7, #4]
 4372 005a D268     		ldr	r2, [r2, #12]
 4373 005c 0A43     		orrs	r2, r2, r1
 4374 005e 5A60     		str	r2, [r3, #4]
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *   to huart->Init.HwFlowCtl value
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    * - one-bit sampling method versus three samples' majority rule according
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 4375              		.loc 1 2069 0
 4376 0060 7B68     		ldr	r3, [r7, #4]
 4377 0062 9B69     		ldr	r3, [r3, #24]
 4378 0064 7B61     		str	r3, [r7, #20]
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 4379              		.loc 1 2070 0
 4380 0066 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 113


 4381 0068 1B68     		ldr	r3, [r3]
 4382 006a A24A     		ldr	r2, .L295+4
 4383 006c 9342     		cmp	r3, r2
 4384 006e 04D0     		beq	.L209
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 4385              		.loc 1 2072 0
 4386 0070 7B68     		ldr	r3, [r7, #4]
 4387 0072 1B6A     		ldr	r3, [r3, #32]
 4388 0074 7A69     		ldr	r2, [r7, #20]
 4389 0076 1343     		orrs	r3, r3, r2
 4390 0078 7B61     		str	r3, [r7, #20]
 4391              	.L209:
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 4392              		.loc 1 2074 0
 4393 007a 7B68     		ldr	r3, [r7, #4]
 4394 007c 1B68     		ldr	r3, [r3]
 4395 007e 7A68     		ldr	r2, [r7, #4]
 4396 0080 1268     		ldr	r2, [r2]
 4397 0082 9268     		ldr	r2, [r2, #8]
 4398 0084 22F43061 		bic	r1, r2, #2816
 4399 0088 7A69     		ldr	r2, [r7, #20]
 4400 008a 0A43     		orrs	r2, r2, r1
 4401 008c 9A60     		str	r2, [r3, #8]
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4402              		.loc 1 2077 0
 4403 008e 7B68     		ldr	r3, [r7, #4]
 4404 0090 1B68     		ldr	r3, [r3]
 4405 0092 994A     		ldr	r2, .L295+8
 4406 0094 9342     		cmp	r3, r2
 4407 0096 21D1     		bne	.L210
 4408              		.loc 1 2077 0 is_stmt 0 discriminator 1
 4409 0098 984B     		ldr	r3, .L295+12
 4410 009a D3F88830 		ldr	r3, [r3, #136]
 4411 009e 03F00303 		and	r3, r3, #3
 4412 00a2 032B     		cmp	r3, #3
 4413 00a4 16D8     		bhi	.L211
 4414 00a6 01A2     		adr	r2, .L213
 4415 00a8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4416              		.p2align 2
 4417              	.L213:
 4418 00ac BD000000 		.word	.L212+1
 4419 00b0 C9000000 		.word	.L214+1
 4420 00b4 C3000000 		.word	.L215+1
 4421 00b8 CF000000 		.word	.L216+1
 4422              		.p2align 1
 4423              	.L212:
 4424              		.loc 1 2077 0 discriminator 4
 4425 00bc 0123     		movs	r3, #1
 4426 00be FB74     		strb	r3, [r7, #19]
 4427 00c0 E4E0     		b	.L294
 4428              	.L215:
 4429              		.loc 1 2077 0 discriminator 6
 4430 00c2 0223     		movs	r3, #2
ARM GAS  /tmp/ccMdFX4h.s 			page 114


 4431 00c4 FB74     		strb	r3, [r7, #19]
 4432 00c6 E1E0     		b	.L294
 4433              	.L214:
 4434              		.loc 1 2077 0 discriminator 5
 4435 00c8 0423     		movs	r3, #4
 4436 00ca FB74     		strb	r3, [r7, #19]
 4437 00cc DEE0     		b	.L294
 4438              	.L216:
 4439              		.loc 1 2077 0 discriminator 7
 4440 00ce 0823     		movs	r3, #8
 4441 00d0 FB74     		strb	r3, [r7, #19]
 4442 00d2 DBE0     		b	.L294
 4443              	.L211:
 4444              		.loc 1 2077 0 discriminator 3
 4445 00d4 1023     		movs	r3, #16
 4446 00d6 FB74     		strb	r3, [r7, #19]
 4447 00d8 00BF     		nop
 4448 00da D7E0     		b	.L294
 4449              	.L210:
 4450              		.loc 1 2077 0 discriminator 2
 4451 00dc 7B68     		ldr	r3, [r7, #4]
 4452 00de 1B68     		ldr	r3, [r3]
 4453 00e0 874A     		ldr	r2, .L295+16
 4454 00e2 9342     		cmp	r3, r2
 4455 00e4 34D1     		bne	.L219
 4456              		.loc 1 2077 0 discriminator 8
 4457 00e6 854B     		ldr	r3, .L295+12
 4458 00e8 D3F88830 		ldr	r3, [r3, #136]
 4459 00ec 03F00C03 		and	r3, r3, #12
 4460 00f0 0C2B     		cmp	r3, #12
 4461 00f2 29D8     		bhi	.L220
 4462 00f4 01A2     		adr	r2, .L222
 4463 00f6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4464 00fa 00BF     		.p2align 2
 4465              	.L222:
 4466 00fc 31010000 		.word	.L221+1
 4467 0100 49010000 		.word	.L220+1
 4468 0104 49010000 		.word	.L220+1
 4469 0108 49010000 		.word	.L220+1
 4470 010c 3D010000 		.word	.L223+1
 4471 0110 49010000 		.word	.L220+1
 4472 0114 49010000 		.word	.L220+1
 4473 0118 49010000 		.word	.L220+1
 4474 011c 37010000 		.word	.L224+1
 4475 0120 49010000 		.word	.L220+1
 4476 0124 49010000 		.word	.L220+1
 4477 0128 49010000 		.word	.L220+1
 4478 012c 43010000 		.word	.L225+1
 4479              		.p2align 1
 4480              	.L221:
 4481              		.loc 1 2077 0 discriminator 11
 4482 0130 0023     		movs	r3, #0
 4483 0132 FB74     		strb	r3, [r7, #19]
 4484 0134 AAE0     		b	.L294
 4485              	.L224:
 4486              		.loc 1 2077 0 discriminator 13
 4487 0136 0223     		movs	r3, #2
ARM GAS  /tmp/ccMdFX4h.s 			page 115


 4488 0138 FB74     		strb	r3, [r7, #19]
 4489 013a A7E0     		b	.L294
 4490              	.L223:
 4491              		.loc 1 2077 0 discriminator 12
 4492 013c 0423     		movs	r3, #4
 4493 013e FB74     		strb	r3, [r7, #19]
 4494 0140 A4E0     		b	.L294
 4495              	.L225:
 4496              		.loc 1 2077 0 discriminator 14
 4497 0142 0823     		movs	r3, #8
 4498 0144 FB74     		strb	r3, [r7, #19]
 4499 0146 A1E0     		b	.L294
 4500              	.L220:
 4501              		.loc 1 2077 0 discriminator 10
 4502 0148 1023     		movs	r3, #16
 4503 014a FB74     		strb	r3, [r7, #19]
 4504 014c 00BF     		nop
 4505 014e 9DE0     		b	.L294
 4506              	.L219:
 4507              		.loc 1 2077 0 discriminator 9
 4508 0150 7B68     		ldr	r3, [r7, #4]
 4509 0152 1B68     		ldr	r3, [r3]
 4510 0154 6B4A     		ldr	r2, .L295+20
 4511 0156 9342     		cmp	r3, r2
 4512 0158 20D1     		bne	.L227
 4513              		.loc 1 2077 0 discriminator 15
 4514 015a 684B     		ldr	r3, .L295+12
 4515 015c D3F88830 		ldr	r3, [r3, #136]
 4516 0160 03F03003 		and	r3, r3, #48
 4517 0164 102B     		cmp	r3, #16
 4518 0166 0FD0     		beq	.L229
 4519 0168 102B     		cmp	r3, #16
 4520 016a 02D8     		bhi	.L230
 4521 016c 002B     		cmp	r3, #0
 4522 016e 05D0     		beq	.L231
 4523              		.loc 1 2077 0
 4524 0170 10E0     		b	.L228
 4525              	.L230:
 4526              		.loc 1 2077 0 discriminator 15
 4527 0172 202B     		cmp	r3, #32
 4528 0174 05D0     		beq	.L232
 4529 0176 302B     		cmp	r3, #48
 4530 0178 09D0     		beq	.L233
 4531              		.loc 1 2077 0
 4532 017a 0BE0     		b	.L228
 4533              	.L231:
 4534              		.loc 1 2077 0 discriminator 18
 4535 017c 0023     		movs	r3, #0
 4536 017e FB74     		strb	r3, [r7, #19]
 4537 0180 84E0     		b	.L294
 4538              	.L232:
 4539              		.loc 1 2077 0 discriminator 20
 4540 0182 0223     		movs	r3, #2
 4541 0184 FB74     		strb	r3, [r7, #19]
 4542 0186 81E0     		b	.L294
 4543              	.L229:
 4544              		.loc 1 2077 0 discriminator 19
ARM GAS  /tmp/ccMdFX4h.s 			page 116


 4545 0188 0423     		movs	r3, #4
 4546 018a FB74     		strb	r3, [r7, #19]
 4547 018c 7EE0     		b	.L294
 4548              	.L233:
 4549              		.loc 1 2077 0 discriminator 21
 4550 018e 0823     		movs	r3, #8
 4551 0190 FB74     		strb	r3, [r7, #19]
 4552 0192 7BE0     		b	.L294
 4553              	.L228:
 4554              		.loc 1 2077 0 discriminator 17
 4555 0194 1023     		movs	r3, #16
 4556 0196 FB74     		strb	r3, [r7, #19]
 4557 0198 00BF     		nop
 4558 019a 77E0     		b	.L294
 4559              	.L227:
 4560              		.loc 1 2077 0 discriminator 16
 4561 019c 7B68     		ldr	r3, [r7, #4]
 4562 019e 1B68     		ldr	r3, [r3]
 4563 01a0 594A     		ldr	r2, .L295+24
 4564 01a2 9342     		cmp	r3, r2
 4565 01a4 20D1     		bne	.L235
 4566              		.loc 1 2077 0 discriminator 22
 4567 01a6 554B     		ldr	r3, .L295+12
 4568 01a8 D3F88830 		ldr	r3, [r3, #136]
 4569 01ac 03F0C003 		and	r3, r3, #192
 4570 01b0 402B     		cmp	r3, #64
 4571 01b2 0FD0     		beq	.L237
 4572 01b4 402B     		cmp	r3, #64
 4573 01b6 02D8     		bhi	.L238
 4574 01b8 002B     		cmp	r3, #0
 4575 01ba 05D0     		beq	.L239
 4576              		.loc 1 2077 0
 4577 01bc 10E0     		b	.L236
 4578              	.L238:
 4579              		.loc 1 2077 0 discriminator 22
 4580 01be 802B     		cmp	r3, #128
 4581 01c0 05D0     		beq	.L240
 4582 01c2 C02B     		cmp	r3, #192
 4583 01c4 09D0     		beq	.L241
 4584              		.loc 1 2077 0
 4585 01c6 0BE0     		b	.L236
 4586              	.L239:
 4587              		.loc 1 2077 0 discriminator 25
 4588 01c8 0023     		movs	r3, #0
 4589 01ca FB74     		strb	r3, [r7, #19]
 4590 01cc 5EE0     		b	.L294
 4591              	.L240:
 4592              		.loc 1 2077 0 discriminator 27
 4593 01ce 0223     		movs	r3, #2
 4594 01d0 FB74     		strb	r3, [r7, #19]
 4595 01d2 5BE0     		b	.L294
 4596              	.L237:
 4597              		.loc 1 2077 0 discriminator 26
 4598 01d4 0423     		movs	r3, #4
 4599 01d6 FB74     		strb	r3, [r7, #19]
 4600 01d8 58E0     		b	.L294
 4601              	.L241:
ARM GAS  /tmp/ccMdFX4h.s 			page 117


 4602              		.loc 1 2077 0 discriminator 28
 4603 01da 0823     		movs	r3, #8
 4604 01dc FB74     		strb	r3, [r7, #19]
 4605 01de 55E0     		b	.L294
 4606              	.L236:
 4607              		.loc 1 2077 0 discriminator 24
 4608 01e0 1023     		movs	r3, #16
 4609 01e2 FB74     		strb	r3, [r7, #19]
 4610 01e4 00BF     		nop
 4611 01e6 51E0     		b	.L294
 4612              	.L235:
 4613              		.loc 1 2077 0 discriminator 23
 4614 01e8 7B68     		ldr	r3, [r7, #4]
 4615 01ea 1B68     		ldr	r3, [r3]
 4616 01ec 474A     		ldr	r2, .L295+28
 4617 01ee 9342     		cmp	r3, r2
 4618 01f0 24D1     		bne	.L243
 4619              		.loc 1 2077 0 discriminator 29
 4620 01f2 424B     		ldr	r3, .L295+12
 4621 01f4 D3F88830 		ldr	r3, [r3, #136]
 4622 01f8 03F44073 		and	r3, r3, #768
 4623 01fc B3F5807F 		cmp	r3, #256
 4624 0200 12D0     		beq	.L245
 4625 0202 B3F5807F 		cmp	r3, #256
 4626 0206 02D8     		bhi	.L246
 4627 0208 002B     		cmp	r3, #0
 4628 020a 07D0     		beq	.L247
 4629              		.loc 1 2077 0
 4630 020c 12E0     		b	.L244
 4631              	.L246:
 4632              		.loc 1 2077 0 discriminator 29
 4633 020e B3F5007F 		cmp	r3, #512
 4634 0212 06D0     		beq	.L248
 4635 0214 B3F5407F 		cmp	r3, #768
 4636 0218 09D0     		beq	.L249
 4637              		.loc 1 2077 0
 4638 021a 0BE0     		b	.L244
 4639              	.L247:
 4640              		.loc 1 2077 0 discriminator 32
 4641 021c 0023     		movs	r3, #0
 4642 021e FB74     		strb	r3, [r7, #19]
 4643 0220 34E0     		b	.L294
 4644              	.L248:
 4645              		.loc 1 2077 0 discriminator 34
 4646 0222 0223     		movs	r3, #2
 4647 0224 FB74     		strb	r3, [r7, #19]
 4648 0226 31E0     		b	.L294
 4649              	.L245:
 4650              		.loc 1 2077 0 discriminator 33
 4651 0228 0423     		movs	r3, #4
 4652 022a FB74     		strb	r3, [r7, #19]
 4653 022c 2EE0     		b	.L294
 4654              	.L249:
 4655              		.loc 1 2077 0 discriminator 35
 4656 022e 0823     		movs	r3, #8
 4657 0230 FB74     		strb	r3, [r7, #19]
 4658 0232 2BE0     		b	.L294
ARM GAS  /tmp/ccMdFX4h.s 			page 118


 4659              	.L244:
 4660              		.loc 1 2077 0 discriminator 31
 4661 0234 1023     		movs	r3, #16
 4662 0236 FB74     		strb	r3, [r7, #19]
 4663 0238 00BF     		nop
 4664 023a 27E0     		b	.L294
 4665              	.L243:
 4666              		.loc 1 2077 0 discriminator 30
 4667 023c 7B68     		ldr	r3, [r7, #4]
 4668 023e 1B68     		ldr	r3, [r3]
 4669 0240 2C4A     		ldr	r2, .L295+4
 4670 0242 9342     		cmp	r3, r2
 4671 0244 23D1     		bne	.L218
 4672              		.loc 1 2077 0 discriminator 36
 4673 0246 2D4B     		ldr	r3, .L295+12
 4674 0248 D3F88830 		ldr	r3, [r3, #136]
 4675 024c 03F44063 		and	r3, r3, #3072
 4676 0250 B3F5806F 		cmp	r3, #1024
 4677 0254 12D0     		beq	.L252
 4678 0256 B3F5806F 		cmp	r3, #1024
 4679 025a 02D8     		bhi	.L253
 4680 025c 002B     		cmp	r3, #0
 4681 025e 07D0     		beq	.L254
 4682              		.loc 1 2077 0
 4683 0260 12E0     		b	.L251
 4684              	.L253:
 4685              		.loc 1 2077 0 discriminator 36
 4686 0262 B3F5006F 		cmp	r3, #2048
 4687 0266 06D0     		beq	.L255
 4688 0268 B3F5406F 		cmp	r3, #3072
 4689 026c 09D0     		beq	.L256
 4690              		.loc 1 2077 0
 4691 026e 0BE0     		b	.L251
 4692              	.L254:
 4693              		.loc 1 2077 0 discriminator 38
 4694 0270 0023     		movs	r3, #0
 4695 0272 FB74     		strb	r3, [r7, #19]
 4696 0274 0AE0     		b	.L294
 4697              	.L255:
 4698              		.loc 1 2077 0 discriminator 40
 4699 0276 0223     		movs	r3, #2
 4700 0278 FB74     		strb	r3, [r7, #19]
 4701 027a 07E0     		b	.L294
 4702              	.L252:
 4703              		.loc 1 2077 0 discriminator 39
 4704 027c 0423     		movs	r3, #4
 4705 027e FB74     		strb	r3, [r7, #19]
 4706 0280 04E0     		b	.L294
 4707              	.L256:
 4708              		.loc 1 2077 0 discriminator 41
 4709 0282 0823     		movs	r3, #8
 4710 0284 FB74     		strb	r3, [r7, #19]
 4711 0286 01E0     		b	.L294
 4712              	.L251:
 4713              		.loc 1 2077 0 discriminator 37
 4714 0288 1023     		movs	r3, #16
 4715 028a FB74     		strb	r3, [r7, #19]
ARM GAS  /tmp/ccMdFX4h.s 			page 119


 4716              	.L294:
 4717              		.loc 1 2077 0
 4718 028c 00BF     		nop
 4719              	.L218:
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(UART_INSTANCE_LOWPOWER(huart))
 4720              		.loc 1 2080 0 is_stmt 1
 4721 028e 7B68     		ldr	r3, [r7, #4]
 4722 0290 1B68     		ldr	r3, [r3]
 4723 0292 184A     		ldr	r2, .L295+4
 4724 0294 9342     		cmp	r3, r2
 4725 0296 40F0F080 		bne	.L257
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg = 0;
 4726              		.loc 1 2083 0
 4727 029a 0023     		movs	r3, #0
 4728 029c 7B61     		str	r3, [r7, #20]
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 4729              		.loc 1 2085 0
 4730 029e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4731 02a0 082B     		cmp	r3, #8
 4732 02a2 37D8     		bhi	.L258
 4733 02a4 01A2     		adr	r2, .L260
 4734 02a6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4735 02aa 00BF     		.p2align 2
 4736              	.L260:
 4737 02ac D1020000 		.word	.L259+1
 4738 02b0 15030000 		.word	.L258+1
 4739 02b4 D9020000 		.word	.L261+1
 4740 02b8 15030000 		.word	.L258+1
 4741 02bc DF020000 		.word	.L262+1
 4742 02c0 15030000 		.word	.L258+1
 4743 02c4 15030000 		.word	.L258+1
 4744 02c8 15030000 		.word	.L258+1
 4745 02cc E7020000 		.word	.L263+1
 4746              		.p2align 1
 4747              	.L259:
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmpreg = HAL_RCC_GetPCLK1Freq();
 4748              		.loc 1 2088 0
 4749 02d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4750 02d4 7861     		str	r0, [r7, #20]
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 4751              		.loc 1 2089 0
 4752 02d6 20E0     		b	.L264
 4753              	.L261:
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmpreg = (uint32_t) HSI_VALUE;
 4754              		.loc 1 2091 0
 4755 02d8 0D4B     		ldr	r3, .L295+32
 4756 02da 7B61     		str	r3, [r7, #20]
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 4757              		.loc 1 2092 0
ARM GAS  /tmp/ccMdFX4h.s 			page 120


 4758 02dc 1DE0     		b	.L264
 4759              	.L262:
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmpreg = HAL_RCC_GetSysClockFreq();
 4760              		.loc 1 2094 0
 4761 02de FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4762 02e2 7861     		str	r0, [r7, #20]
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 4763              		.loc 1 2095 0
 4764 02e4 19E0     		b	.L264
 4765              	.L263:
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmpreg = (uint32_t) LSE_VALUE;
 4766              		.loc 1 2097 0
 4767 02e6 4FF40043 		mov	r3, #32768
 4768 02ea 7B61     		str	r3, [r7, #20]
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 4769              		.loc 1 2098 0
 4770 02ec 15E0     		b	.L264
 4771              	.L296:
 4772 02ee 00BF     		.align	2
 4773              	.L295:
 4774 02f0 F369FFEF 		.word	-268473869
 4775 02f4 00800040 		.word	1073774592
 4776 02f8 00380140 		.word	1073821696
 4777 02fc 00100240 		.word	1073876992
 4778 0300 00440040 		.word	1073759232
 4779 0304 00480040 		.word	1073760256
 4780 0308 004C0040 		.word	1073761280
 4781 030c 00500040 		.word	1073762304
 4782 0310 0024F400 		.word	16000000
 4783              	.L258:
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     default:
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 4784              		.loc 1 2101 0
 4785 0314 0123     		movs	r3, #1
 4786 0316 FB73     		strb	r3, [r7, #15]
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 4787              		.loc 1 2102 0
 4788 0318 00BF     		nop
 4789              	.L264:
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (tmpreg != 0)
 4790              		.loc 1 2106 0
 4791 031a 7B69     		ldr	r3, [r7, #20]
 4792 031c 002B     		cmp	r3, #0
 4793 031e 00F08A81 		beq	.L276
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ( (tmpreg < (3 * huart->Init.BaudRate) ) ||
 4794              		.loc 1 2109 0
 4795 0322 7B68     		ldr	r3, [r7, #4]
 4796 0324 5A68     		ldr	r2, [r3, #4]
 4797 0326 1346     		mov	r3, r2
ARM GAS  /tmp/ccMdFX4h.s 			page 121


 4798 0328 5B00     		lsls	r3, r3, #1
 4799 032a 1A44     		add	r2, r2, r3
 4800 032c 7B69     		ldr	r3, [r7, #20]
 4801 032e 9A42     		cmp	r2, r3
 4802 0330 05D8     		bhi	.L266
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
 4803              		.loc 1 2110 0 discriminator 1
 4804 0332 7B68     		ldr	r3, [r7, #4]
 4805 0334 5B68     		ldr	r3, [r3, #4]
 4806 0336 1A03     		lsls	r2, r3, #12
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            (tmpreg > (4096 * huart->Init.BaudRate) ))
 4807              		.loc 1 2109 0 discriminator 1
 4808 0338 7B69     		ldr	r3, [r7, #20]
 4809 033a 9A42     		cmp	r2, r3
 4810 033c 02D2     		bcs	.L267
 4811              	.L266:
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 4812              		.loc 1 2112 0
 4813 033e 0123     		movs	r3, #1
 4814 0340 FB73     		strb	r3, [r7, #15]
 4815 0342 78E1     		b	.L276
 4816              	.L267:
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
 4817              		.loc 1 2116 0
 4818 0344 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4819 0346 082B     		cmp	r3, #8
 4820 0348 00F28480 		bhi	.L268
 4821 034c 01A2     		adr	r2, .L270
 4822 034e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4823 0352 00BF     		.p2align 2
 4824              	.L270:
 4825 0354 79030000 		.word	.L269+1
 4826 0358 55040000 		.word	.L268+1
 4827 035c B9030000 		.word	.L271+1
 4828 0360 55040000 		.word	.L268+1
 4829 0364 ED030000 		.word	.L272+1
 4830 0368 55040000 		.word	.L268+1
 4831 036c 55040000 		.word	.L268+1
 4832 0370 55040000 		.word	.L268+1
 4833 0374 2B040000 		.word	.L273+1
 4834              		.p2align 1
 4835              	.L269:
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_PCLK1:
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4836              		.loc 1 2119 0
 4837 0378 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4838 037c 0346     		mov	r3, r0
 4839 037e 4FF00004 		mov	r4, #0
 4840 0382 4FEA0429 		lsl	r9, r4, #8
 4841 0386 49EA1369 		orr	r9, r9, r3, lsr #24
 4842 038a 4FEA0328 		lsl	r8, r3, #8
 4843 038e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 122


 4844 0390 5B68     		ldr	r3, [r3, #4]
 4845 0392 5B08     		lsrs	r3, r3, #1
 4846 0394 4FF00004 		mov	r4, #0
 4847 0398 18EB0300 		adds	r0, r8, r3
 4848 039c 49EB0401 		adc	r1, r9, r4
 4849 03a0 7B68     		ldr	r3, [r7, #4]
 4850 03a2 5B68     		ldr	r3, [r3, #4]
 4851 03a4 4FF00004 		mov	r4, #0
 4852 03a8 1A46     		mov	r2, r3
 4853 03aa 2346     		mov	r3, r4
 4854 03ac FFF7FEFF 		bl	__aeabi_uldivmod
 4855              	.LVL3:
 4856 03b0 0346     		mov	r3, r0
 4857 03b2 0C46     		mov	r4, r1
 4858 03b4 7B61     		str	r3, [r7, #20]
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
 4859              		.loc 1 2120 0
 4860 03b6 50E0     		b	.L274
 4861              	.L271:
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_HSI:
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
 4862              		.loc 1 2122 0
 4863 03b8 7B68     		ldr	r3, [r7, #4]
 4864 03ba 5B68     		ldr	r3, [r3, #4]
 4865 03bc 5B08     		lsrs	r3, r3, #1
 4866 03be 4FF00004 		mov	r4, #0
 4867 03c2 A049     		ldr	r1, .L297
 4868 03c4 4FF00002 		mov	r2, #0
 4869 03c8 13EB0108 		adds	r8, r3, r1
 4870 03cc 44EB0209 		adc	r9, r4, r2
 4871 03d0 4046     		mov	r0, r8
 4872 03d2 4946     		mov	r1, r9
 4873 03d4 7B68     		ldr	r3, [r7, #4]
 4874 03d6 5B68     		ldr	r3, [r3, #4]
 4875 03d8 4FF00004 		mov	r4, #0
 4876 03dc 1A46     		mov	r2, r3
 4877 03de 2346     		mov	r3, r4
 4878 03e0 FFF7FEFF 		bl	__aeabi_uldivmod
 4879              	.LVL4:
 4880 03e4 0346     		mov	r3, r0
 4881 03e6 0C46     		mov	r4, r1
 4882 03e8 7B61     		str	r3, [r7, #20]
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
 4883              		.loc 1 2123 0
 4884 03ea 36E0     		b	.L274
 4885              	.L272:
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_SYSCLK:
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 4886              		.loc 1 2125 0
 4887 03ec FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4888 03f0 0346     		mov	r3, r0
 4889 03f2 1A46     		mov	r2, r3
 4890 03f4 4FF00003 		mov	r3, #0
 4891 03f8 1D02     		lsls	r5, r3, #8
 4892 03fa 45EA1265 		orr	r5, r5, r2, lsr #24
 4893 03fe 1402     		lsls	r4, r2, #8
 4894 0400 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 123


 4895 0402 5B68     		ldr	r3, [r3, #4]
 4896 0404 5B08     		lsrs	r3, r3, #1
 4897 0406 1A46     		mov	r2, r3
 4898 0408 4FF00003 		mov	r3, #0
 4899 040c A018     		adds	r0, r4, r2
 4900 040e 45EB0301 		adc	r1, r5, r3
 4901 0412 7B68     		ldr	r3, [r7, #4]
 4902 0414 5B68     		ldr	r3, [r3, #4]
 4903 0416 4FF00004 		mov	r4, #0
 4904 041a 1A46     		mov	r2, r3
 4905 041c 2346     		mov	r3, r4
 4906 041e FFF7FEFF 		bl	__aeabi_uldivmod
 4907              	.LVL5:
 4908 0422 0346     		mov	r3, r0
 4909 0424 0C46     		mov	r4, r1
 4910 0426 7B61     		str	r3, [r7, #20]
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
 4911              		.loc 1 2126 0
 4912 0428 17E0     		b	.L274
 4913              	.L273:
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_LSE:
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           tmpreg = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 4914              		.loc 1 2128 0
 4915 042a 7B68     		ldr	r3, [r7, #4]
 4916 042c 5B68     		ldr	r3, [r3, #4]
 4917 042e 5B08     		lsrs	r3, r3, #1
 4918 0430 4FF00004 		mov	r4, #0
 4919 0434 13F50000 		adds	r0, r3, #8388608
 4920 0438 44F10001 		adc	r1, r4, #0
 4921 043c 7B68     		ldr	r3, [r7, #4]
 4922 043e 5B68     		ldr	r3, [r3, #4]
 4923 0440 4FF00004 		mov	r4, #0
 4924 0444 1A46     		mov	r2, r3
 4925 0446 2346     		mov	r3, r4
 4926 0448 FFF7FEFF 		bl	__aeabi_uldivmod
 4927              	.LVL6:
 4928 044c 0346     		mov	r3, r0
 4929 044e 0C46     		mov	r4, r1
 4930 0450 7B61     		str	r3, [r7, #20]
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
 4931              		.loc 1 2129 0
 4932 0452 02E0     		b	.L274
 4933              	.L268:
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         case UART_CLOCKSOURCE_UNDEFINED:
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         default:
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
 4934              		.loc 1 2132 0
 4935 0454 0123     		movs	r3, #1
 4936 0456 FB73     		strb	r3, [r7, #15]
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           break;
 4937              		.loc 1 2133 0
 4938 0458 00BF     		nop
 4939              	.L274:
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((tmpreg >= UART_LPUART_BRR_MIN) && (tmpreg <= UART_LPUART_BRR_MAX))
 4940              		.loc 1 2136 0
ARM GAS  /tmp/ccMdFX4h.s 			page 124


 4941 045a 7B69     		ldr	r3, [r7, #20]
 4942 045c B3F5407F 		cmp	r3, #768
 4943 0460 08D3     		bcc	.L275
 4944              		.loc 1 2136 0 is_stmt 0 discriminator 1
 4945 0462 7B69     		ldr	r3, [r7, #20]
 4946 0464 B3F5801F 		cmp	r3, #1048576
 4947 0468 04D2     		bcs	.L275
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            huart->Instance->BRR = tmpreg;
 4948              		.loc 1 2138 0 is_stmt 1
 4949 046a 7B68     		ldr	r3, [r7, #4]
 4950 046c 1B68     		ldr	r3, [r3]
 4951 046e 7A69     		ldr	r2, [r7, #20]
 4952 0470 DA60     		str	r2, [r3, #12]
 4953 0472 E0E0     		b	.L276
 4954              	.L275:
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
 4955              		.loc 1 2142 0
 4956 0474 0123     		movs	r3, #1
 4957 0476 FB73     		strb	r3, [r7, #15]
 4958 0478 DDE0     		b	.L276
 4959              	.L257:
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }  /*   if ( (tmpreg < (3 * huart->Init.BaudRate) ) || (tmpreg > (4096 * huart->Init.BaudRate
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (tmpreg != 0) */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 4960              		.loc 1 2148 0
 4961 047a 7B68     		ldr	r3, [r7, #4]
 4962 047c DB69     		ldr	r3, [r3, #28]
 4963 047e B3F5004F 		cmp	r3, #32768
 4964 0482 6ED1     		bne	.L277
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 4965              		.loc 1 2150 0
 4966 0484 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4967 0486 082B     		cmp	r3, #8
 4968 0488 56D8     		bhi	.L278
 4969 048a 01A2     		adr	r2, .L280
 4970 048c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4971              		.p2align 2
 4972              	.L280:
 4973 0490 B5040000 		.word	.L279+1
 4974 0494 D1040000 		.word	.L281+1
 4975 0498 ED040000 		.word	.L282+1
 4976 049c 39050000 		.word	.L278+1
 4977 04a0 07050000 		.word	.L283+1
 4978 04a4 39050000 		.word	.L278+1
 4979 04a8 39050000 		.word	.L278+1
 4980 04ac 39050000 		.word	.L278+1
 4981 04b0 23050000 		.word	.L284+1
 4982              		.p2align 1
 4983              	.L279:
ARM GAS  /tmp/ccMdFX4h.s 			page 125


2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 4984              		.loc 1 2153 0
 4985 04b4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4986 04b8 0346     		mov	r3, r0
 4987 04ba 5A00     		lsls	r2, r3, #1
 4988 04bc 7B68     		ldr	r3, [r7, #4]
 4989 04be 5B68     		ldr	r3, [r3, #4]
 4990 04c0 5B08     		lsrs	r3, r3, #1
 4991 04c2 1A44     		add	r2, r2, r3
 4992 04c4 7B68     		ldr	r3, [r7, #4]
 4993 04c6 5B68     		ldr	r3, [r3, #4]
 4994 04c8 B2FBF3F3 		udiv	r3, r2, r3
 4995 04cc 3B82     		strh	r3, [r7, #16]	@ movhi
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 4996              		.loc 1 2154 0
 4997 04ce 36E0     		b	.L285
 4998              	.L281:
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 4999              		.loc 1 2156 0
 5000 04d0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5001 04d4 0346     		mov	r3, r0
 5002 04d6 5A00     		lsls	r2, r3, #1
 5003 04d8 7B68     		ldr	r3, [r7, #4]
 5004 04da 5B68     		ldr	r3, [r3, #4]
 5005 04dc 5B08     		lsrs	r3, r3, #1
 5006 04de 1A44     		add	r2, r2, r3
 5007 04e0 7B68     		ldr	r3, [r7, #4]
 5008 04e2 5B68     		ldr	r3, [r3, #4]
 5009 04e4 B2FBF3F3 		udiv	r3, r2, r3
 5010 04e8 3B82     		strh	r3, [r7, #16]	@ movhi
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5011              		.loc 1 2157 0
 5012 04ea 28E0     		b	.L285
 5013              	.L282:
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 5014              		.loc 1 2159 0
 5015 04ec 7B68     		ldr	r3, [r7, #4]
 5016 04ee 5B68     		ldr	r3, [r3, #4]
 5017 04f0 5B08     		lsrs	r3, r3, #1
 5018 04f2 03F1F473 		add	r3, r3, #31981568
 5019 04f6 03F59043 		add	r3, r3, #18432
 5020 04fa 7A68     		ldr	r2, [r7, #4]
 5021 04fc 5268     		ldr	r2, [r2, #4]
 5022 04fe B3FBF2F3 		udiv	r3, r3, r2
 5023 0502 3B82     		strh	r3, [r7, #16]	@ movhi
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5024              		.loc 1 2160 0
 5025 0504 1BE0     		b	.L285
 5026              	.L283:
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 5027              		.loc 1 2162 0
 5028 0506 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
ARM GAS  /tmp/ccMdFX4h.s 			page 126


 5029 050a 0346     		mov	r3, r0
 5030 050c 5A00     		lsls	r2, r3, #1
 5031 050e 7B68     		ldr	r3, [r7, #4]
 5032 0510 5B68     		ldr	r3, [r3, #4]
 5033 0512 5B08     		lsrs	r3, r3, #1
 5034 0514 1A44     		add	r2, r2, r3
 5035 0516 7B68     		ldr	r3, [r7, #4]
 5036 0518 5B68     		ldr	r3, [r3, #4]
 5037 051a B2FBF3F3 		udiv	r3, r2, r3
 5038 051e 3B82     		strh	r3, [r7, #16]	@ movhi
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5039              		.loc 1 2163 0
 5040 0520 0DE0     		b	.L285
 5041              	.L284:
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 5042              		.loc 1 2165 0
 5043 0522 7B68     		ldr	r3, [r7, #4]
 5044 0524 5B68     		ldr	r3, [r3, #4]
 5045 0526 5B08     		lsrs	r3, r3, #1
 5046 0528 03F58032 		add	r2, r3, #65536
 5047 052c 7B68     		ldr	r3, [r7, #4]
 5048 052e 5B68     		ldr	r3, [r3, #4]
 5049 0530 B2FBF3F3 		udiv	r3, r2, r3
 5050 0534 3B82     		strh	r3, [r7, #16]	@ movhi
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5051              		.loc 1 2166 0
 5052 0536 02E0     		b	.L285
 5053              	.L278:
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     default:
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5054              		.loc 1 2169 0
 5055 0538 0123     		movs	r3, #1
 5056 053a FB73     		strb	r3, [r7, #15]
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5057              		.loc 1 2170 0
 5058 053c 00BF     		nop
 5059              	.L285:
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     brrtemp = usartdiv & 0xFFF0;
 5060              		.loc 1 2173 0
 5061 053e 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 5062 0540 23F00F03 		bic	r3, r3, #15
 5063 0544 BB81     		strh	r3, [r7, #12]	@ movhi
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000F) >> 1U);
 5064              		.loc 1 2174 0
 5065 0546 3B8A     		ldrh	r3, [r7, #16]
 5066 0548 5B10     		asrs	r3, r3, #1
 5067 054a 9BB2     		uxth	r3, r3
 5068 054c 03F00703 		and	r3, r3, #7
 5069 0550 9AB2     		uxth	r2, r3
 5070 0552 BB89     		ldrh	r3, [r7, #12]	@ movhi
 5071 0554 1343     		orrs	r3, r3, r2
 5072 0556 BB81     		strh	r3, [r7, #12]	@ movhi
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Instance->BRR = brrtemp;
ARM GAS  /tmp/ccMdFX4h.s 			page 127


 5073              		.loc 1 2175 0
 5074 0558 7B68     		ldr	r3, [r7, #4]
 5075 055a 1B68     		ldr	r3, [r3]
 5076 055c BA89     		ldrh	r2, [r7, #12]
 5077 055e DA60     		str	r2, [r3, #12]
 5078 0560 69E0     		b	.L276
 5079              	.L277:
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5080              		.loc 1 2179 0
 5081 0562 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 5082 0564 082B     		cmp	r3, #8
 5083 0566 63D8     		bhi	.L286
 5084 0568 01A2     		adr	r2, .L288
 5085 056a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5086 056e 00BF     		.p2align 2
 5087              	.L288:
 5088 0570 95050000 		.word	.L287+1
 5089 0574 B5050000 		.word	.L289+1
 5090 0578 D5050000 		.word	.L290+1
 5091 057c 31060000 		.word	.L286+1
 5092 0580 F5050000 		.word	.L291+1
 5093 0584 31060000 		.word	.L286+1
 5094 0588 31060000 		.word	.L286+1
 5095 058c 31060000 		.word	.L286+1
 5096 0590 15060000 		.word	.L292+1
 5097              		.p2align 1
 5098              	.L287:
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK1:
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.Bau
 5099              		.loc 1 2182 0
 5100 0594 7B68     		ldr	r3, [r7, #4]
 5101 0596 1C68     		ldr	r4, [r3]
 5102 0598 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5103 059c 0246     		mov	r2, r0
 5104 059e 7B68     		ldr	r3, [r7, #4]
 5105 05a0 5B68     		ldr	r3, [r3, #4]
 5106 05a2 5B08     		lsrs	r3, r3, #1
 5107 05a4 1A44     		add	r2, r2, r3
 5108 05a6 7B68     		ldr	r3, [r7, #4]
 5109 05a8 5B68     		ldr	r3, [r3, #4]
 5110 05aa B2FBF3F3 		udiv	r3, r2, r3
 5111 05ae 9BB2     		uxth	r3, r3
 5112 05b0 E360     		str	r3, [r4, #12]
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5113              		.loc 1 2183 0
 5114 05b2 40E0     		b	.L276
 5115              	.L289:
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_PCLK2:
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.Bau
 5116              		.loc 1 2185 0
 5117 05b4 7B68     		ldr	r3, [r7, #4]
 5118 05b6 1C68     		ldr	r4, [r3]
 5119 05b8 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
ARM GAS  /tmp/ccMdFX4h.s 			page 128


 5120 05bc 0246     		mov	r2, r0
 5121 05be 7B68     		ldr	r3, [r7, #4]
 5122 05c0 5B68     		ldr	r3, [r3, #4]
 5123 05c2 5B08     		lsrs	r3, r3, #1
 5124 05c4 1A44     		add	r2, r2, r3
 5125 05c6 7B68     		ldr	r3, [r7, #4]
 5126 05c8 5B68     		ldr	r3, [r3, #4]
 5127 05ca B2FBF3F3 		udiv	r3, r2, r3
 5128 05ce 9BB2     		uxth	r3, r3
 5129 05d0 E360     		str	r3, [r4, #12]
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5130              		.loc 1 2186 0
 5131 05d2 30E0     		b	.L276
 5132              	.L290:
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_HSI:
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 5133              		.loc 1 2188 0
 5134 05d4 7B68     		ldr	r3, [r7, #4]
 5135 05d6 1A68     		ldr	r2, [r3]
 5136 05d8 7B68     		ldr	r3, [r7, #4]
 5137 05da 5B68     		ldr	r3, [r3, #4]
 5138 05dc 5B08     		lsrs	r3, r3, #1
 5139 05de 03F57403 		add	r3, r3, #15990784
 5140 05e2 03F51053 		add	r3, r3, #9216
 5141 05e6 7968     		ldr	r1, [r7, #4]
 5142 05e8 4968     		ldr	r1, [r1, #4]
 5143 05ea B3FBF1F3 		udiv	r3, r3, r1
 5144 05ee 9BB2     		uxth	r3, r3
 5145 05f0 D360     		str	r3, [r2, #12]
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5146              		.loc 1 2189 0
 5147 05f2 20E0     		b	.L276
 5148              	.L291:
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_SYSCLK:
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.
 5149              		.loc 1 2191 0
 5150 05f4 7B68     		ldr	r3, [r7, #4]
 5151 05f6 1C68     		ldr	r4, [r3]
 5152 05f8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5153 05fc 0246     		mov	r2, r0
 5154 05fe 7B68     		ldr	r3, [r7, #4]
 5155 0600 5B68     		ldr	r3, [r3, #4]
 5156 0602 5B08     		lsrs	r3, r3, #1
 5157 0604 1A44     		add	r2, r2, r3
 5158 0606 7B68     		ldr	r3, [r7, #4]
 5159 0608 5B68     		ldr	r3, [r3, #4]
 5160 060a B2FBF3F3 		udiv	r3, r2, r3
 5161 060e 9BB2     		uxth	r3, r3
 5162 0610 E360     		str	r3, [r4, #12]
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5163              		.loc 1 2192 0
 5164 0612 10E0     		b	.L276
 5165              	.L292:
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_LSE:
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 5166              		.loc 1 2194 0
 5167 0614 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 129


 5168 0616 1B68     		ldr	r3, [r3]
 5169 0618 7A68     		ldr	r2, [r7, #4]
 5170 061a 5268     		ldr	r2, [r2, #4]
 5171 061c 5208     		lsrs	r2, r2, #1
 5172 061e 02F50041 		add	r1, r2, #32768
 5173 0622 7A68     		ldr	r2, [r7, #4]
 5174 0624 5268     		ldr	r2, [r2, #4]
 5175 0626 B1FBF2F2 		udiv	r2, r1, r2
 5176 062a 92B2     		uxth	r2, r2
 5177 062c DA60     		str	r2, [r3, #12]
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5178              		.loc 1 2195 0
 5179 062e 02E0     		b	.L276
 5180              	.L286:
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     case UART_CLOCKSOURCE_UNDEFINED:
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     default:
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5181              		.loc 1 2198 0
 5182 0630 0123     		movs	r3, #1
 5183 0632 FB73     		strb	r3, [r7, #15]
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       break;
 5184              		.loc 1 2199 0
 5185 0634 00BF     		nop
 5186              	.L276:
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
 5187              		.loc 1 2203 0
 5188 0636 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5189              		.loc 1 2205 0
 5190 0638 1846     		mov	r0, r3
 5191 063a 1837     		adds	r7, r7, #24
 5192              	.LCFI218:
 5193              		.cfi_def_cfa_offset 24
 5194 063c BD46     		mov	sp, r7
 5195              	.LCFI219:
 5196              		.cfi_def_cfa_register 13
 5197              		@ sp needed
 5198 063e BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 5199              	.L298:
 5200 0642 00BF     		.align	2
 5201              	.L297:
 5202 0644 000024F4 		.word	-198967296
 5203              		.cfi_endproc
 5204              	.LFE165:
 5206              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5207              		.align	1
 5208              		.global	UART_AdvFeatureConfig
 5209              		.syntax unified
 5210              		.thumb
 5211              		.thumb_func
 5212              		.fpu fpv4-sp-d16
 5214              	UART_AdvFeatureConfig:
 5215              	.LFB166:
ARM GAS  /tmp/ccMdFX4h.s 			page 130


2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart: UART handle.
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5216              		.loc 1 2213 0
 5217              		.cfi_startproc
 5218              		@ args = 0, pretend = 0, frame = 8
 5219              		@ frame_needed = 1, uses_anonymous_args = 0
 5220              		@ link register save eliminated.
 5221 0000 80B4     		push	{r7}
 5222              	.LCFI220:
 5223              		.cfi_def_cfa_offset 4
 5224              		.cfi_offset 7, -4
 5225 0002 83B0     		sub	sp, sp, #12
 5226              	.LCFI221:
 5227              		.cfi_def_cfa_offset 16
 5228 0004 00AF     		add	r7, sp, #0
 5229              	.LCFI222:
 5230              		.cfi_def_cfa_register 7
 5231 0006 7860     		str	r0, [r7, #4]
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 5232              		.loc 1 2218 0
 5233 0008 7B68     		ldr	r3, [r7, #4]
 5234 000a 5B6A     		ldr	r3, [r3, #36]
 5235 000c 03F00103 		and	r3, r3, #1
 5236 0010 002B     		cmp	r3, #0
 5237 0012 0AD0     		beq	.L300
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5238              		.loc 1 2221 0
 5239 0014 7B68     		ldr	r3, [r7, #4]
 5240 0016 1B68     		ldr	r3, [r3]
 5241 0018 7A68     		ldr	r2, [r7, #4]
 5242 001a 1268     		ldr	r2, [r2]
 5243 001c 5268     		ldr	r2, [r2, #4]
 5244 001e 22F40031 		bic	r1, r2, #131072
 5245 0022 7A68     		ldr	r2, [r7, #4]
 5246 0024 926A     		ldr	r2, [r2, #40]
 5247 0026 0A43     		orrs	r2, r2, r1
 5248 0028 5A60     		str	r2, [r3, #4]
 5249              	.L300:
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 5250              		.loc 1 2225 0
 5251 002a 7B68     		ldr	r3, [r7, #4]
 5252 002c 5B6A     		ldr	r3, [r3, #36]
ARM GAS  /tmp/ccMdFX4h.s 			page 131


 5253 002e 03F00203 		and	r3, r3, #2
 5254 0032 002B     		cmp	r3, #0
 5255 0034 0AD0     		beq	.L301
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5256              		.loc 1 2228 0
 5257 0036 7B68     		ldr	r3, [r7, #4]
 5258 0038 1B68     		ldr	r3, [r3]
 5259 003a 7A68     		ldr	r2, [r7, #4]
 5260 003c 1268     		ldr	r2, [r2]
 5261 003e 5268     		ldr	r2, [r2, #4]
 5262 0040 22F48031 		bic	r1, r2, #65536
 5263 0044 7A68     		ldr	r2, [r7, #4]
 5264 0046 D26A     		ldr	r2, [r2, #44]
 5265 0048 0A43     		orrs	r2, r2, r1
 5266 004a 5A60     		str	r2, [r3, #4]
 5267              	.L301:
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 5268              		.loc 1 2232 0
 5269 004c 7B68     		ldr	r3, [r7, #4]
 5270 004e 5B6A     		ldr	r3, [r3, #36]
 5271 0050 03F00403 		and	r3, r3, #4
 5272 0054 002B     		cmp	r3, #0
 5273 0056 0AD0     		beq	.L302
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5274              		.loc 1 2235 0
 5275 0058 7B68     		ldr	r3, [r7, #4]
 5276 005a 1B68     		ldr	r3, [r3]
 5277 005c 7A68     		ldr	r2, [r7, #4]
 5278 005e 1268     		ldr	r2, [r2]
 5279 0060 5268     		ldr	r2, [r2, #4]
 5280 0062 22F48021 		bic	r1, r2, #262144
 5281 0066 7A68     		ldr	r2, [r7, #4]
 5282 0068 126B     		ldr	r2, [r2, #48]
 5283 006a 0A43     		orrs	r2, r2, r1
 5284 006c 5A60     		str	r2, [r3, #4]
 5285              	.L302:
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 5286              		.loc 1 2239 0
 5287 006e 7B68     		ldr	r3, [r7, #4]
 5288 0070 5B6A     		ldr	r3, [r3, #36]
 5289 0072 03F00803 		and	r3, r3, #8
 5290 0076 002B     		cmp	r3, #0
 5291 0078 0AD0     		beq	.L303
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5292              		.loc 1 2242 0
ARM GAS  /tmp/ccMdFX4h.s 			page 132


 5293 007a 7B68     		ldr	r3, [r7, #4]
 5294 007c 1B68     		ldr	r3, [r3]
 5295 007e 7A68     		ldr	r2, [r7, #4]
 5296 0080 1268     		ldr	r2, [r2]
 5297 0082 5268     		ldr	r2, [r2, #4]
 5298 0084 22F40041 		bic	r1, r2, #32768
 5299 0088 7A68     		ldr	r2, [r7, #4]
 5300 008a 526B     		ldr	r2, [r2, #52]
 5301 008c 0A43     		orrs	r2, r2, r1
 5302 008e 5A60     		str	r2, [r3, #4]
 5303              	.L303:
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 5304              		.loc 1 2246 0
 5305 0090 7B68     		ldr	r3, [r7, #4]
 5306 0092 5B6A     		ldr	r3, [r3, #36]
 5307 0094 03F01003 		and	r3, r3, #16
 5308 0098 002B     		cmp	r3, #0
 5309 009a 0AD0     		beq	.L304
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5310              		.loc 1 2249 0
 5311 009c 7B68     		ldr	r3, [r7, #4]
 5312 009e 1B68     		ldr	r3, [r3]
 5313 00a0 7A68     		ldr	r2, [r7, #4]
 5314 00a2 1268     		ldr	r2, [r2]
 5315 00a4 9268     		ldr	r2, [r2, #8]
 5316 00a6 22F48051 		bic	r1, r2, #4096
 5317 00aa 7A68     		ldr	r2, [r7, #4]
 5318 00ac 926B     		ldr	r2, [r2, #56]
 5319 00ae 0A43     		orrs	r2, r2, r1
 5320 00b0 9A60     		str	r2, [r3, #8]
 5321              	.L304:
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 5322              		.loc 1 2253 0
 5323 00b2 7B68     		ldr	r3, [r7, #4]
 5324 00b4 5B6A     		ldr	r3, [r3, #36]
 5325 00b6 03F02003 		and	r3, r3, #32
 5326 00ba 002B     		cmp	r3, #0
 5327 00bc 0AD0     		beq	.L305
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5328              		.loc 1 2256 0
 5329 00be 7B68     		ldr	r3, [r7, #4]
 5330 00c0 1B68     		ldr	r3, [r3]
 5331 00c2 7A68     		ldr	r2, [r7, #4]
 5332 00c4 1268     		ldr	r2, [r2]
 5333 00c6 9268     		ldr	r2, [r2, #8]
 5334 00c8 22F40051 		bic	r1, r2, #8192
 5335 00cc 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 133


 5336 00ce D26B     		ldr	r2, [r2, #60]
 5337 00d0 0A43     		orrs	r2, r2, r1
 5338 00d2 9A60     		str	r2, [r3, #8]
 5339              	.L305:
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5340              		.loc 1 2260 0
 5341 00d4 7B68     		ldr	r3, [r7, #4]
 5342 00d6 5B6A     		ldr	r3, [r3, #36]
 5343 00d8 03F04003 		and	r3, r3, #64
 5344 00dc 002B     		cmp	r3, #0
 5345 00de 1AD0     		beq	.L306
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5346              		.loc 1 2264 0
 5347 00e0 7B68     		ldr	r3, [r7, #4]
 5348 00e2 1B68     		ldr	r3, [r3]
 5349 00e4 7A68     		ldr	r2, [r7, #4]
 5350 00e6 1268     		ldr	r2, [r2]
 5351 00e8 5268     		ldr	r2, [r2, #4]
 5352 00ea 22F48011 		bic	r1, r2, #1048576
 5353 00ee 7A68     		ldr	r2, [r7, #4]
 5354 00f0 126C     		ldr	r2, [r2, #64]
 5355 00f2 0A43     		orrs	r2, r2, r1
 5356 00f4 5A60     		str	r2, [r3, #4]
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5357              		.loc 1 2266 0
 5358 00f6 7B68     		ldr	r3, [r7, #4]
 5359 00f8 1B6C     		ldr	r3, [r3, #64]
 5360 00fa B3F5801F 		cmp	r3, #1048576
 5361 00fe 0AD1     		bne	.L306
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5362              		.loc 1 2269 0
 5363 0100 7B68     		ldr	r3, [r7, #4]
 5364 0102 1B68     		ldr	r3, [r3]
 5365 0104 7A68     		ldr	r2, [r7, #4]
 5366 0106 1268     		ldr	r2, [r2]
 5367 0108 5268     		ldr	r2, [r2, #4]
 5368 010a 22F4C001 		bic	r1, r2, #6291456
 5369 010e 7A68     		ldr	r2, [r7, #4]
 5370 0110 526C     		ldr	r2, [r2, #68]
 5371 0112 0A43     		orrs	r2, r2, r1
 5372 0114 5A60     		str	r2, [r3, #4]
 5373              	.L306:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5374              		.loc 1 2274 0
ARM GAS  /tmp/ccMdFX4h.s 			page 134


 5375 0116 7B68     		ldr	r3, [r7, #4]
 5376 0118 5B6A     		ldr	r3, [r3, #36]
 5377 011a 03F08003 		and	r3, r3, #128
 5378 011e 002B     		cmp	r3, #0
 5379 0120 0AD0     		beq	.L308
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5380              		.loc 1 2277 0
 5381 0122 7B68     		ldr	r3, [r7, #4]
 5382 0124 1B68     		ldr	r3, [r3]
 5383 0126 7A68     		ldr	r2, [r7, #4]
 5384 0128 1268     		ldr	r2, [r2]
 5385 012a 5268     		ldr	r2, [r2, #4]
 5386 012c 22F40021 		bic	r1, r2, #524288
 5387 0130 7A68     		ldr	r2, [r7, #4]
 5388 0132 926C     		ldr	r2, [r2, #72]
 5389 0134 0A43     		orrs	r2, r2, r1
 5390 0136 5A60     		str	r2, [r3, #4]
 5391              	.L308:
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5392              		.loc 1 2279 0
 5393 0138 00BF     		nop
 5394 013a 0C37     		adds	r7, r7, #12
 5395              	.LCFI223:
 5396              		.cfi_def_cfa_offset 4
 5397 013c BD46     		mov	sp, r7
 5398              	.LCFI224:
 5399              		.cfi_def_cfa_register 13
 5400              		@ sp needed
 5401 013e 5DF8047B 		ldr	r7, [sp], #4
 5402              	.LCFI225:
 5403              		.cfi_restore 7
 5404              		.cfi_def_cfa_offset 0
 5405 0142 7047     		bx	lr
 5406              		.cfi_endproc
 5407              	.LFE166:
 5409              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5410              		.align	1
 5411              		.global	UART_CheckIdleState
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv4-sp-d16
 5417              	UART_CheckIdleState:
 5418              	.LFB167:
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5419              		.loc 1 2287 0
 5420              		.cfi_startproc
ARM GAS  /tmp/ccMdFX4h.s 			page 135


 5421              		@ args = 0, pretend = 0, frame = 16
 5422              		@ frame_needed = 1, uses_anonymous_args = 0
 5423 0000 80B5     		push	{r7, lr}
 5424              	.LCFI226:
 5425              		.cfi_def_cfa_offset 8
 5426              		.cfi_offset 7, -8
 5427              		.cfi_offset 14, -4
 5428 0002 86B0     		sub	sp, sp, #24
 5429              	.LCFI227:
 5430              		.cfi_def_cfa_offset 32
 5431 0004 02AF     		add	r7, sp, #8
 5432              	.LCFI228:
 5433              		.cfi_def_cfa 7, 24
 5434 0006 7860     		str	r0, [r7, #4]
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart = 0;
 5435              		.loc 1 2288 0
 5436 0008 0023     		movs	r3, #0
 5437 000a FB60     		str	r3, [r7, #12]
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 5438              		.loc 1 2291 0
 5439 000c 7B68     		ldr	r3, [r7, #4]
 5440 000e 0022     		movs	r2, #0
 5441 0010 DA66     		str	r2, [r3, #108]
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 5442              		.loc 1 2294 0
 5443 0012 FFF7FEFF 		bl	HAL_GetTick
 5444 0016 F860     		str	r0, [r7, #12]
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 5445              		.loc 1 2297 0
 5446 0018 7B68     		ldr	r3, [r7, #4]
 5447 001a 1B68     		ldr	r3, [r3]
 5448 001c 1B68     		ldr	r3, [r3]
 5449 001e 03F00803 		and	r3, r3, #8
 5450 0022 082B     		cmp	r3, #8
 5451 0024 0ED1     		bne	.L310
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 5452              		.loc 1 2300 0
 5453 0026 6FF07E43 		mvn	r3, #-33554432
 5454 002a 0093     		str	r3, [sp]
 5455 002c FB68     		ldr	r3, [r7, #12]
 5456 002e 0022     		movs	r2, #0
 5457 0030 4FF40011 		mov	r1, #2097152
 5458 0034 7868     		ldr	r0, [r7, #4]
 5459 0036 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5460 003a 0346     		mov	r3, r0
 5461 003c 002B     		cmp	r3, #0
 5462 003e 01D0     		beq	.L310
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
ARM GAS  /tmp/ccMdFX4h.s 			page 136


2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 5463              		.loc 1 2303 0
 5464 0040 0323     		movs	r3, #3
 5465 0042 22E0     		b	.L311
 5466              	.L310:
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 5467              		.loc 1 2307 0
 5468 0044 7B68     		ldr	r3, [r7, #4]
 5469 0046 1B68     		ldr	r3, [r3]
 5470 0048 1B68     		ldr	r3, [r3]
 5471 004a 03F00403 		and	r3, r3, #4
 5472 004e 042B     		cmp	r3, #4
 5473 0050 0ED1     		bne	.L312
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 5474              		.loc 1 2310 0
 5475 0052 6FF07E43 		mvn	r3, #-33554432
 5476 0056 0093     		str	r3, [sp]
 5477 0058 FB68     		ldr	r3, [r7, #12]
 5478 005a 0022     		movs	r2, #0
 5479 005c 4FF48001 		mov	r1, #4194304
 5480 0060 7868     		ldr	r0, [r7, #4]
 5481 0062 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5482 0066 0346     		mov	r3, r0
 5483 0068 002B     		cmp	r3, #0
 5484 006a 01D0     		beq	.L312
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 5485              		.loc 1 2313 0
 5486 006c 0323     		movs	r3, #3
 5487 006e 0CE0     		b	.L311
 5488              	.L312:
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 5489              		.loc 1 2318 0
 5490 0070 7B68     		ldr	r3, [r7, #4]
 5491 0072 2022     		movs	r2, #32
 5492 0074 83F86920 		strb	r2, [r3, #105]
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5493              		.loc 1 2319 0
 5494 0078 7B68     		ldr	r3, [r7, #4]
 5495 007a 2022     		movs	r2, #32
 5496 007c 83F86A20 		strb	r2, [r3, #106]
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Process Unlocked */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 5497              		.loc 1 2322 0
 5498 0080 7B68     		ldr	r3, [r7, #4]
 5499 0082 0022     		movs	r2, #0
ARM GAS  /tmp/ccMdFX4h.s 			page 137


 5500 0084 83F86820 		strb	r2, [r3, #104]
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 5501              		.loc 1 2324 0
 5502 0088 0023     		movs	r3, #0
 5503              	.L311:
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5504              		.loc 1 2325 0
 5505 008a 1846     		mov	r0, r3
 5506 008c 1037     		adds	r7, r7, #16
 5507              	.LCFI229:
 5508              		.cfi_def_cfa_offset 8
 5509 008e BD46     		mov	sp, r7
 5510              	.LCFI230:
 5511              		.cfi_def_cfa_register 13
 5512              		@ sp needed
 5513 0090 80BD     		pop	{r7, pc}
 5514              		.cfi_endproc
 5515              	.LFE167:
 5517              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 5518              		.align	1
 5519              		.global	UART_WaitOnFlagUntilTimeout
 5520              		.syntax unified
 5521              		.thumb
 5522              		.thumb_func
 5523              		.fpu fpv4-sp-d16
 5525              	UART_WaitOnFlagUntilTimeout:
 5526              	.LFB168:
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Flag Specifies the UART flag to check
2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Status Flag status (SET or RESET)
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5527              		.loc 1 2337 0
 5528              		.cfi_startproc
 5529              		@ args = 4, pretend = 0, frame = 16
 5530              		@ frame_needed = 1, uses_anonymous_args = 0
 5531 0000 80B5     		push	{r7, lr}
 5532              	.LCFI231:
 5533              		.cfi_def_cfa_offset 8
 5534              		.cfi_offset 7, -8
 5535              		.cfi_offset 14, -4
 5536 0002 84B0     		sub	sp, sp, #16
 5537              	.LCFI232:
 5538              		.cfi_def_cfa_offset 24
 5539 0004 00AF     		add	r7, sp, #0
 5540              	.LCFI233:
 5541              		.cfi_def_cfa_register 7
 5542 0006 F860     		str	r0, [r7, #12]
 5543 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccMdFX4h.s 			page 138


 5544 000a 3B60     		str	r3, [r7]
 5545 000c 1346     		mov	r3, r2
 5546 000e FB71     		strb	r3, [r7, #7]
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 5547              		.loc 1 2339 0
 5548 0010 2CE0     		b	.L314
 5549              	.L317:
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
 5550              		.loc 1 2342 0
 5551 0012 BB69     		ldr	r3, [r7, #24]
 5552 0014 B3F1FF3F 		cmp	r3, #-1
 5553 0018 28D0     		beq	.L314
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if((Timeout == 0) || ((HAL_GetTick()-Tickstart) > Timeout))
 5554              		.loc 1 2344 0
 5555 001a BB69     		ldr	r3, [r7, #24]
 5556 001c 002B     		cmp	r3, #0
 5557 001e 07D0     		beq	.L315
 5558              		.loc 1 2344 0 is_stmt 0 discriminator 1
 5559 0020 FFF7FEFF 		bl	HAL_GetTick
 5560 0024 0246     		mov	r2, r0
 5561 0026 3B68     		ldr	r3, [r7]
 5562 0028 D21A     		subs	r2, r2, r3
 5563 002a BB69     		ldr	r3, [r7, #24]
 5564 002c 9A42     		cmp	r2, r3
 5565 002e 1DD9     		bls	.L314
 5566              	.L315:
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 5567              		.loc 1 2347 0 is_stmt 1
 5568 0030 FB68     		ldr	r3, [r7, #12]
 5569 0032 1B68     		ldr	r3, [r3]
 5570 0034 FA68     		ldr	r2, [r7, #12]
 5571 0036 1268     		ldr	r2, [r2]
 5572 0038 1268     		ldr	r2, [r2]
 5573 003a 22F4D072 		bic	r2, r2, #416
 5574 003e 1A60     		str	r2, [r3]
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5575              		.loc 1 2348 0
 5576 0040 FB68     		ldr	r3, [r7, #12]
 5577 0042 1B68     		ldr	r3, [r3]
 5578 0044 FA68     		ldr	r2, [r7, #12]
 5579 0046 1268     		ldr	r2, [r2]
 5580 0048 9268     		ldr	r2, [r2, #8]
 5581 004a 22F00102 		bic	r2, r2, #1
 5582 004e 9A60     		str	r2, [r3, #8]
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 5583              		.loc 1 2350 0
 5584 0050 FB68     		ldr	r3, [r7, #12]
 5585 0052 2022     		movs	r2, #32
 5586 0054 83F86920 		strb	r2, [r3, #105]
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
ARM GAS  /tmp/ccMdFX4h.s 			page 139


 5587              		.loc 1 2351 0
 5588 0058 FB68     		ldr	r3, [r7, #12]
 5589 005a 2022     		movs	r2, #32
 5590 005c 83F86A20 		strb	r2, [r3, #106]
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Process Unlocked */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 5591              		.loc 1 2354 0
 5592 0060 FB68     		ldr	r3, [r7, #12]
 5593 0062 0022     		movs	r2, #0
 5594 0064 83F86820 		strb	r2, [r3, #104]
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 5595              		.loc 1 2355 0
 5596 0068 0323     		movs	r3, #3
 5597 006a 0FE0     		b	.L316
 5598              	.L314:
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 5599              		.loc 1 2339 0
 5600 006c FB68     		ldr	r3, [r7, #12]
 5601 006e 1B68     		ldr	r3, [r3]
 5602 0070 DA69     		ldr	r2, [r3, #28]
 5603 0072 BB68     		ldr	r3, [r7, #8]
 5604 0074 1A40     		ands	r2, r2, r3
 5605 0076 BB68     		ldr	r3, [r7, #8]
 5606 0078 9A42     		cmp	r2, r3
 5607 007a 0CBF     		ite	eq
 5608 007c 0123     		moveq	r3, #1
 5609 007e 0023     		movne	r3, #0
 5610 0080 DBB2     		uxtb	r3, r3
 5611 0082 1A46     		mov	r2, r3
 5612 0084 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5613 0086 9A42     		cmp	r2, r3
 5614 0088 C3D0     		beq	.L317
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 5615              		.loc 1 2359 0
 5616 008a 0023     		movs	r3, #0
 5617              	.L316:
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5618              		.loc 1 2360 0
 5619 008c 1846     		mov	r0, r3
 5620 008e 1037     		adds	r7, r7, #16
 5621              	.LCFI234:
 5622              		.cfi_def_cfa_offset 8
 5623 0090 BD46     		mov	sp, r7
 5624              	.LCFI235:
 5625              		.cfi_def_cfa_register 13
 5626              		@ sp needed
 5627 0092 80BD     		pop	{r7, pc}
 5628              		.cfi_endproc
 5629              	.LFE168:
 5631              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 5632              		.align	1
 5633              		.syntax unified
 5634              		.thumb
ARM GAS  /tmp/ccMdFX4h.s 			page 140


 5635              		.thumb_func
 5636              		.fpu fpv4-sp-d16
 5638              	UART_EndTxTransfer:
 5639              	.LFB169:
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5640              		.loc 1 2369 0
 5641              		.cfi_startproc
 5642              		@ args = 0, pretend = 0, frame = 8
 5643              		@ frame_needed = 1, uses_anonymous_args = 0
 5644              		@ link register save eliminated.
 5645 0000 80B4     		push	{r7}
 5646              	.LCFI236:
 5647              		.cfi_def_cfa_offset 4
 5648              		.cfi_offset 7, -4
 5649 0002 83B0     		sub	sp, sp, #12
 5650              	.LCFI237:
 5651              		.cfi_def_cfa_offset 16
 5652 0004 00AF     		add	r7, sp, #0
 5653              	.LCFI238:
 5654              		.cfi_def_cfa_register 7
 5655 0006 7860     		str	r0, [r7, #4]
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 5656              		.loc 1 2371 0
 5657 0008 7B68     		ldr	r3, [r7, #4]
 5658 000a 1B68     		ldr	r3, [r3]
 5659 000c 7A68     		ldr	r2, [r7, #4]
 5660 000e 1268     		ldr	r2, [r2]
 5661 0010 1268     		ldr	r2, [r2]
 5662 0012 22F0C002 		bic	r2, r2, #192
 5663 0016 1A60     		str	r2, [r3]
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 5664              		.loc 1 2374 0
 5665 0018 7B68     		ldr	r3, [r7, #4]
 5666 001a 2022     		movs	r2, #32
 5667 001c 83F86920 		strb	r2, [r3, #105]
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5668              		.loc 1 2375 0
 5669 0020 00BF     		nop
 5670 0022 0C37     		adds	r7, r7, #12
 5671              	.LCFI239:
 5672              		.cfi_def_cfa_offset 4
 5673 0024 BD46     		mov	sp, r7
 5674              	.LCFI240:
 5675              		.cfi_def_cfa_register 13
 5676              		@ sp needed
 5677 0026 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccMdFX4h.s 			page 141


 5678              	.LCFI241:
 5679              		.cfi_restore 7
 5680              		.cfi_def_cfa_offset 0
 5681 002a 7047     		bx	lr
 5682              		.cfi_endproc
 5683              	.LFE169:
 5685              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 5686              		.align	1
 5687              		.syntax unified
 5688              		.thumb
 5689              		.thumb_func
 5690              		.fpu fpv4-sp-d16
 5692              	UART_EndRxTransfer:
 5693              	.LFB170:
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5694              		.loc 1 2384 0
 5695              		.cfi_startproc
 5696              		@ args = 0, pretend = 0, frame = 8
 5697              		@ frame_needed = 1, uses_anonymous_args = 0
 5698              		@ link register save eliminated.
 5699 0000 80B4     		push	{r7}
 5700              	.LCFI242:
 5701              		.cfi_def_cfa_offset 4
 5702              		.cfi_offset 7, -4
 5703 0002 83B0     		sub	sp, sp, #12
 5704              	.LCFI243:
 5705              		.cfi_def_cfa_offset 16
 5706 0004 00AF     		add	r7, sp, #0
 5707              	.LCFI244:
 5708              		.cfi_def_cfa_register 7
 5709 0006 7860     		str	r0, [r7, #4]
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5710              		.loc 1 2386 0
 5711 0008 7B68     		ldr	r3, [r7, #4]
 5712 000a 1B68     		ldr	r3, [r3]
 5713 000c 7A68     		ldr	r2, [r7, #4]
 5714 000e 1268     		ldr	r2, [r2]
 5715 0010 1268     		ldr	r2, [r2]
 5716 0012 22F49072 		bic	r2, r2, #288
 5717 0016 1A60     		str	r2, [r3]
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5718              		.loc 1 2387 0
 5719 0018 7B68     		ldr	r3, [r7, #4]
 5720 001a 1B68     		ldr	r3, [r3]
 5721 001c 7A68     		ldr	r2, [r7, #4]
 5722 001e 1268     		ldr	r2, [r2]
 5723 0020 9268     		ldr	r2, [r2, #8]
 5724 0022 22F00102 		bic	r2, r2, #1
ARM GAS  /tmp/ccMdFX4h.s 			page 142


 5725 0026 9A60     		str	r2, [r3, #8]
2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5726              		.loc 1 2390 0
 5727 0028 7B68     		ldr	r3, [r7, #4]
 5728 002a 2022     		movs	r2, #32
 5729 002c 83F86A20 		strb	r2, [r3, #106]
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5730              		.loc 1 2391 0
 5731 0030 00BF     		nop
 5732 0032 0C37     		adds	r7, r7, #12
 5733              	.LCFI245:
 5734              		.cfi_def_cfa_offset 4
 5735 0034 BD46     		mov	sp, r7
 5736              	.LCFI246:
 5737              		.cfi_def_cfa_register 13
 5738              		@ sp needed
 5739 0036 5DF8047B 		ldr	r7, [sp], #4
 5740              	.LCFI247:
 5741              		.cfi_restore 7
 5742              		.cfi_def_cfa_offset 0
 5743 003a 7047     		bx	lr
 5744              		.cfi_endproc
 5745              	.LFE170:
 5747              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 5748              		.align	1
 5749              		.syntax unified
 5750              		.thumb
 5751              		.thumb_func
 5752              		.fpu fpv4-sp-d16
 5754              	UART_DMATransmitCplt:
 5755              	.LFB171:
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5756              		.loc 1 2400 0
 5757              		.cfi_startproc
 5758              		@ args = 0, pretend = 0, frame = 16
 5759              		@ frame_needed = 1, uses_anonymous_args = 0
 5760 0000 80B5     		push	{r7, lr}
 5761              	.LCFI248:
 5762              		.cfi_def_cfa_offset 8
 5763              		.cfi_offset 7, -8
 5764              		.cfi_offset 14, -4
 5765 0002 84B0     		sub	sp, sp, #16
 5766              	.LCFI249:
 5767              		.cfi_def_cfa_offset 24
 5768 0004 00AF     		add	r7, sp, #0
 5769              	.LCFI250:
 5770              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccMdFX4h.s 			page 143


 5771 0006 7860     		str	r0, [r7, #4]
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5772              		.loc 1 2401 0
 5773 0008 7B68     		ldr	r3, [r7, #4]
 5774 000a 9B6A     		ldr	r3, [r3, #40]
 5775 000c FB60     		str	r3, [r7, #12]
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 5776              		.loc 1 2404 0
 5777 000e 7B68     		ldr	r3, [r7, #4]
 5778 0010 1B68     		ldr	r3, [r3]
 5779 0012 1B68     		ldr	r3, [r3]
 5780 0014 03F02003 		and	r3, r3, #32
 5781 0018 002B     		cmp	r3, #0
 5782 001a 14D1     		bne	.L321
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0;
 5783              		.loc 1 2406 0
 5784 001c FB68     		ldr	r3, [r7, #12]
 5785 001e 0022     		movs	r2, #0
 5786 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 5787              		.loc 1 2410 0
 5788 0024 FB68     		ldr	r3, [r7, #12]
 5789 0026 1B68     		ldr	r3, [r3]
 5790 0028 FA68     		ldr	r2, [r7, #12]
 5791 002a 1268     		ldr	r2, [r2]
 5792 002c 9268     		ldr	r2, [r2, #8]
 5793 002e 22F08002 		bic	r2, r2, #128
 5794 0032 9A60     		str	r2, [r3, #8]
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 5795              		.loc 1 2413 0
 5796 0034 FB68     		ldr	r3, [r7, #12]
 5797 0036 1B68     		ldr	r3, [r3]
 5798 0038 FA68     		ldr	r2, [r7, #12]
 5799 003a 1268     		ldr	r2, [r2]
 5800 003c 1268     		ldr	r2, [r2]
 5801 003e 42F04002 		orr	r2, r2, #64
 5802 0042 1A60     		str	r2, [r3]
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5803              		.loc 1 2421 0
 5804 0044 02E0     		b	.L323
 5805              	.L321:
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccMdFX4h.s 			page 144


 5806              		.loc 1 2418 0
 5807 0046 F868     		ldr	r0, [r7, #12]
 5808 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 5809              	.L323:
 5810              		.loc 1 2421 0
 5811 004c 00BF     		nop
 5812 004e 1037     		adds	r7, r7, #16
 5813              	.LCFI251:
 5814              		.cfi_def_cfa_offset 8
 5815 0050 BD46     		mov	sp, r7
 5816              	.LCFI252:
 5817              		.cfi_def_cfa_register 13
 5818              		@ sp needed
 5819 0052 80BD     		pop	{r7, pc}
 5820              		.cfi_endproc
 5821              	.LFE171:
 5823              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 5824              		.align	1
 5825              		.syntax unified
 5826              		.thumb
 5827              		.thumb_func
 5828              		.fpu fpv4-sp-d16
 5830              	UART_DMATxHalfCplt:
 5831              	.LFB172:
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5832              		.loc 1 2429 0
 5833              		.cfi_startproc
 5834              		@ args = 0, pretend = 0, frame = 16
 5835              		@ frame_needed = 1, uses_anonymous_args = 0
 5836 0000 80B5     		push	{r7, lr}
 5837              	.LCFI253:
 5838              		.cfi_def_cfa_offset 8
 5839              		.cfi_offset 7, -8
 5840              		.cfi_offset 14, -4
 5841 0002 84B0     		sub	sp, sp, #16
 5842              	.LCFI254:
 5843              		.cfi_def_cfa_offset 24
 5844 0004 00AF     		add	r7, sp, #0
 5845              	.LCFI255:
 5846              		.cfi_def_cfa_register 7
 5847 0006 7860     		str	r0, [r7, #4]
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5848              		.loc 1 2430 0
 5849 0008 7B68     		ldr	r3, [r7, #4]
 5850 000a 9B6A     		ldr	r3, [r3, #40]
 5851 000c FB60     		str	r3, [r7, #12]
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 5852              		.loc 1 2432 0
 5853 000e F868     		ldr	r0, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 145


 5854 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5855              		.loc 1 2433 0
 5856 0014 00BF     		nop
 5857 0016 1037     		adds	r7, r7, #16
 5858              	.LCFI256:
 5859              		.cfi_def_cfa_offset 8
 5860 0018 BD46     		mov	sp, r7
 5861              	.LCFI257:
 5862              		.cfi_def_cfa_register 13
 5863              		@ sp needed
 5864 001a 80BD     		pop	{r7, pc}
 5865              		.cfi_endproc
 5866              	.LFE172:
 5868              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 5869              		.align	1
 5870              		.syntax unified
 5871              		.thumb
 5872              		.thumb_func
 5873              		.fpu fpv4-sp-d16
 5875              	UART_DMAReceiveCplt:
 5876              	.LFB173:
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5877              		.loc 1 2441 0
 5878              		.cfi_startproc
 5879              		@ args = 0, pretend = 0, frame = 16
 5880              		@ frame_needed = 1, uses_anonymous_args = 0
 5881 0000 80B5     		push	{r7, lr}
 5882              	.LCFI258:
 5883              		.cfi_def_cfa_offset 8
 5884              		.cfi_offset 7, -8
 5885              		.cfi_offset 14, -4
 5886 0002 84B0     		sub	sp, sp, #16
 5887              	.LCFI259:
 5888              		.cfi_def_cfa_offset 24
 5889 0004 00AF     		add	r7, sp, #0
 5890              	.LCFI260:
 5891              		.cfi_def_cfa_register 7
 5892 0006 7860     		str	r0, [r7, #4]
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5893              		.loc 1 2442 0
 5894 0008 7B68     		ldr	r3, [r7, #4]
 5895 000a 9B6A     		ldr	r3, [r3, #40]
 5896 000c FB60     		str	r3, [r7, #12]
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ( HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC) )
 5897              		.loc 1 2445 0
 5898 000e 7B68     		ldr	r3, [r7, #4]
 5899 0010 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccMdFX4h.s 			page 146


 5900 0012 1B68     		ldr	r3, [r3]
 5901 0014 03F02003 		and	r3, r3, #32
 5902 0018 002B     		cmp	r3, #0
 5903 001a 1FD1     		bne	.L326
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0;
 5904              		.loc 1 2447 0
 5905 001c FB68     		ldr	r3, [r7, #12]
 5906 001e 0022     		movs	r2, #0
 5907 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5908              		.loc 1 2450 0
 5909 0024 FB68     		ldr	r3, [r7, #12]
 5910 0026 1B68     		ldr	r3, [r3]
 5911 0028 FA68     		ldr	r2, [r7, #12]
 5912 002a 1268     		ldr	r2, [r2]
 5913 002c 1268     		ldr	r2, [r2]
 5914 002e 22F48072 		bic	r2, r2, #256
 5915 0032 1A60     		str	r2, [r3]
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5916              		.loc 1 2451 0
 5917 0034 FB68     		ldr	r3, [r7, #12]
 5918 0036 1B68     		ldr	r3, [r3]
 5919 0038 FA68     		ldr	r2, [r7, #12]
 5920 003a 1268     		ldr	r2, [r2]
 5921 003c 9268     		ldr	r2, [r2, #8]
 5922 003e 22F00102 		bic	r2, r2, #1
 5923 0042 9A60     		str	r2, [r3, #8]
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5924              		.loc 1 2455 0
 5925 0044 FB68     		ldr	r3, [r7, #12]
 5926 0046 1B68     		ldr	r3, [r3]
 5927 0048 FA68     		ldr	r2, [r7, #12]
 5928 004a 1268     		ldr	r2, [r2]
 5929 004c 9268     		ldr	r2, [r2, #8]
 5930 004e 22F04002 		bic	r2, r2, #64
 5931 0052 9A60     		str	r2, [r3, #8]
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5932              		.loc 1 2458 0
 5933 0054 FB68     		ldr	r3, [r7, #12]
 5934 0056 2022     		movs	r2, #32
 5935 0058 83F86A20 		strb	r2, [r3, #106]
 5936              	.L326:
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 5937              		.loc 1 2461 0
 5938 005c F868     		ldr	r0, [r7, #12]
 5939 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccMdFX4h.s 			page 147


 5940              		.loc 1 2462 0
 5941 0062 00BF     		nop
 5942 0064 1037     		adds	r7, r7, #16
 5943              	.LCFI261:
 5944              		.cfi_def_cfa_offset 8
 5945 0066 BD46     		mov	sp, r7
 5946              	.LCFI262:
 5947              		.cfi_def_cfa_register 13
 5948              		@ sp needed
 5949 0068 80BD     		pop	{r7, pc}
 5950              		.cfi_endproc
 5951              	.LFE173:
 5953              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 5954              		.align	1
 5955              		.syntax unified
 5956              		.thumb
 5957              		.thumb_func
 5958              		.fpu fpv4-sp-d16
 5960              	UART_DMARxHalfCplt:
 5961              	.LFB174:
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5962              		.loc 1 2470 0
 5963              		.cfi_startproc
 5964              		@ args = 0, pretend = 0, frame = 16
 5965              		@ frame_needed = 1, uses_anonymous_args = 0
 5966 0000 80B5     		push	{r7, lr}
 5967              	.LCFI263:
 5968              		.cfi_def_cfa_offset 8
 5969              		.cfi_offset 7, -8
 5970              		.cfi_offset 14, -4
 5971 0002 84B0     		sub	sp, sp, #16
 5972              	.LCFI264:
 5973              		.cfi_def_cfa_offset 24
 5974 0004 00AF     		add	r7, sp, #0
 5975              	.LCFI265:
 5976              		.cfi_def_cfa_register 7
 5977 0006 7860     		str	r0, [r7, #4]
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 5978              		.loc 1 2471 0
 5979 0008 7B68     		ldr	r3, [r7, #4]
 5980 000a 9B6A     		ldr	r3, [r3, #40]
 5981 000c FB60     		str	r3, [r7, #12]
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 5982              		.loc 1 2473 0
 5983 000e F868     		ldr	r0, [r7, #12]
 5984 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5985              		.loc 1 2474 0
 5986 0014 00BF     		nop
ARM GAS  /tmp/ccMdFX4h.s 			page 148


 5987 0016 1037     		adds	r7, r7, #16
 5988              	.LCFI266:
 5989              		.cfi_def_cfa_offset 8
 5990 0018 BD46     		mov	sp, r7
 5991              	.LCFI267:
 5992              		.cfi_def_cfa_register 13
 5993              		@ sp needed
 5994 001a 80BD     		pop	{r7, pc}
 5995              		.cfi_endproc
 5996              	.LFE174:
 5998              		.section	.text.UART_DMAError,"ax",%progbits
 5999              		.align	1
 6000              		.syntax unified
 6001              		.thumb
 6002              		.thumb_func
 6003              		.fpu fpv4-sp-d16
 6005              	UART_DMAError:
 6006              	.LFB175:
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6007              		.loc 1 2482 0
 6008              		.cfi_startproc
 6009              		@ args = 0, pretend = 0, frame = 16
 6010              		@ frame_needed = 1, uses_anonymous_args = 0
 6011 0000 80B5     		push	{r7, lr}
 6012              	.LCFI268:
 6013              		.cfi_def_cfa_offset 8
 6014              		.cfi_offset 7, -8
 6015              		.cfi_offset 14, -4
 6016 0002 84B0     		sub	sp, sp, #16
 6017              	.LCFI269:
 6018              		.cfi_def_cfa_offset 24
 6019 0004 00AF     		add	r7, sp, #0
 6020              	.LCFI270:
 6021              		.cfi_def_cfa_register 7
 6022 0006 7860     		str	r0, [r7, #4]
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 6023              		.loc 1 2483 0
 6024 0008 7B68     		ldr	r3, [r7, #4]
 6025 000a 9B6A     		ldr	r3, [r3, #40]
 6026 000c FB60     		str	r3, [r7, #12]
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (  (huart->gState == HAL_UART_STATE_BUSY_TX)
 6027              		.loc 1 2486 0
 6028 000e FB68     		ldr	r3, [r7, #12]
 6029 0010 93F86930 		ldrb	r3, [r3, #105]
 6030 0014 DBB2     		uxtb	r3, r3
 6031 0016 212B     		cmp	r3, #33
 6032 0018 0DD1     		bne	.L329
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) )
ARM GAS  /tmp/ccMdFX4h.s 			page 149


 6033              		.loc 1 2487 0
 6034 001a FB68     		ldr	r3, [r7, #12]
 6035 001c 1B68     		ldr	r3, [r3]
 6036 001e 9B68     		ldr	r3, [r3, #8]
 6037 0020 03F08003 		and	r3, r3, #128
 6038 0024 802B     		cmp	r3, #128
 6039 0026 06D1     		bne	.L329
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0;
 6040              		.loc 1 2489 0
 6041 0028 FB68     		ldr	r3, [r7, #12]
 6042 002a 0022     		movs	r2, #0
 6043 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6044              		.loc 1 2490 0
 6045 0030 F868     		ldr	r0, [r7, #12]
 6046 0032 FFF7FEFF 		bl	UART_EndTxTransfer
 6047              	.L329:
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (  (huart->RxState == HAL_UART_STATE_BUSY_RX)
 6048              		.loc 1 2494 0
 6049 0036 FB68     		ldr	r3, [r7, #12]
 6050 0038 93F86A30 		ldrb	r3, [r3, #106]
 6051 003c DBB2     		uxtb	r3, r3
 6052 003e 222B     		cmp	r3, #34
 6053 0040 0DD1     		bne	.L330
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       &&(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) )
 6054              		.loc 1 2495 0
 6055 0042 FB68     		ldr	r3, [r7, #12]
 6056 0044 1B68     		ldr	r3, [r3]
 6057 0046 9B68     		ldr	r3, [r3, #8]
 6058 0048 03F04003 		and	r3, r3, #64
 6059 004c 402B     		cmp	r3, #64
 6060 004e 06D1     		bne	.L330
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0;
 6061              		.loc 1 2497 0
 6062 0050 FB68     		ldr	r3, [r7, #12]
 6063 0052 0022     		movs	r2, #0
 6064 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6065              		.loc 1 2498 0
 6066 0058 F868     		ldr	r0, [r7, #12]
 6067 005a FFF7FEFF 		bl	UART_EndRxTransfer
 6068              	.L330:
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6069              		.loc 1 2501 0
 6070 005e FB68     		ldr	r3, [r7, #12]
 6071 0060 DB6E     		ldr	r3, [r3, #108]
 6072 0062 43F01002 		orr	r2, r3, #16
 6073 0066 FB68     		ldr	r3, [r7, #12]
 6074 0068 DA66     		str	r2, [r3, #108]
2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
ARM GAS  /tmp/ccMdFX4h.s 			page 150


 6075              		.loc 1 2502 0
 6076 006a F868     		ldr	r0, [r7, #12]
 6077 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6078              		.loc 1 2503 0
 6079 0070 00BF     		nop
 6080 0072 1037     		adds	r7, r7, #16
 6081              	.LCFI271:
 6082              		.cfi_def_cfa_offset 8
 6083 0074 BD46     		mov	sp, r7
 6084              	.LCFI272:
 6085              		.cfi_def_cfa_register 13
 6086              		@ sp needed
 6087 0076 80BD     		pop	{r7, pc}
 6088              		.cfi_endproc
 6089              	.LFE175:
 6091              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6092              		.align	1
 6093              		.syntax unified
 6094              		.thumb
 6095              		.thumb_func
 6096              		.fpu fpv4-sp-d16
 6098              	UART_DMAAbortOnError:
 6099              	.LFB176:
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6100              		.loc 1 2512 0
 6101              		.cfi_startproc
 6102              		@ args = 0, pretend = 0, frame = 16
 6103              		@ frame_needed = 1, uses_anonymous_args = 0
 6104 0000 80B5     		push	{r7, lr}
 6105              	.LCFI273:
 6106              		.cfi_def_cfa_offset 8
 6107              		.cfi_offset 7, -8
 6108              		.cfi_offset 14, -4
 6109 0002 84B0     		sub	sp, sp, #16
 6110              	.LCFI274:
 6111              		.cfi_def_cfa_offset 24
 6112 0004 00AF     		add	r7, sp, #0
 6113              	.LCFI275:
 6114              		.cfi_def_cfa_register 7
 6115 0006 7860     		str	r0, [r7, #4]
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 6116              		.loc 1 2513 0
 6117 0008 7B68     		ldr	r3, [r7, #4]
 6118 000a 9B6A     		ldr	r3, [r3, #40]
 6119 000c FB60     		str	r3, [r7, #12]
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0;
 6120              		.loc 1 2514 0
 6121 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccMdFX4h.s 			page 151


 6122 0010 0022     		movs	r2, #0
 6123 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0;
 6124              		.loc 1 2515 0
 6125 0016 FB68     		ldr	r3, [r7, #12]
 6126 0018 0022     		movs	r2, #0
 6127 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6128              		.loc 1 2517 0
 6129 001e F868     		ldr	r0, [r7, #12]
 6130 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6131              		.loc 1 2518 0
 6132 0024 00BF     		nop
 6133 0026 1037     		adds	r7, r7, #16
 6134              	.LCFI276:
 6135              		.cfi_def_cfa_offset 8
 6136 0028 BD46     		mov	sp, r7
 6137              	.LCFI277:
 6138              		.cfi_def_cfa_register 13
 6139              		@ sp needed
 6140 002a 80BD     		pop	{r7, pc}
 6141              		.cfi_endproc
 6142              	.LFE176:
 6144              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 6145              		.align	1
 6146              		.syntax unified
 6147              		.thumb
 6148              		.thumb_func
 6149              		.fpu fpv4-sp-d16
 6151              	UART_DMATxAbortCallback:
 6152              	.LFB177:
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6153              		.loc 1 2529 0
 6154              		.cfi_startproc
 6155              		@ args = 0, pretend = 0, frame = 16
 6156              		@ frame_needed = 1, uses_anonymous_args = 0
 6157 0000 80B5     		push	{r7, lr}
 6158              	.LCFI278:
 6159              		.cfi_def_cfa_offset 8
 6160              		.cfi_offset 7, -8
 6161              		.cfi_offset 14, -4
 6162 0002 84B0     		sub	sp, sp, #16
 6163              	.LCFI279:
 6164              		.cfi_def_cfa_offset 24
 6165 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccMdFX4h.s 			page 152


 6166              	.LCFI280:
 6167              		.cfi_def_cfa_register 7
 6168 0006 7860     		str	r0, [r7, #4]
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 6169              		.loc 1 2530 0
 6170 0008 7B68     		ldr	r3, [r7, #4]
 6171 000a 9B6A     		ldr	r3, [r3, #40]
 6172 000c FB60     		str	r3, [r7, #12]
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 6173              		.loc 1 2532 0
 6174 000e FB68     		ldr	r3, [r7, #12]
 6175 0010 1B6E     		ldr	r3, [r3, #96]
 6176 0012 0022     		movs	r2, #0
 6177 0014 9A63     		str	r2, [r3, #56]
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
 6178              		.loc 1 2535 0
 6179 0016 FB68     		ldr	r3, [r7, #12]
 6180 0018 5B6E     		ldr	r3, [r3, #100]
 6181 001a 002B     		cmp	r3, #0
 6182 001c 04D0     		beq	.L333
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
 6183              		.loc 1 2537 0
 6184 001e FB68     		ldr	r3, [r7, #12]
 6185 0020 5B6E     		ldr	r3, [r3, #100]
 6186 0022 9B6B     		ldr	r3, [r3, #56]
 6187 0024 002B     		cmp	r3, #0
 6188 0026 1AD1     		bne	.L335
 6189              	.L333:
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0;
 6190              		.loc 1 2544 0
 6191 0028 FB68     		ldr	r3, [r7, #12]
 6192 002a 0022     		movs	r2, #0
 6193 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0;
 6194              		.loc 1 2545 0
 6195 0030 FB68     		ldr	r3, [r7, #12]
 6196 0032 0022     		movs	r2, #0
 6197 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6198              		.loc 1 2548 0
 6199 0038 FB68     		ldr	r3, [r7, #12]
 6200 003a 0022     		movs	r2, #0
 6201 003c DA66     		str	r2, [r3, #108]
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
ARM GAS  /tmp/ccMdFX4h.s 			page 153


2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6202              		.loc 1 2551 0
 6203 003e FB68     		ldr	r3, [r7, #12]
 6204 0040 1B68     		ldr	r3, [r3]
 6205 0042 0F22     		movs	r2, #15
 6206 0044 1A62     		str	r2, [r3, #32]
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6207              		.loc 1 2554 0
 6208 0046 FB68     		ldr	r3, [r7, #12]
 6209 0048 2022     		movs	r2, #32
 6210 004a 83F86920 		strb	r2, [r3, #105]
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6211              		.loc 1 2555 0
 6212 004e FB68     		ldr	r3, [r7, #12]
 6213 0050 2022     		movs	r2, #32
 6214 0052 83F86A20 		strb	r2, [r3, #106]
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6215              		.loc 1 2558 0
 6216 0056 F868     		ldr	r0, [r7, #12]
 6217 0058 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6218 005c 00E0     		b	.L332
 6219              	.L335:
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6220              		.loc 1 2539 0
 6221 005e 00BF     		nop
 6222              	.L332:
2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6223              		.loc 1 2559 0
 6224 0060 1037     		adds	r7, r7, #16
 6225              	.LCFI281:
 6226              		.cfi_def_cfa_offset 8
 6227 0062 BD46     		mov	sp, r7
 6228              	.LCFI282:
 6229              		.cfi_def_cfa_register 13
 6230              		@ sp needed
 6231 0064 80BD     		pop	{r7, pc}
 6232              		.cfi_endproc
 6233              	.LFE177:
 6235              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 6236              		.align	1
 6237              		.syntax unified
 6238              		.thumb
 6239              		.thumb_func
 6240              		.fpu fpv4-sp-d16
 6242              	UART_DMARxAbortCallback:
 6243              	.LFB178:
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
ARM GAS  /tmp/ccMdFX4h.s 			page 154


2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6244              		.loc 1 2571 0
 6245              		.cfi_startproc
 6246              		@ args = 0, pretend = 0, frame = 16
 6247              		@ frame_needed = 1, uses_anonymous_args = 0
 6248 0000 80B5     		push	{r7, lr}
 6249              	.LCFI283:
 6250              		.cfi_def_cfa_offset 8
 6251              		.cfi_offset 7, -8
 6252              		.cfi_offset 14, -4
 6253 0002 84B0     		sub	sp, sp, #16
 6254              	.LCFI284:
 6255              		.cfi_def_cfa_offset 24
 6256 0004 00AF     		add	r7, sp, #0
 6257              	.LCFI285:
 6258              		.cfi_def_cfa_register 7
 6259 0006 7860     		str	r0, [r7, #4]
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef* )(hdma->Parent);
 6260              		.loc 1 2572 0
 6261 0008 7B68     		ldr	r3, [r7, #4]
 6262 000a 9B6A     		ldr	r3, [r3, #40]
 6263 000c FB60     		str	r3, [r7, #12]
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6264              		.loc 1 2574 0
 6265 000e FB68     		ldr	r3, [r7, #12]
 6266 0010 5B6E     		ldr	r3, [r3, #100]
 6267 0012 0022     		movs	r2, #0
 6268 0014 9A63     		str	r2, [r3, #56]
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
 6269              		.loc 1 2577 0
 6270 0016 FB68     		ldr	r3, [r7, #12]
 6271 0018 1B6E     		ldr	r3, [r3, #96]
 6272 001a 002B     		cmp	r3, #0
 6273 001c 04D0     		beq	.L337
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
 6274              		.loc 1 2579 0
 6275 001e FB68     		ldr	r3, [r7, #12]
 6276 0020 1B6E     		ldr	r3, [r3, #96]
 6277 0022 9B6B     		ldr	r3, [r3, #56]
 6278 0024 002B     		cmp	r3, #0
 6279 0026 1AD1     		bne	.L339
 6280              	.L337:
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0;
ARM GAS  /tmp/ccMdFX4h.s 			page 155


 6281              		.loc 1 2586 0
 6282 0028 FB68     		ldr	r3, [r7, #12]
 6283 002a 0022     		movs	r2, #0
 6284 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0;
 6285              		.loc 1 2587 0
 6286 0030 FB68     		ldr	r3, [r7, #12]
 6287 0032 0022     		movs	r2, #0
 6288 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6289              		.loc 1 2590 0
 6290 0038 FB68     		ldr	r3, [r7, #12]
 6291 003a 0022     		movs	r2, #0
 6292 003c DA66     		str	r2, [r3, #108]
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6293              		.loc 1 2593 0
 6294 003e FB68     		ldr	r3, [r7, #12]
 6295 0040 1B68     		ldr	r3, [r3]
 6296 0042 0F22     		movs	r2, #15
 6297 0044 1A62     		str	r2, [r3, #32]
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6298              		.loc 1 2596 0
 6299 0046 FB68     		ldr	r3, [r7, #12]
 6300 0048 2022     		movs	r2, #32
 6301 004a 83F86920 		strb	r2, [r3, #105]
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6302              		.loc 1 2597 0
 6303 004e FB68     		ldr	r3, [r7, #12]
 6304 0050 2022     		movs	r2, #32
 6305 0052 83F86A20 		strb	r2, [r3, #106]
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6306              		.loc 1 2600 0
 6307 0056 F868     		ldr	r0, [r7, #12]
 6308 0058 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6309 005c 00E0     		b	.L336
 6310              	.L339:
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6311              		.loc 1 2581 0
 6312 005e 00BF     		nop
 6313              	.L336:
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6314              		.loc 1 2601 0
 6315 0060 1037     		adds	r7, r7, #16
 6316              	.LCFI286:
 6317              		.cfi_def_cfa_offset 8
 6318 0062 BD46     		mov	sp, r7
 6319              	.LCFI287:
 6320              		.cfi_def_cfa_register 13
 6321              		@ sp needed
ARM GAS  /tmp/ccMdFX4h.s 			page 156


 6322 0064 80BD     		pop	{r7, pc}
 6323              		.cfi_endproc
 6324              	.LFE178:
 6326              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 6327              		.align	1
 6328              		.syntax unified
 6329              		.thumb
 6330              		.thumb_func
 6331              		.fpu fpv4-sp-d16
 6333              	UART_DMATxOnlyAbortCallback:
 6334              	.LFB179:
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6335              		.loc 1 2613 0
 6336              		.cfi_startproc
 6337              		@ args = 0, pretend = 0, frame = 16
 6338              		@ frame_needed = 1, uses_anonymous_args = 0
 6339 0000 80B5     		push	{r7, lr}
 6340              	.LCFI288:
 6341              		.cfi_def_cfa_offset 8
 6342              		.cfi_offset 7, -8
 6343              		.cfi_offset 14, -4
 6344 0002 84B0     		sub	sp, sp, #16
 6345              	.LCFI289:
 6346              		.cfi_def_cfa_offset 24
 6347 0004 00AF     		add	r7, sp, #0
 6348              	.LCFI290:
 6349              		.cfi_def_cfa_register 7
 6350 0006 7860     		str	r0, [r7, #4]
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)(hdma->Parent);
 6351              		.loc 1 2614 0
 6352 0008 7B68     		ldr	r3, [r7, #4]
 6353 000a 9B6A     		ldr	r3, [r3, #40]
 6354 000c FB60     		str	r3, [r7, #12]
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0;
 6355              		.loc 1 2616 0
 6356 000e FB68     		ldr	r3, [r7, #12]
 6357 0010 0022     		movs	r2, #0
 6358 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6359              		.loc 1 2619 0
 6360 0016 FB68     		ldr	r3, [r7, #12]
 6361 0018 2022     		movs	r2, #32
 6362 001a 83F86920 		strb	r2, [r3, #105]
ARM GAS  /tmp/ccMdFX4h.s 			page 157


2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 6363              		.loc 1 2622 0
 6364 001e F868     		ldr	r0, [r7, #12]
 6365 0020 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6366              		.loc 1 2623 0
 6367 0024 00BF     		nop
 6368 0026 1037     		adds	r7, r7, #16
 6369              	.LCFI291:
 6370              		.cfi_def_cfa_offset 8
 6371 0028 BD46     		mov	sp, r7
 6372              	.LCFI292:
 6373              		.cfi_def_cfa_register 13
 6374              		@ sp needed
 6375 002a 80BD     		pop	{r7, pc}
 6376              		.cfi_endproc
 6377              	.LFE179:
 6379              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 6380              		.align	1
 6381              		.syntax unified
 6382              		.thumb
 6383              		.thumb_func
 6384              		.fpu fpv4-sp-d16
 6386              	UART_DMARxOnlyAbortCallback:
 6387              	.LFB180:
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6388              		.loc 1 2634 0
 6389              		.cfi_startproc
 6390              		@ args = 0, pretend = 0, frame = 16
 6391              		@ frame_needed = 1, uses_anonymous_args = 0
 6392 0000 80B5     		push	{r7, lr}
 6393              	.LCFI293:
 6394              		.cfi_def_cfa_offset 8
 6395              		.cfi_offset 7, -8
 6396              		.cfi_offset 14, -4
 6397 0002 84B0     		sub	sp, sp, #16
 6398              	.LCFI294:
 6399              		.cfi_def_cfa_offset 24
 6400 0004 00AF     		add	r7, sp, #0
 6401              	.LCFI295:
 6402              		.cfi_def_cfa_register 7
 6403 0006 7860     		str	r0, [r7, #4]
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 6404              		.loc 1 2635 0
 6405 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 158


 6406 000a 9B6A     		ldr	r3, [r3, #40]
 6407 000c FB60     		str	r3, [r7, #12]
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0;
 6408              		.loc 1 2637 0
 6409 000e FB68     		ldr	r3, [r7, #12]
 6410 0010 0022     		movs	r2, #0
 6411 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6412              		.loc 1 2640 0
 6413 0016 FB68     		ldr	r3, [r7, #12]
 6414 0018 1B68     		ldr	r3, [r3]
 6415 001a 0F22     		movs	r2, #15
 6416 001c 1A62     		str	r2, [r3, #32]
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6417              		.loc 1 2643 0
 6418 001e FB68     		ldr	r3, [r7, #12]
 6419 0020 2022     		movs	r2, #32
 6420 0022 83F86A20 		strb	r2, [r3, #106]
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 6421              		.loc 1 2646 0
 6422 0026 F868     		ldr	r0, [r7, #12]
 6423 0028 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6424              		.loc 1 2647 0
 6425 002c 00BF     		nop
 6426 002e 1037     		adds	r7, r7, #16
 6427              	.LCFI296:
 6428              		.cfi_def_cfa_offset 8
 6429 0030 BD46     		mov	sp, r7
 6430              	.LCFI297:
 6431              		.cfi_def_cfa_register 13
 6432              		@ sp needed
 6433 0032 80BD     		pop	{r7, pc}
 6434              		.cfi_endproc
 6435              	.LFE180:
 6437              		.section	.text.UART_Transmit_IT,"ax",%progbits
 6438              		.align	1
 6439              		.syntax unified
 6440              		.thumb
 6441              		.thumb_func
 6442              		.fpu fpv4-sp-d16
 6444              	UART_Transmit_IT:
 6445              	.LFB181:
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Send an amount of data in interrupt mode.
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccMdFX4h.s 			page 159


2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6446              		.loc 1 2657 0
 6447              		.cfi_startproc
 6448              		@ args = 0, pretend = 0, frame = 16
 6449              		@ frame_needed = 1, uses_anonymous_args = 0
 6450              		@ link register save eliminated.
 6451 0000 80B4     		push	{r7}
 6452              	.LCFI298:
 6453              		.cfi_def_cfa_offset 4
 6454              		.cfi_offset 7, -4
 6455 0002 85B0     		sub	sp, sp, #20
 6456              	.LCFI299:
 6457              		.cfi_def_cfa_offset 24
 6458 0004 00AF     		add	r7, sp, #0
 6459              	.LCFI300:
 6460              		.cfi_def_cfa_register 7
 6461 0006 7860     		str	r0, [r7, #4]
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 6462              		.loc 1 2661 0
 6463 0008 7B68     		ldr	r3, [r7, #4]
 6464 000a 93F86930 		ldrb	r3, [r3, #105]
 6465 000e DBB2     		uxtb	r3, r3
 6466 0010 212B     		cmp	r3, #33
 6467 0012 46D1     		bne	.L343
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(huart->TxXferCount == 0)
 6468              		.loc 1 2663 0
 6469 0014 7B68     		ldr	r3, [r7, #4]
 6470 0016 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6471 001a 9BB2     		uxth	r3, r3
 6472 001c 002B     		cmp	r3, #0
 6473 001e 11D1     		bne	.L344
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 6474              		.loc 1 2666 0
 6475 0020 7B68     		ldr	r3, [r7, #4]
 6476 0022 1B68     		ldr	r3, [r3]
 6477 0024 7A68     		ldr	r2, [r7, #4]
 6478 0026 1268     		ldr	r2, [r2]
 6479 0028 1268     		ldr	r2, [r2]
 6480 002a 22F08002 		bic	r2, r2, #128
 6481 002e 1A60     		str	r2, [r3]
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6482              		.loc 1 2669 0
 6483 0030 7B68     		ldr	r3, [r7, #4]
 6484 0032 1B68     		ldr	r3, [r3]
 6485 0034 7A68     		ldr	r2, [r7, #4]
 6486 0036 1268     		ldr	r2, [r2]
 6487 0038 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccMdFX4h.s 			page 160


 6488 003a 42F04002 		orr	r2, r2, #64
 6489 003e 1A60     		str	r2, [r3]
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 6490              		.loc 1 2671 0
 6491 0040 0023     		movs	r3, #0
 6492 0042 2FE0     		b	.L345
 6493              	.L344:
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
 6494              		.loc 1 2675 0
 6495 0044 7B68     		ldr	r3, [r7, #4]
 6496 0046 9B68     		ldr	r3, [r3, #8]
 6497 0048 B3F5805F 		cmp	r3, #4096
 6498 004c 14D1     		bne	.L346
 6499              		.loc 1 2675 0 is_stmt 0 discriminator 1
 6500 004e 7B68     		ldr	r3, [r7, #4]
 6501 0050 1B69     		ldr	r3, [r3, #16]
 6502 0052 002B     		cmp	r3, #0
 6503 0054 10D1     		bne	.L346
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t*) huart->pTxBuffPtr;
 6504              		.loc 1 2677 0 is_stmt 1
 6505 0056 7B68     		ldr	r3, [r7, #4]
 6506 0058 DB6C     		ldr	r3, [r3, #76]
 6507 005a FB60     		str	r3, [r7, #12]
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
 6508              		.loc 1 2678 0
 6509 005c 7B68     		ldr	r3, [r7, #4]
 6510 005e 1B68     		ldr	r3, [r3]
 6511 0060 FA68     		ldr	r2, [r7, #12]
 6512 0062 1288     		ldrh	r2, [r2]
 6513 0064 C2F30802 		ubfx	r2, r2, #0, #9
 6514 0068 92B2     		uxth	r2, r2
 6515 006a 1A85     		strh	r2, [r3, #40]	@ movhi
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2;
 6516              		.loc 1 2679 0
 6517 006c 7B68     		ldr	r3, [r7, #4]
 6518 006e DB6C     		ldr	r3, [r3, #76]
 6519 0070 9A1C     		adds	r2, r3, #2
 6520 0072 7B68     		ldr	r3, [r7, #4]
 6521 0074 DA64     		str	r2, [r3, #76]
 6522 0076 09E0     		b	.L347
 6523              	.L346:
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0xFF);
 6524              		.loc 1 2683 0
 6525 0078 7B68     		ldr	r3, [r7, #4]
 6526 007a 1A68     		ldr	r2, [r3]
 6527 007c 7B68     		ldr	r3, [r7, #4]
 6528 007e DB6C     		ldr	r3, [r3, #76]
 6529 0080 581C     		adds	r0, r3, #1
 6530 0082 7968     		ldr	r1, [r7, #4]
ARM GAS  /tmp/ccMdFX4h.s 			page 161


 6531 0084 C864     		str	r0, [r1, #76]
 6532 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6533 0088 9BB2     		uxth	r3, r3
 6534 008a 1385     		strh	r3, [r2, #40]	@ movhi
 6535              	.L347:
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 6536              		.loc 1 2685 0
 6537 008c 7B68     		ldr	r3, [r7, #4]
 6538 008e B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 6539 0092 9BB2     		uxth	r3, r3
 6540 0094 013B     		subs	r3, r3, #1
 6541 0096 9AB2     		uxth	r2, r3
 6542 0098 7B68     		ldr	r3, [r7, #4]
 6543 009a A3F85220 		strh	r2, [r3, #82]	@ movhi
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 6544              		.loc 1 2687 0
 6545 009e 0023     		movs	r3, #0
 6546 00a0 00E0     		b	.L345
 6547              	.L343:
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 6548              		.loc 1 2692 0
 6549 00a2 0223     		movs	r3, #2
 6550              	.L345:
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6551              		.loc 1 2694 0
 6552 00a4 1846     		mov	r0, r3
 6553 00a6 1437     		adds	r7, r7, #20
 6554              	.LCFI301:
 6555              		.cfi_def_cfa_offset 4
 6556 00a8 BD46     		mov	sp, r7
 6557              	.LCFI302:
 6558              		.cfi_def_cfa_register 13
 6559              		@ sp needed
 6560 00aa 5DF8047B 		ldr	r7, [sp], #4
 6561              	.LCFI303:
 6562              		.cfi_restore 7
 6563              		.cfi_def_cfa_offset 0
 6564 00ae 7047     		bx	lr
 6565              		.cfi_endproc
 6566              	.LFE181:
 6568              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 6569              		.align	1
 6570              		.syntax unified
 6571              		.thumb
 6572              		.thumb_func
 6573              		.fpu fpv4-sp-d16
 6575              	UART_EndTransmit_IT:
 6576              	.LFB182:
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccMdFX4h.s 			page 162


2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6577              		.loc 1 2703 0
 6578              		.cfi_startproc
 6579              		@ args = 0, pretend = 0, frame = 8
 6580              		@ frame_needed = 1, uses_anonymous_args = 0
 6581 0000 80B5     		push	{r7, lr}
 6582              	.LCFI304:
 6583              		.cfi_def_cfa_offset 8
 6584              		.cfi_offset 7, -8
 6585              		.cfi_offset 14, -4
 6586 0002 82B0     		sub	sp, sp, #8
 6587              	.LCFI305:
 6588              		.cfi_def_cfa_offset 16
 6589 0004 00AF     		add	r7, sp, #0
 6590              	.LCFI306:
 6591              		.cfi_def_cfa_register 7
 6592 0006 7860     		str	r0, [r7, #4]
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6593              		.loc 1 2705 0
 6594 0008 7B68     		ldr	r3, [r7, #4]
 6595 000a 1B68     		ldr	r3, [r3]
 6596 000c 7A68     		ldr	r2, [r7, #4]
 6597 000e 1268     		ldr	r2, [r2]
 6598 0010 1268     		ldr	r2, [r2]
 6599 0012 22F04002 		bic	r2, r2, #64
 6600 0016 1A60     		str	r2, [r3]
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6601              		.loc 1 2708 0
 6602 0018 7B68     		ldr	r3, [r7, #4]
 6603 001a 2022     		movs	r2, #32
 6604 001c 83F86920 		strb	r2, [r3, #105]
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 6605              		.loc 1 2710 0
 6606 0020 7868     		ldr	r0, [r7, #4]
 6607 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6608              		.loc 1 2712 0
 6609 0026 0023     		movs	r3, #0
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6610              		.loc 1 2713 0
 6611 0028 1846     		mov	r0, r3
 6612 002a 0837     		adds	r7, r7, #8
 6613              	.LCFI307:
 6614              		.cfi_def_cfa_offset 8
 6615 002c BD46     		mov	sp, r7
 6616              	.LCFI308:
ARM GAS  /tmp/ccMdFX4h.s 			page 163


 6617              		.cfi_def_cfa_register 13
 6618              		@ sp needed
 6619 002e 80BD     		pop	{r7, pc}
 6620              		.cfi_endproc
 6621              	.LFE182:
 6623              		.section	.text.UART_Receive_IT,"ax",%progbits
 6624              		.align	1
 6625              		.syntax unified
 6626              		.thumb
 6627              		.thumb_func
 6628              		.fpu fpv4-sp-d16
 6630              	UART_Receive_IT:
 6631              	.LFB183:
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Receive an amount of data in interrupt mode.
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6632              		.loc 1 2723 0
 6633              		.cfi_startproc
 6634              		@ args = 0, pretend = 0, frame = 16
 6635              		@ frame_needed = 1, uses_anonymous_args = 0
 6636 0000 80B5     		push	{r7, lr}
 6637              	.LCFI309:
 6638              		.cfi_def_cfa_offset 8
 6639              		.cfi_offset 7, -8
 6640              		.cfi_offset 14, -4
 6641 0002 84B0     		sub	sp, sp, #16
 6642              	.LCFI310:
 6643              		.cfi_def_cfa_offset 24
 6644 0004 00AF     		add	r7, sp, #0
 6645              	.LCFI311:
 6646              		.cfi_def_cfa_register 7
 6647 0006 7860     		str	r0, [r7, #4]
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t* tmp;
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhMask = huart->Mask;
 6648              		.loc 1 2725 0
 6649 0008 7B68     		ldr	r3, [r7, #4]
 6650 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 6651 000e FB81     		strh	r3, [r7, #14]	@ movhi
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
 6652              		.loc 1 2729 0
 6653 0010 7B68     		ldr	r3, [r7, #4]
 6654 0012 93F86A30 		ldrb	r3, [r3, #106]
 6655 0016 DBB2     		uxtb	r3, r3
 6656 0018 222B     		cmp	r3, #34
 6657 001a 4ED1     		bne	.L351
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
ARM GAS  /tmp/ccMdFX4h.s 			page 164


 6658              		.loc 1 2731 0
 6659 001c 7B68     		ldr	r3, [r7, #4]
 6660 001e 1B68     		ldr	r3, [r3]
 6661 0020 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 6662 0022 BB81     		strh	r3, [r7, #12]	@ movhi
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 6663              		.loc 1 2732 0
 6664 0024 7B68     		ldr	r3, [r7, #4]
 6665 0026 9B68     		ldr	r3, [r3, #8]
 6666 0028 B3F5805F 		cmp	r3, #4096
 6667 002c 12D1     		bne	.L352
 6668              		.loc 1 2732 0 is_stmt 0 discriminator 1
 6669 002e 7B68     		ldr	r3, [r7, #4]
 6670 0030 1B69     		ldr	r3, [r3, #16]
 6671 0032 002B     		cmp	r3, #0
 6672 0034 0ED1     		bne	.L352
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr ;
 6673              		.loc 1 2734 0 is_stmt 1
 6674 0036 7B68     		ldr	r3, [r7, #4]
 6675 0038 5B6D     		ldr	r3, [r3, #84]
 6676 003a BB60     		str	r3, [r7, #8]
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       *tmp = (uint16_t)(uhdata & uhMask);
 6677              		.loc 1 2735 0
 6678 003c BA89     		ldrh	r2, [r7, #12]	@ movhi
 6679 003e FB89     		ldrh	r3, [r7, #14]	@ movhi
 6680 0040 1340     		ands	r3, r3, r2
 6681 0042 9AB2     		uxth	r2, r3
 6682 0044 BB68     		ldr	r3, [r7, #8]
 6683 0046 1A80     		strh	r2, [r3]	@ movhi
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr +=2;
 6684              		.loc 1 2736 0
 6685 0048 7B68     		ldr	r3, [r7, #4]
 6686 004a 5B6D     		ldr	r3, [r3, #84]
 6687 004c 9A1C     		adds	r2, r3, #2
 6688 004e 7B68     		ldr	r3, [r7, #4]
 6689 0050 5A65     		str	r2, [r3, #84]
 6690 0052 0BE0     		b	.L353
 6691              	.L352:
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       *huart->pRxBuffPtr++ = (uint8_t)(uhdata & (uint8_t)uhMask);
 6692              		.loc 1 2740 0
 6693 0054 7B68     		ldr	r3, [r7, #4]
 6694 0056 5B6D     		ldr	r3, [r3, #84]
 6695 0058 591C     		adds	r1, r3, #1
 6696 005a 7A68     		ldr	r2, [r7, #4]
 6697 005c 5165     		str	r1, [r2, #84]
 6698 005e BA89     		ldrh	r2, [r7, #12]	@ movhi
 6699 0060 D1B2     		uxtb	r1, r2
 6700 0062 FA89     		ldrh	r2, [r7, #14]	@ movhi
 6701 0064 D2B2     		uxtb	r2, r2
 6702 0066 0A40     		ands	r2, r2, r1
 6703 0068 D2B2     		uxtb	r2, r2
 6704 006a 1A70     		strb	r2, [r3]
 6705              	.L353:
ARM GAS  /tmp/ccMdFX4h.s 			page 165


2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if(--huart->RxXferCount == 0)
 6706              		.loc 1 2743 0
 6707 006c 7B68     		ldr	r3, [r7, #4]
 6708 006e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 6709 0072 9BB2     		uxth	r3, r3
 6710 0074 013B     		subs	r3, r3, #1
 6711 0076 9BB2     		uxth	r3, r3
 6712 0078 7A68     		ldr	r2, [r7, #4]
 6713 007a 1946     		mov	r1, r3	@ movhi
 6714 007c A2F85A10 		strh	r1, [r2, #90]	@ movhi
 6715 0080 002B     		cmp	r3, #0
 6716 0082 18D1     		bne	.L354
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6717              		.loc 1 2746 0
 6718 0084 7B68     		ldr	r3, [r7, #4]
 6719 0086 1B68     		ldr	r3, [r3]
 6720 0088 7A68     		ldr	r2, [r7, #4]
 6721 008a 1268     		ldr	r2, [r2]
 6722 008c 1268     		ldr	r2, [r2]
 6723 008e 22F49072 		bic	r2, r2, #288
 6724 0092 1A60     		str	r2, [r3]
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6725              		.loc 1 2749 0
 6726 0094 7B68     		ldr	r3, [r7, #4]
 6727 0096 1B68     		ldr	r3, [r3]
 6728 0098 7A68     		ldr	r2, [r7, #4]
 6729 009a 1268     		ldr	r2, [r2]
 6730 009c 9268     		ldr	r2, [r2, #8]
 6731 009e 22F00102 		bic	r2, r2, #1
 6732 00a2 9A60     		str	r2, [r3, #8]
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 6733              		.loc 1 2752 0
 6734 00a4 7B68     		ldr	r3, [r7, #4]
 6735 00a6 2022     		movs	r2, #32
 6736 00a8 83F86A20 		strb	r2, [r3, #106]
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 6737              		.loc 1 2754 0
 6738 00ac 7868     		ldr	r0, [r7, #4]
 6739 00ae FFF7FEFF 		bl	HAL_UART_RxCpltCallback
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_OK;
 6740              		.loc 1 2756 0
 6741 00b2 0023     		movs	r3, #0
 6742 00b4 0CE0     		b	.L355
 6743              	.L354:
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
ARM GAS  /tmp/ccMdFX4h.s 			page 166


 6744              		.loc 1 2759 0
 6745 00b6 0023     		movs	r3, #0
 6746 00b8 0AE0     		b	.L355
 6747              	.L351:
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6748              		.loc 1 2764 0
 6749 00ba 7B68     		ldr	r3, [r7, #4]
 6750 00bc 1B68     		ldr	r3, [r3]
 6751 00be 7A68     		ldr	r2, [r7, #4]
 6752 00c0 1268     		ldr	r2, [r2]
 6753 00c2 128B     		ldrh	r2, [r2, #24]	@ movhi
 6754 00c4 92B2     		uxth	r2, r2
 6755 00c6 42F00802 		orr	r2, r2, #8
 6756 00ca 92B2     		uxth	r2, r2
 6757 00cc 1A83     		strh	r2, [r3, #24]	@ movhi
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 6758              		.loc 1 2766 0
 6759 00ce 0223     		movs	r3, #2
 6760              	.L355:
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6761              		.loc 1 2768 0
 6762 00d0 1846     		mov	r0, r3
 6763 00d2 1037     		adds	r7, r7, #16
 6764              	.LCFI312:
 6765              		.cfi_def_cfa_offset 8
 6766 00d4 BD46     		mov	sp, r7
 6767              	.LCFI313:
 6768              		.cfi_def_cfa_register 13
 6769              		@ sp needed
 6770 00d6 80BD     		pop	{r7, pc}
 6771              		.cfi_endproc
 6772              	.LFE183:
 6774              		.text
 6775              	.Letext0:
 6776              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6777              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6778              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 6779              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 6780              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 6781              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 6782              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 6783              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 6784              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 6785              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 6786              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 6787              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 6788              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
ARM GAS  /tmp/ccMdFX4h.s 			page 167


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccMdFX4h.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccMdFX4h.s:25     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccMdFX4h.s:680    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccMdFX4h.s:4303   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccMdFX4h.s:5214   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccMdFX4h.s:5417   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccMdFX4h.s:140    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccMdFX4h.s:147    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccMdFX4h.s:269    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccMdFX4h.s:276    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccMdFX4h.s:427    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccMdFX4h.s:434    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccMdFX4h.s:577    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccMdFX4h.s:584    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccMdFX4h.s:723    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccMdFX4h.s:673    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccMdFX4h.s:716    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccMdFX4h.s:759    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccMdFX4h.s:766    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccMdFX4h.s:5525   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccMdFX4h.s:955    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccMdFX4h.s:962    .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccMdFX4h.s:1212   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:1219   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccMdFX4h.s:1329   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:1336   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccMdFX4h.s:1519   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccMdFX4h.s:1526   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccMdFX4h.s:1668   .text.HAL_UART_Transmit_DMA:00000000000000cc $d
     /tmp/ccMdFX4h.s:5754   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccMdFX4h.s:5830   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccMdFX4h.s:6005   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccMdFX4h.s:1675   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccMdFX4h.s:1682   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccMdFX4h.s:1831   .text.HAL_UART_Receive_DMA:00000000000000dc $d
     /tmp/ccMdFX4h.s:5875   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccMdFX4h.s:5960   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccMdFX4h.s:1838   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccMdFX4h.s:1845   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccMdFX4h.s:1963   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccMdFX4h.s:1970   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccMdFX4h.s:2077   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccMdFX4h.s:2084   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccMdFX4h.s:5638   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccMdFX4h.s:5692   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccMdFX4h.s:2192   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccMdFX4h.s:2199   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccMdFX4h.s:2336   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccMdFX4h.s:2343   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/ccMdFX4h.s:2424   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccMdFX4h.s:2431   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccMdFX4h.s:2525   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:2532   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccMdFX4h.s:3608   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccMdFX4h.s:2748   .text.HAL_UART_Abort_IT:000000000000014c $d
ARM GAS  /tmp/ccMdFX4h.s 			page 168


     /tmp/ccMdFX4h.s:6151   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccMdFX4h.s:6242   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccMdFX4h.s:2754   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:2761   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccMdFX4h.s:3651   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccMdFX4h.s:2871   .text.HAL_UART_AbortTransmit_IT:00000000000000a0 $d
     /tmp/ccMdFX4h.s:6333   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccMdFX4h.s:2876   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:2883   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccMdFX4h.s:3694   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccMdFX4h.s:3011   .text.HAL_UART_AbortReceive_IT:00000000000000c0 $d
     /tmp/ccMdFX4h.s:6386   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccMdFX4h.s:3016   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccMdFX4h.s:3023   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccMdFX4h.s:6630   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/ccMdFX4h.s:3565   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccMdFX4h.s:6444   .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/ccMdFX4h.s:6575   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccMdFX4h.s:3381   .text.HAL_UART_IRQHandler:0000000000000248 $d
     /tmp/ccMdFX4h.s:6098   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccMdFX4h.s:3386   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3393   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccMdFX4h.s:3429   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3436   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccMdFX4h.s:3472   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3479   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccMdFX4h.s:3515   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3522   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccMdFX4h.s:3558   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3601   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3644   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3687   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:3730   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccMdFX4h.s:3737   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccMdFX4h.s:3803   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccMdFX4h.s:3810   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccMdFX4h.s:3876   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccMdFX4h.s:3883   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccMdFX4h.s:3929   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccMdFX4h.s:3936   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccMdFX4h.s:4016   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccMdFX4h.s:4023   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccMdFX4h.s:4103   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccMdFX4h.s:4110   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccMdFX4h.s:4184   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccMdFX4h.s:4191   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccMdFX4h.s:4249   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccMdFX4h.s:4256   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccMdFX4h.s:4296   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccMdFX4h.s:4418   .text.UART_SetConfig:00000000000000ac $d
     /tmp/ccMdFX4h.s:4422   .text.UART_SetConfig:00000000000000bc $t
     /tmp/ccMdFX4h.s:4466   .text.UART_SetConfig:00000000000000fc $d
     /tmp/ccMdFX4h.s:4479   .text.UART_SetConfig:0000000000000130 $t
     /tmp/ccMdFX4h.s:4737   .text.UART_SetConfig:00000000000002ac $d
     /tmp/ccMdFX4h.s:4746   .text.UART_SetConfig:00000000000002d0 $t
     /tmp/ccMdFX4h.s:4774   .text.UART_SetConfig:00000000000002f0 $d
     /tmp/ccMdFX4h.s:4785   .text.UART_SetConfig:0000000000000314 $t
ARM GAS  /tmp/ccMdFX4h.s 			page 169


     /tmp/ccMdFX4h.s:4825   .text.UART_SetConfig:0000000000000354 $d
     /tmp/ccMdFX4h.s:4834   .text.UART_SetConfig:0000000000000378 $t
     /tmp/ccMdFX4h.s:4973   .text.UART_SetConfig:0000000000000490 $d
     /tmp/ccMdFX4h.s:4982   .text.UART_SetConfig:00000000000004b4 $t
     /tmp/ccMdFX4h.s:5088   .text.UART_SetConfig:0000000000000570 $d
     /tmp/ccMdFX4h.s:5097   .text.UART_SetConfig:0000000000000594 $t
     /tmp/ccMdFX4h.s:5202   .text.UART_SetConfig:0000000000000644 $d
     /tmp/ccMdFX4h.s:5207   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccMdFX4h.s:5410   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccMdFX4h.s:5518   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccMdFX4h.s:5632   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccMdFX4h.s:5686   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccMdFX4h.s:5748   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccMdFX4h.s:5824   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccMdFX4h.s:5869   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccMdFX4h.s:5954   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccMdFX4h.s:5999   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccMdFX4h.s:6092   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccMdFX4h.s:6145   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:6236   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:6327   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:6380   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccMdFX4h.s:6438   .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:6569   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccMdFX4h.s:6624   .text.UART_Receive_IT:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
