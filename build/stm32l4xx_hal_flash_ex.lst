ARM GAS  /tmp/ccblWEZv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_flash_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_FLASHEx_Erase
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_FLASHEx_Erase:
  26              	.LFB126:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @file    stm32l4xx_hal_flash_ex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @version V1.5.2 
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @date    12-September-2016
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          functionalities of the FLASH extended peripheral:
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *           + Extended programming operations functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *  
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  @verbatim    
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  ==============================================================================
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                    ##### Flash Extended features #####
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   ==============================================================================
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****            
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   [..] Comparing to other previous devices, the FLASH interface for STM32L4xx 
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****        devices contains the following additional features 
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****        
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****        (+) Capacity up to 2 Mbyte with dual bank architecture supporting read-while-write
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****            capability (RWW)
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****        (+) Dual bank memory organization       
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****        (+) PCROP protection for all banks
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****    
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                         ##### How to use this driver #####
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  ==============================================================================
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****        of all STM32L4xx devices. It includes
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       (#) Flash Memory Erase functions: 
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                 HAL_FLASH_Lock() functions
ARM GAS  /tmp/ccblWEZv.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****            (++) Erase function: Erase page, erase all sectors
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****            (++) There are two modes of erase :
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****              (+++) Polling Mode using HAL_FLASHEx_Erase()
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****              (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                          
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       (#) Option Bytes Programming function: Use HAL_FLASHEx_OBProgram() to :
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Set/Reset the write protection
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Set the Read protection Level
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Program the user Option Bytes
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Configure the PCROP protection
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       (#) Get Option Bytes Configuration function: Use HAL_FLASHEx_OBGetConfig() to :
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Get the value of a write protection area
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Know if the read protection is activated
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Get the value of the user Option Bytes
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         (++) Get the value of a PCROP area
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  @endverbatim                      
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   ******************************************************************************
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @attention
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * are permitted provided that the following conditions are met:
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer.
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      and/or other materials provided with the distribution.
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      may be used to endorse or promote products derived from this software
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      without specific prior written permission.
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   ******************************************************************************
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #include "stm32l4xx_hal.h"
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @{
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief FALSH Extended HAL module driver
ARM GAS  /tmp/ccblWEZv.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @{
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/ 
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Variables FLASHEx Private Variables
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  * @{
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  */
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @}
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  * @{
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  */
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** extern HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout);
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** void                     FLASH_PageErase(uint32_t Page, uint32_t Banks);
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static void              FLASH_MassErase(uint32_t Banks);
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** void                     FLASH_FlushCaches(void);
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_WRPConfig(uint32_t WRPArea, uint32_t WRPStartOffset, uint32_t WRD
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDPConfig(uint32_t RDPLevel);
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint32_t UserType, uint32_t UserConfig);
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_PCROPConfig(uint32_t PCROPConfig, uint32_t PCROPStartAddr, uint32
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static void              FLASH_OB_GetWRP(uint32_t WRPArea, uint32_t * WRPStartOffset, uint32_t * WR
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetRDP(void);
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetUser(void);
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static void              FLASH_OB_GetPCROP(uint32_t * PCROPConfig, uint32_t * PCROPStartAddr, uint3
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @}
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Exported functions -------------------------------------------------------*/
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASH Extended Exported Functions
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @{
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */ 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 Extended IO operation functions
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  *  @brief   Extended IO operation functions 
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  *
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** @verbatim   
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  ===============================================================================
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                 ##### Extended programming operation functions #####
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  ===============================================================================
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     [..]
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to manage the Extended FLASH 
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     programming operations Operations.
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****  
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** @endverbatim
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @{
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
ARM GAS  /tmp/ccblWEZv.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages.
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param[in]  pEraseInit: pointer to an FLASH_EraseInitTypeDef structure that
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * 
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param[out]  PageError  : pointer to variable that contains the configuration 
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         information on faulty page in case of error (0xFFFFFFFF means that all 
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         the pages have been correctly erased)
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * 
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL Status
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
  28              		.loc 1 157 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 3960     		str	r1, [r7]
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  45              		.loc 1 158 0
  46 000a 0123     		movs	r3, #1
  47 000c FB73     		strb	r3, [r7, #15]
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t page_index = 0;
  48              		.loc 1 159 0
  49 000e 0023     		movs	r3, #0
  50 0010 BB60     		str	r3, [r7, #8]
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Process Locked */
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
  51              		.loc 1 162 0
  52 0012 324B     		ldr	r3, .L10
  53 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0016 012B     		cmp	r3, #1
  55 0018 01D1     		bne	.L2
  56              		.loc 1 162 0 is_stmt 0 discriminator 1
  57 001a 0223     		movs	r3, #2
  58 001c 5AE0     		b	.L3
  59              	.L2:
  60              		.loc 1 162 0 discriminator 2
  61 001e 2F4B     		ldr	r3, .L10
  62 0020 0122     		movs	r2, #1
  63 0022 1A70     		strb	r2, [r3]
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccblWEZv.s 			page 5


 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  64              		.loc 1 168 0 is_stmt 1 discriminator 2
  65 0024 4CF25030 		movw	r0, #50000
  66 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  67 002c 0346     		mov	r3, r0
  68 002e FB73     		strb	r3, [r7, #15]
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if (status == HAL_OK)
  69              		.loc 1 170 0 discriminator 2
  70 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  71 0032 002B     		cmp	r3, #0
  72 0034 4AD1     		bne	.L4
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
  73              		.loc 1 172 0
  74 0036 294B     		ldr	r3, .L10
  75 0038 0022     		movs	r2, #0
  76 003a 5A60     		str	r2, [r3, #4]
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
  77              		.loc 1 174 0
  78 003c 7B68     		ldr	r3, [r7, #4]
  79 003e 1B68     		ldr	r3, [r3]
  80 0040 012B     		cmp	r3, #1
  81 0042 13D1     		bne	.L5
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Mass erase to be done */
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       FLASH_MassErase(pEraseInit->Banks);
  82              		.loc 1 177 0
  83 0044 7B68     		ldr	r3, [r7, #4]
  84 0046 5B68     		ldr	r3, [r3, #4]
  85 0048 1846     		mov	r0, r3
  86 004a FFF7FEFF 		bl	FLASH_MassErase
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  87              		.loc 1 180 0
  88 004e 4CF25030 		movw	r0, #50000
  89 0052 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  90 0056 0346     		mov	r3, r0
  91 0058 FB73     		strb	r3, [r7, #15]
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* If the erase operation is completed, disable the MER1 and MER2 Bits */
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, (FLASH_CR_MER1 | FLASH_CR_MER2));
  92              		.loc 1 184 0
  93 005a 214A     		ldr	r2, .L10+4
  94 005c 204B     		ldr	r3, .L10+4
  95 005e 5B69     		ldr	r3, [r3, #20]
  96 0060 23F40043 		bic	r3, r3, #32768
  97 0064 23F00403 		bic	r3, r3, #4
  98 0068 5361     		str	r3, [r2, #20]
  99 006a 2DE0     		b	.L6
 100              	.L5:
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #else
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* If the erase operation is completed, disable the MER1 Bit */
ARM GAS  /tmp/ccblWEZv.s 			page 6


 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, (FLASH_CR_MER1));
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif      
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     else
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /*Initialization of PageError variable*/
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       *PageError = 0xFFFFFFFF;
 101              		.loc 1 193 0
 102 006c 3B68     		ldr	r3, [r7]
 103 006e 4FF0FF32 		mov	r2, #-1
 104 0072 1A60     		str	r2, [r3]
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       for(page_index = pEraseInit->Page; page_index < (pEraseInit->Page + pEraseInit->NbPages); pag
 105              		.loc 1 195 0
 106 0074 7B68     		ldr	r3, [r7, #4]
 107 0076 9B68     		ldr	r3, [r3, #8]
 108 0078 BB60     		str	r3, [r7, #8]
 109 007a 1DE0     		b	.L7
 110              	.L9:
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       {
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         FLASH_PageErase(page_index, pEraseInit->Banks);
 111              		.loc 1 197 0
 112 007c 7B68     		ldr	r3, [r7, #4]
 113 007e 5B68     		ldr	r3, [r3, #4]
 114 0080 1946     		mov	r1, r3
 115 0082 B868     		ldr	r0, [r7, #8]
 116 0084 FFF7FEFF 		bl	FLASH_PageErase
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 117              		.loc 1 200 0
 118 0088 4CF25030 		movw	r0, #50000
 119 008c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 120 0090 0346     		mov	r3, r0
 121 0092 FB73     		strb	r3, [r7, #15]
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the PER Bit */
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, (FLASH_CR_PER | FLASH_CR_PNB));
 122              		.loc 1 203 0
 123 0094 124A     		ldr	r2, .L10+4
 124 0096 124B     		ldr	r3, .L10+4
 125 0098 5B69     		ldr	r3, [r3, #20]
 126 009a 23F4FF63 		bic	r3, r3, #2040
 127 009e 23F00203 		bic	r3, r3, #2
 128 00a2 5361     		str	r3, [r2, #20]
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         if (status != HAL_OK)
 129              		.loc 1 205 0
 130 00a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 131 00a6 002B     		cmp	r3, #0
 132 00a8 03D0     		beq	.L8
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         {
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****           /* In case of error, stop erase procedure and return the faulty address */
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****           *PageError = page_index;
 133              		.loc 1 208 0
 134 00aa 3B68     		ldr	r3, [r7]
 135 00ac BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccblWEZv.s 			page 7


 136 00ae 1A60     		str	r2, [r3]
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****           break;
 137              		.loc 1 209 0
 138 00b0 0AE0     		b	.L6
 139              	.L8:
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       {
 140              		.loc 1 195 0 discriminator 2
 141 00b2 BB68     		ldr	r3, [r7, #8]
 142 00b4 0133     		adds	r3, r3, #1
 143 00b6 BB60     		str	r3, [r7, #8]
 144              	.L7:
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       {
 145              		.loc 1 195 0 is_stmt 0 discriminator 1
 146 00b8 7B68     		ldr	r3, [r7, #4]
 147 00ba 9A68     		ldr	r2, [r3, #8]
 148 00bc 7B68     		ldr	r3, [r7, #4]
 149 00be DB68     		ldr	r3, [r3, #12]
 150 00c0 1A44     		add	r2, r2, r3
 151 00c2 BB68     		ldr	r3, [r7, #8]
 152 00c4 9A42     		cmp	r2, r3
 153 00c6 D9D8     		bhi	.L9
 154              	.L6:
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****         }
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       }
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Flush the caches to be sure of the data consistency */
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     FLASH_FlushCaches();
 155              		.loc 1 215 0 is_stmt 1
 156 00c8 FFF7FEFF 		bl	FLASH_FlushCaches
 157              	.L4:
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Process Unlocked */
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 158              		.loc 1 219 0
 159 00cc 034B     		ldr	r3, .L10
 160 00ce 0022     		movs	r2, #0
 161 00d0 1A70     		strb	r2, [r3]
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;
 162              		.loc 1 221 0
 163 00d2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 164              	.L3:
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 165              		.loc 1 222 0
 166 00d4 1846     		mov	r0, r3
 167 00d6 1037     		adds	r7, r7, #16
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170 00d8 BD46     		mov	sp, r7
 171              	.LCFI4:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 00da 80BD     		pop	{r7, pc}
 175              	.L11:
 176              		.align	2
ARM GAS  /tmp/ccblWEZv.s 			page 8


 177              	.L10:
 178 00dc 00000000 		.word	pFlash
 179 00e0 00200240 		.word	1073881088
 180              		.cfi_endproc
 181              	.LFE126:
 183              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 184              		.align	1
 185              		.global	HAL_FLASHEx_Erase_IT
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	HAL_FLASHEx_Erase_IT:
 192              	.LFB127:
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages with interrupt enabled.
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  pEraseInit: pointer to an FLASH_EraseInitTypeDef structure that
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * 
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL Status
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 193              		.loc 1 232 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 16
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197 0000 80B5     		push	{r7, lr}
 198              	.LCFI5:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 84B0     		sub	sp, sp, #16
 203              	.LCFI6:
 204              		.cfi_def_cfa_offset 24
 205 0004 00AF     		add	r7, sp, #0
 206              	.LCFI7:
 207              		.cfi_def_cfa_register 7
 208 0006 7860     		str	r0, [r7, #4]
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 209              		.loc 1 233 0
 210 0008 0023     		movs	r3, #0
 211 000a FB73     		strb	r3, [r7, #15]
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Process Locked */
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 212              		.loc 1 236 0
 213 000c 1D4B     		ldr	r3, .L17
 214 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 215 0010 012B     		cmp	r3, #1
 216 0012 01D1     		bne	.L13
 217              		.loc 1 236 0 is_stmt 0 discriminator 1
 218 0014 0223     		movs	r3, #2
 219 0016 30E0     		b	.L14
 220              	.L13:
 221              		.loc 1 236 0 discriminator 2
ARM GAS  /tmp/ccblWEZv.s 			page 9


 222 0018 1A4B     		ldr	r3, .L17
 223 001a 0122     		movs	r2, #1
 224 001c 1A70     		strb	r2, [r3]
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 225              		.loc 1 241 0 is_stmt 1 discriminator 2
 226 001e 194B     		ldr	r3, .L17
 227 0020 0022     		movs	r2, #0
 228 0022 5A60     		str	r2, [r3, #4]
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Enable End of Operation and Error interrupts */
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR);
 229              		.loc 1 244 0 discriminator 2
 230 0024 184A     		ldr	r2, .L17+4
 231 0026 184B     		ldr	r3, .L17+4
 232 0028 5B69     		ldr	r3, [r3, #20]
 233 002a 43F04073 		orr	r3, r3, #50331648
 234 002e 5361     		str	r3, [r2, #20]
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   pFlash.Bank = pEraseInit->Banks;
 235              		.loc 1 246 0 discriminator 2
 236 0030 7B68     		ldr	r3, [r7, #4]
 237 0032 5B68     		ldr	r3, [r3, #4]
 238 0034 134A     		ldr	r2, .L17
 239 0036 1361     		str	r3, [r2, #16]
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 240              		.loc 1 248 0 discriminator 2
 241 0038 7B68     		ldr	r3, [r7, #4]
 242 003a 1B68     		ldr	r3, [r3]
 243 003c 012B     		cmp	r3, #1
 244 003e 08D1     		bne	.L15
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Mass erase to be done */
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASS_ERASE;
 245              		.loc 1 251 0
 246 0040 104B     		ldr	r3, .L17
 247 0042 0222     		movs	r2, #2
 248 0044 1A72     		strb	r2, [r3, #8]
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     FLASH_MassErase(pEraseInit->Banks);
 249              		.loc 1 252 0
 250 0046 7B68     		ldr	r3, [r7, #4]
 251 0048 5B68     		ldr	r3, [r3, #4]
 252 004a 1846     		mov	r0, r3
 253 004c FFF7FEFF 		bl	FLASH_MassErase
 254 0050 12E0     		b	.L16
 255              	.L15:
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Erase by page to be done */
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PAGE_ERASE;
 256              		.loc 1 257 0
 257 0052 0C4B     		ldr	r3, .L17
ARM GAS  /tmp/ccblWEZv.s 			page 10


 258 0054 0122     		movs	r2, #1
 259 0056 1A72     		strb	r2, [r3, #8]
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pFlash.NbPagesToErase = pEraseInit->NbPages;
 260              		.loc 1 258 0
 261 0058 7B68     		ldr	r3, [r7, #4]
 262 005a DB68     		ldr	r3, [r3, #12]
 263 005c 094A     		ldr	r2, .L17
 264 005e 9361     		str	r3, [r2, #24]
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pFlash.Page = pEraseInit->Page;
 265              		.loc 1 259 0
 266 0060 7B68     		ldr	r3, [r7, #4]
 267 0062 9B68     		ldr	r3, [r3, #8]
 268 0064 074A     		ldr	r2, .L17
 269 0066 5361     		str	r3, [r2, #20]
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /*Erase 1st page and wait for IT */
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     FLASH_PageErase(pEraseInit->Page, pEraseInit->Banks);
 270              		.loc 1 262 0
 271 0068 7B68     		ldr	r3, [r7, #4]
 272 006a 9A68     		ldr	r2, [r3, #8]
 273 006c 7B68     		ldr	r3, [r7, #4]
 274 006e 5B68     		ldr	r3, [r3, #4]
 275 0070 1946     		mov	r1, r3
 276 0072 1046     		mov	r0, r2
 277 0074 FFF7FEFF 		bl	FLASH_PageErase
 278              	.L16:
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;
 279              		.loc 1 265 0
 280 0078 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 281              	.L14:
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 282              		.loc 1 266 0
 283 007a 1846     		mov	r0, r3
 284 007c 1037     		adds	r7, r7, #16
 285              	.LCFI8:
 286              		.cfi_def_cfa_offset 8
 287 007e BD46     		mov	sp, r7
 288              	.LCFI9:
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0080 80BD     		pop	{r7, pc}
 292              	.L18:
 293 0082 00BF     		.align	2
 294              	.L17:
 295 0084 00000000 		.word	pFlash
 296 0088 00200240 		.word	1073881088
 297              		.cfi_endproc
 298              	.LFE127:
 300              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 301              		.align	1
 302              		.global	HAL_FLASHEx_OBProgram
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccblWEZv.s 			page 11


 308              	HAL_FLASHEx_OBProgram:
 309              	.LFB128:
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Program Option bytes.
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  pOBInit: pointer to an FLASH_OBInitStruct structure that
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * 
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL Status
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 310              		.loc 1 276 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 16
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314 0000 80B5     		push	{r7, lr}
 315              	.LCFI10:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 84B0     		sub	sp, sp, #16
 320              	.LCFI11:
 321              		.cfi_def_cfa_offset 24
 322 0004 00AF     		add	r7, sp, #0
 323              	.LCFI12:
 324              		.cfi_def_cfa_register 7
 325 0006 7860     		str	r0, [r7, #4]
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 326              		.loc 1 277 0
 327 0008 0123     		movs	r3, #1
 328 000a FB73     		strb	r3, [r7, #15]
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Process Locked */
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 329              		.loc 1 280 0
 330 000c 294B     		ldr	r3, .L26
 331 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 332 0010 012B     		cmp	r3, #1
 333 0012 01D1     		bne	.L20
 334              		.loc 1 280 0 is_stmt 0 discriminator 1
 335 0014 0223     		movs	r3, #2
 336 0016 48E0     		b	.L21
 337              	.L20:
 338              		.loc 1 280 0 discriminator 2
 339 0018 264B     		ldr	r3, .L26
 340 001a 0122     		movs	r2, #1
 341 001c 1A70     		strb	r2, [r3]
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 342              		.loc 1 285 0 is_stmt 1 discriminator 2
 343 001e 254B     		ldr	r3, .L26
 344 0020 0022     		movs	r2, #0
 345 0022 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccblWEZv.s 			page 12


 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Write protection configuration */
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) != RESET)
 346              		.loc 1 288 0 discriminator 2
 347 0024 7B68     		ldr	r3, [r7, #4]
 348 0026 1B68     		ldr	r3, [r3]
 349 0028 03F00103 		and	r3, r3, #1
 350 002c 002B     		cmp	r3, #0
 351 002e 0AD0     		beq	.L22
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure of Write protection on the selected area */
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_OB_WRPConfig(pOBInit->WRPArea, pOBInit->WRPStartOffset, pOBInit->WRPEndOffset);
 352              		.loc 1 291 0
 353 0030 7B68     		ldr	r3, [r7, #4]
 354 0032 5868     		ldr	r0, [r3, #4]
 355 0034 7B68     		ldr	r3, [r7, #4]
 356 0036 9968     		ldr	r1, [r3, #8]
 357 0038 7B68     		ldr	r3, [r7, #4]
 358 003a DB68     		ldr	r3, [r3, #12]
 359 003c 1A46     		mov	r2, r3
 360 003e FFF7FEFF 		bl	FLASH_OB_WRPConfig
 361 0042 0346     		mov	r3, r0
 362 0044 FB73     		strb	r3, [r7, #15]
 363              	.L22:
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Read protection configuration */
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) != RESET)
 364              		.loc 1 295 0
 365 0046 7B68     		ldr	r3, [r7, #4]
 366 0048 1B68     		ldr	r3, [r3]
 367 004a 03F00203 		and	r3, r3, #2
 368 004e 002B     		cmp	r3, #0
 369 0050 06D0     		beq	.L23
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the Read protection level */
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_OB_RDPConfig(pOBInit->RDPLevel);
 370              		.loc 1 298 0
 371 0052 7B68     		ldr	r3, [r7, #4]
 372 0054 1B69     		ldr	r3, [r3, #16]
 373 0056 1846     		mov	r0, r3
 374 0058 FFF7FEFF 		bl	FLASH_OB_RDPConfig
 375 005c 0346     		mov	r3, r0
 376 005e FB73     		strb	r3, [r7, #15]
 377              	.L23:
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* User Configuration */
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) != RESET)
 378              		.loc 1 302 0
 379 0060 7B68     		ldr	r3, [r7, #4]
 380 0062 1B68     		ldr	r3, [r3]
 381 0064 03F00403 		and	r3, r3, #4
 382 0068 002B     		cmp	r3, #0
 383 006a 09D0     		beq	.L24
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the user option bytes */
ARM GAS  /tmp/ccblWEZv.s 			page 13


 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERType, pOBInit->USERConfig);
 384              		.loc 1 305 0
 385 006c 7B68     		ldr	r3, [r7, #4]
 386 006e 5A69     		ldr	r2, [r3, #20]
 387 0070 7B68     		ldr	r3, [r7, #4]
 388 0072 9B69     		ldr	r3, [r3, #24]
 389 0074 1946     		mov	r1, r3
 390 0076 1046     		mov	r0, r2
 391 0078 FFF7FEFF 		bl	FLASH_OB_UserConfig
 392 007c 0346     		mov	r3, r0
 393 007e FB73     		strb	r3, [r7, #15]
 394              	.L24:
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* PCROP Configuration */
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_PCROP) != RESET)
 395              		.loc 1 309 0
 396 0080 7B68     		ldr	r3, [r7, #4]
 397 0082 1B68     		ldr	r3, [r3]
 398 0084 03F00803 		and	r3, r3, #8
 399 0088 002B     		cmp	r3, #0
 400 008a 0AD0     		beq	.L25
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the Proprietary code readout protection */
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_OB_PCROPConfig(pOBInit->PCROPConfig, pOBInit->PCROPStartAddr, pOBInit->PCROPEndA
 401              		.loc 1 312 0
 402 008c 7B68     		ldr	r3, [r7, #4]
 403 008e D869     		ldr	r0, [r3, #28]
 404 0090 7B68     		ldr	r3, [r7, #4]
 405 0092 196A     		ldr	r1, [r3, #32]
 406 0094 7B68     		ldr	r3, [r7, #4]
 407 0096 5B6A     		ldr	r3, [r3, #36]
 408 0098 1A46     		mov	r2, r3
 409 009a FFF7FEFF 		bl	FLASH_OB_PCROPConfig
 410 009e 0346     		mov	r3, r0
 411 00a0 FB73     		strb	r3, [r7, #15]
 412              	.L25:
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Process Unlocked */
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 413              		.loc 1 316 0
 414 00a2 044B     		ldr	r3, .L26
 415 00a4 0022     		movs	r2, #0
 416 00a6 1A70     		strb	r2, [r3]
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;
 417              		.loc 1 318 0
 418 00a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 419              	.L21:
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 420              		.loc 1 319 0
 421 00aa 1846     		mov	r0, r3
 422 00ac 1037     		adds	r7, r7, #16
 423              	.LCFI13:
 424              		.cfi_def_cfa_offset 8
 425 00ae BD46     		mov	sp, r7
ARM GAS  /tmp/ccblWEZv.s 			page 14


 426              	.LCFI14:
 427              		.cfi_def_cfa_register 13
 428              		@ sp needed
 429 00b0 80BD     		pop	{r7, pc}
 430              	.L27:
 431 00b2 00BF     		.align	2
 432              	.L26:
 433 00b4 00000000 		.word	pFlash
 434              		.cfi_endproc
 435              	.LFE128:
 437              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 438              		.align	1
 439              		.global	HAL_FLASHEx_OBGetConfig
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	HAL_FLASHEx_OBGetConfig:
 446              	.LFB129:
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Get the Option bytes configuration.
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  pOBInit: pointer to an FLASH_OBInitStruct structure that contains the 
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *                  configuration information.
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   The fields pOBInit->WRPArea and pOBInit->PCROPConfig should indicate 
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         which area is requested for the WRP and PCROP, else no information will be returned
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval None
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 447              		.loc 1 331 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 8
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451 0000 80B5     		push	{r7, lr}
 452              	.LCFI15:
 453              		.cfi_def_cfa_offset 8
 454              		.cfi_offset 7, -8
 455              		.cfi_offset 14, -4
 456 0002 82B0     		sub	sp, sp, #8
 457              	.LCFI16:
 458              		.cfi_def_cfa_offset 16
 459 0004 00AF     		add	r7, sp, #0
 460              	.LCFI17:
 461              		.cfi_def_cfa_register 7
 462 0006 7860     		str	r0, [r7, #4]
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   pOBInit->OptionType = (OPTIONBYTE_RDP | OPTIONBYTE_USER);
 463              		.loc 1 332 0
 464 0008 7B68     		ldr	r3, [r7, #4]
 465 000a 0622     		movs	r2, #6
 466 000c 1A60     		str	r2, [r3]
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->WRPArea == OB_WRPAREA_BANK1_AREAA) || (pOBInit->WRPArea == OB_WRPAREA_BANK1_AREAB) |
 467              		.loc 1 335 0
 468 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccblWEZv.s 			page 15


 469 0010 5B68     		ldr	r3, [r3, #4]
 470 0012 002B     		cmp	r3, #0
 471 0014 0BD0     		beq	.L29
 472              		.loc 1 335 0 is_stmt 0 discriminator 1
 473 0016 7B68     		ldr	r3, [r7, #4]
 474 0018 5B68     		ldr	r3, [r3, #4]
 475 001a 012B     		cmp	r3, #1
 476 001c 07D0     		beq	.L29
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****      (pOBInit->WRPArea == OB_WRPAREA_BANK2_AREAA) || (pOBInit->WRPArea == OB_WRPAREA_BANK2_AREAB))
 477              		.loc 1 336 0 is_stmt 1 discriminator 2
 478 001e 7B68     		ldr	r3, [r7, #4]
 479 0020 5B68     		ldr	r3, [r3, #4]
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****      (pOBInit->WRPArea == OB_WRPAREA_BANK2_AREAA) || (pOBInit->WRPArea == OB_WRPAREA_BANK2_AREAB))
 480              		.loc 1 335 0 discriminator 2
 481 0022 022B     		cmp	r3, #2
 482 0024 03D0     		beq	.L29
 483              		.loc 1 336 0
 484 0026 7B68     		ldr	r3, [r7, #4]
 485 0028 5B68     		ldr	r3, [r3, #4]
 486 002a 042B     		cmp	r3, #4
 487 002c 0FD1     		bne	.L30
 488              	.L29:
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #else
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->WRPArea == OB_WRPAREA_BANK1_AREAA) || (pOBInit->WRPArea == OB_WRPAREA_BANK1_AREAB))
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pOBInit->OptionType |= OPTIONBYTE_WRP;
 489              		.loc 1 341 0
 490 002e 7B68     		ldr	r3, [r7, #4]
 491 0030 1B68     		ldr	r3, [r3]
 492 0032 43F00102 		orr	r2, r3, #1
 493 0036 7B68     		ldr	r3, [r7, #4]
 494 0038 1A60     		str	r2, [r3]
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Get write protection on the selected area */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   FLASH_OB_GetWRP(pOBInit->WRPArea, &(pOBInit->WRPStartOffset), &(pOBInit->WRPEndOffset));
 495              		.loc 1 343 0
 496 003a 7B68     		ldr	r3, [r7, #4]
 497 003c 5868     		ldr	r0, [r3, #4]
 498 003e 7B68     		ldr	r3, [r7, #4]
 499 0040 03F10801 		add	r1, r3, #8
 500 0044 7B68     		ldr	r3, [r7, #4]
 501 0046 0C33     		adds	r3, r3, #12
 502 0048 1A46     		mov	r2, r3
 503 004a FFF7FEFF 		bl	FLASH_OB_GetWRP
 504              	.L30:
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Get Read protection level */
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   pOBInit->RDPLevel = FLASH_OB_GetRDP();
 505              		.loc 1 347 0
 506 004e FFF7FEFF 		bl	FLASH_OB_GetRDP
 507 0052 0246     		mov	r2, r0
 508 0054 7B68     		ldr	r3, [r7, #4]
 509 0056 1A61     		str	r2, [r3, #16]
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Get the user option bytes */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
ARM GAS  /tmp/ccblWEZv.s 			page 16


 510              		.loc 1 350 0
 511 0058 FFF7FEFF 		bl	FLASH_OB_GetUser
 512 005c 0246     		mov	r2, r0
 513 005e 7B68     		ldr	r3, [r7, #4]
 514 0060 9A61     		str	r2, [r3, #24]
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((pOBInit->PCROPConfig == FLASH_BANK_1) || (pOBInit->PCROPConfig == FLASH_BANK_2))
 515              		.loc 1 353 0
 516 0062 7B68     		ldr	r3, [r7, #4]
 517 0064 DB69     		ldr	r3, [r3, #28]
 518 0066 012B     		cmp	r3, #1
 519 0068 03D0     		beq	.L31
 520              		.loc 1 353 0 is_stmt 0 discriminator 1
 521 006a 7B68     		ldr	r3, [r7, #4]
 522 006c DB69     		ldr	r3, [r3, #28]
 523 006e 022B     		cmp	r3, #2
 524 0070 10D1     		bne	.L33
 525              	.L31:
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #else
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(pOBInit->PCROPConfig == FLASH_BANK_1)
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif    
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     pOBInit->OptionType |= OPTIONBYTE_PCROP;
 526              		.loc 1 358 0 is_stmt 1
 527 0072 7B68     		ldr	r3, [r7, #4]
 528 0074 1B68     		ldr	r3, [r3]
 529 0076 43F00802 		orr	r2, r3, #8
 530 007a 7B68     		ldr	r3, [r7, #4]
 531 007c 1A60     		str	r2, [r3]
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Get the Proprietary code readout protection */
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   FLASH_OB_GetPCROP(&(pOBInit->PCROPConfig), &(pOBInit->PCROPStartAddr), &(pOBInit->PCROPEndAddr));
 532              		.loc 1 360 0
 533 007e 7B68     		ldr	r3, [r7, #4]
 534 0080 03F11C00 		add	r0, r3, #28
 535 0084 7B68     		ldr	r3, [r7, #4]
 536 0086 03F12001 		add	r1, r3, #32
 537 008a 7B68     		ldr	r3, [r7, #4]
 538 008c 2433     		adds	r3, r3, #36
 539 008e 1A46     		mov	r2, r3
 540 0090 FFF7FEFF 		bl	FLASH_OB_GetPCROP
 541              	.L33:
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 542              		.loc 1 362 0
 543 0094 00BF     		nop
 544 0096 0837     		adds	r7, r7, #8
 545              	.LCFI18:
 546              		.cfi_def_cfa_offset 8
 547 0098 BD46     		mov	sp, r7
 548              	.LCFI19:
 549              		.cfi_def_cfa_register 13
 550              		@ sp needed
 551 009a 80BD     		pop	{r7, pc}
 552              		.cfi_endproc
 553              	.LFE129:
 555              		.section	.text.FLASH_MassErase,"ax",%progbits
ARM GAS  /tmp/ccblWEZv.s 			page 17


 556              		.align	1
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 560              		.fpu fpv4-sp-d16
 562              	FLASH_MassErase:
 563              	.LFB130:
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @}
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */ 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @}
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */ 
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /* Private functions ---------------------------------------------------------*/
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @{
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Mass erase of FLASH memory.
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  Banks: Banks to be erased
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Bank2 to be erased
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_BOTH: Bank1 and Bank2 to be erased
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval None
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static void FLASH_MassErase(uint32_t Banks)
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 564              		.loc 1 387 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 8
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569 0000 80B4     		push	{r7}
 570              	.LCFI20:
 571              		.cfi_def_cfa_offset 4
 572              		.cfi_offset 7, -4
 573 0002 83B0     		sub	sp, sp, #12
 574              	.LCFI21:
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              	.LCFI22:
 578              		.cfi_def_cfa_register 7
 579 0006 7860     		str	r0, [r7, #4]
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Set the Mass Erase Bit for the bank 1 if requested */
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) != RESET)
 580              		.loc 1 392 0
 581 0008 7B68     		ldr	r3, [r7, #4]
 582 000a 03F00103 		and	r3, r3, #1
 583 000e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccblWEZv.s 			page 18


 584 0010 05D0     		beq	.L35
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_MER1);
 585              		.loc 1 394 0
 586 0012 0E4A     		ldr	r2, .L37
 587 0014 0D4B     		ldr	r3, .L37
 588 0016 5B69     		ldr	r3, [r3, #20]
 589 0018 43F00403 		orr	r3, r3, #4
 590 001c 5361     		str	r3, [r2, #20]
 591              	.L35:
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Set the Mass Erase Bit for the bank 2 if requested */
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_2) != RESET)
 592              		.loc 1 399 0
 593 001e 7B68     		ldr	r3, [r7, #4]
 594 0020 03F00203 		and	r3, r3, #2
 595 0024 002B     		cmp	r3, #0
 596 0026 05D0     		beq	.L36
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_MER2);
 597              		.loc 1 401 0
 598 0028 084A     		ldr	r2, .L37
 599 002a 084B     		ldr	r3, .L37
 600 002c 5B69     		ldr	r3, [r3, #20]
 601 002e 43F40043 		orr	r3, r3, #32768
 602 0032 5361     		str	r3, [r2, #20]
 603              	.L36:
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Proceed to erase all sectors */
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   SET_BIT(FLASH->CR, FLASH_CR_STRT);
 604              		.loc 1 406 0
 605 0034 054A     		ldr	r2, .L37
 606 0036 054B     		ldr	r3, .L37
 607 0038 5B69     		ldr	r3, [r3, #20]
 608 003a 43F48033 		orr	r3, r3, #65536
 609 003e 5361     		str	r3, [r2, #20]
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 610              		.loc 1 407 0
 611 0040 00BF     		nop
 612 0042 0C37     		adds	r7, r7, #12
 613              	.LCFI23:
 614              		.cfi_def_cfa_offset 4
 615 0044 BD46     		mov	sp, r7
 616              	.LCFI24:
 617              		.cfi_def_cfa_register 13
 618              		@ sp needed
 619 0046 5DF8047B 		ldr	r7, [sp], #4
 620              	.LCFI25:
 621              		.cfi_restore 7
 622              		.cfi_def_cfa_offset 0
 623 004a 7047     		bx	lr
 624              	.L38:
 625              		.align	2
ARM GAS  /tmp/ccblWEZv.s 			page 19


 626              	.L37:
 627 004c 00200240 		.word	1073881088
 628              		.cfi_endproc
 629              	.LFE130:
 631              		.section	.text.FLASH_PageErase,"ax",%progbits
 632              		.align	1
 633              		.global	FLASH_PageErase
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv4-sp-d16
 639              	FLASH_PageErase:
 640              	.LFB131:
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory page.
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  Page: FLASH page to erase
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         This parameter must be a value between 0 and (max number of pages in the bank - 1)     
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  Banks: Bank(s) where the page will be erased
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be one or a combination of the following values:
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Page in bank 1 to be erased
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_2: Page in bank 2 to be erased
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval None
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** void FLASH_PageErase(uint32_t Page, uint32_t Banks)
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 641              		.loc 1 420 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 16
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646 0000 80B4     		push	{r7}
 647              	.LCFI26:
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 85B0     		sub	sp, sp, #20
 651              	.LCFI27:
 652              		.cfi_def_cfa_offset 24
 653 0004 00AF     		add	r7, sp, #0
 654              	.LCFI28:
 655              		.cfi_def_cfa_register 7
 656 0006 7860     		str	r0, [r7, #4]
 657 0008 3960     		str	r1, [r7]
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PAGE(Page));
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(Banks));
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if((Banks & FLASH_BANK_1) != RESET)
 658              		.loc 1 426 0
 659 000a 3B68     		ldr	r3, [r7]
 660 000c 03F00103 		and	r3, r3, #1
 661 0010 002B     		cmp	r3, #0
 662 0012 06D0     		beq	.L40
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_BKER);
 663              		.loc 1 428 0
ARM GAS  /tmp/ccblWEZv.s 			page 20


 664 0014 194A     		ldr	r2, .L43
 665 0016 194B     		ldr	r3, .L43
 666 0018 5B69     		ldr	r3, [r3, #20]
 667 001a 23F40063 		bic	r3, r3, #2048
 668 001e 5361     		str	r3, [r2, #20]
 669 0020 05E0     		b	.L41
 670              	.L40:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_BKER);
 671              		.loc 1 432 0
 672 0022 164A     		ldr	r2, .L43
 673 0024 154B     		ldr	r3, .L43
 674 0026 5B69     		ldr	r3, [r3, #20]
 675 0028 43F40063 		orr	r3, r3, #2048
 676 002c 5361     		str	r3, [r2, #20]
 677              	.L41:
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Proceed to erase the page */
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   MODIFY_REG(FLASH->CR, FLASH_CR_PNB, (Page << POSITION_VAL(FLASH_CR_PNB)));
 678              		.loc 1 437 0
 679 002e 1348     		ldr	r0, .L43
 680 0030 124B     		ldr	r3, .L43
 681 0032 5B69     		ldr	r3, [r3, #20]
 682 0034 23F4FF62 		bic	r2, r3, #2040
 683 0038 4FF4FF63 		mov	r3, #2040
 684 003c FB60     		str	r3, [r7, #12]
 685              	.LBB4:
 686              	.LBB5:
 687              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
ARM GAS  /tmp/ccblWEZv.s 			page 21


  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccblWEZv.s 			page 22


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /tmp/ccblWEZv.s 			page 23


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
ARM GAS  /tmp/ccblWEZv.s 			page 24


 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /tmp/ccblWEZv.s 			page 25


 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccblWEZv.s 			page 26


 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /tmp/ccblWEZv.s 			page 27


 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /tmp/ccblWEZv.s 			page 28


 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
ARM GAS  /tmp/ccblWEZv.s 			page 29


 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 688              		.loc 2 531 0
 689 003e FB68     		ldr	r3, [r7, #12]
 690              		.syntax unified
 691              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 692 0040 93FAA3F3 		rbit r3, r3
 693              	@ 0 "" 2
ARM GAS  /tmp/ccblWEZv.s 			page 30


 694              		.thumb
 695              		.syntax unified
 696 0044 BB60     		str	r3, [r7, #8]
 532:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 697              		.loc 2 544 0
 698 0046 BB68     		ldr	r3, [r7, #8]
 699              	.LBE5:
 700              	.LBE4:
 701              		.loc 1 437 0
 702 0048 B3FA83F3 		clz	r3, r3
 703 004c 7968     		ldr	r1, [r7, #4]
 704 004e 01FA03F3 		lsl	r3, r1, r3
 705 0052 1343     		orrs	r3, r3, r2
 706 0054 4361     		str	r3, [r0, #20]
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   SET_BIT(FLASH->CR, FLASH_CR_PER);
 707              		.loc 1 438 0
 708 0056 094A     		ldr	r2, .L43
 709 0058 084B     		ldr	r3, .L43
 710 005a 5B69     		ldr	r3, [r3, #20]
 711 005c 43F00203 		orr	r3, r3, #2
 712 0060 5361     		str	r3, [r2, #20]
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   SET_BIT(FLASH->CR, FLASH_CR_STRT);
 713              		.loc 1 439 0
 714 0062 064A     		ldr	r2, .L43
 715 0064 054B     		ldr	r3, .L43
 716 0066 5B69     		ldr	r3, [r3, #20]
 717 0068 43F48033 		orr	r3, r3, #65536
 718 006c 5361     		str	r3, [r2, #20]
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 719              		.loc 1 440 0
 720 006e 00BF     		nop
 721 0070 1437     		adds	r7, r7, #20
 722              	.LCFI29:
 723              		.cfi_def_cfa_offset 4
 724 0072 BD46     		mov	sp, r7
 725              	.LCFI30:
 726              		.cfi_def_cfa_register 13
 727              		@ sp needed
 728 0074 5DF8047B 		ldr	r7, [sp], #4
 729              	.LCFI31:
 730              		.cfi_restore 7
 731              		.cfi_def_cfa_offset 0
 732 0078 7047     		bx	lr
 733              	.L44:
 734 007a 00BF     		.align	2
ARM GAS  /tmp/ccblWEZv.s 			page 31


 735              	.L43:
 736 007c 00200240 		.word	1073881088
 737              		.cfi_endproc
 738              	.LFE131:
 740              		.section	.text.FLASH_FlushCaches,"ax",%progbits
 741              		.align	1
 742              		.global	FLASH_FlushCaches
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu fpv4-sp-d16
 748              	FLASH_FlushCaches:
 749              	.LFB132:
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Flush the instruction and data caches.
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval None
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** void FLASH_FlushCaches(void)
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 750              		.loc 1 447 0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 1, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 755 0000 80B4     		push	{r7}
 756              	.LCFI32:
 757              		.cfi_def_cfa_offset 4
 758              		.cfi_offset 7, -4
 759 0002 00AF     		add	r7, sp, #0
 760              	.LCFI33:
 761              		.cfi_def_cfa_register 7
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Flush instruction cache  */
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 762              		.loc 1 449 0
 763 0004 204B     		ldr	r3, .L49
 764 0006 1B68     		ldr	r3, [r3]
 765 0008 03F40073 		and	r3, r3, #512
 766 000c 002B     		cmp	r3, #0
 767 000e 17D0     		beq	.L46
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Disable instruction cache  */
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 768              		.loc 1 452 0
 769 0010 1D4A     		ldr	r2, .L49
 770 0012 1D4B     		ldr	r3, .L49
 771 0014 1B68     		ldr	r3, [r3]
 772 0016 23F40073 		bic	r3, r3, #512
 773 001a 1360     		str	r3, [r2]
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Reset instruction cache */
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 774              		.loc 1 454 0
 775 001c 1A4A     		ldr	r2, .L49
 776 001e 1A4B     		ldr	r3, .L49
 777 0020 1B68     		ldr	r3, [r3]
 778 0022 43F40063 		orr	r3, r3, #2048
 779 0026 1360     		str	r3, [r2]
ARM GAS  /tmp/ccblWEZv.s 			page 32


 780 0028 174A     		ldr	r2, .L49
 781 002a 174B     		ldr	r3, .L49
 782 002c 1B68     		ldr	r3, [r3]
 783 002e 23F40063 		bic	r3, r3, #2048
 784 0032 1360     		str	r3, [r2]
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Enable instruction cache */
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 785              		.loc 1 456 0
 786 0034 144A     		ldr	r2, .L49
 787 0036 144B     		ldr	r3, .L49
 788 0038 1B68     		ldr	r3, [r3]
 789 003a 43F40073 		orr	r3, r3, #512
 790 003e 1360     		str	r3, [r2]
 791              	.L46:
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Flush data cache */
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 792              		.loc 1 460 0
 793 0040 114B     		ldr	r3, .L49
 794 0042 1B68     		ldr	r3, [r3]
 795 0044 03F48063 		and	r3, r3, #1024
 796 0048 002B     		cmp	r3, #0
 797 004a 17D0     		beq	.L48
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Disable data cache  */
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 798              		.loc 1 463 0
 799 004c 0E4A     		ldr	r2, .L49
 800 004e 0E4B     		ldr	r3, .L49
 801 0050 1B68     		ldr	r3, [r3]
 802 0052 23F48063 		bic	r3, r3, #1024
 803 0056 1360     		str	r3, [r2]
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Reset data cache */
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_RESET();
 804              		.loc 1 465 0
 805 0058 0B4A     		ldr	r2, .L49
 806 005a 0B4B     		ldr	r3, .L49
 807 005c 1B68     		ldr	r3, [r3]
 808 005e 43F48053 		orr	r3, r3, #4096
 809 0062 1360     		str	r3, [r2]
 810 0064 084A     		ldr	r2, .L49
 811 0066 084B     		ldr	r3, .L49
 812 0068 1B68     		ldr	r3, [r3]
 813 006a 23F48053 		bic	r3, r3, #4096
 814 006e 1360     		str	r3, [r2]
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Enable data cache */
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_ENABLE();
 815              		.loc 1 467 0
 816 0070 054A     		ldr	r2, .L49
 817 0072 054B     		ldr	r3, .L49
 818 0074 1B68     		ldr	r3, [r3]
 819 0076 43F48063 		orr	r3, r3, #1024
 820 007a 1360     		str	r3, [r2]
 821              	.L48:
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
ARM GAS  /tmp/ccblWEZv.s 			page 33


 822              		.loc 1 469 0
 823 007c 00BF     		nop
 824 007e BD46     		mov	sp, r7
 825              	.LCFI34:
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 0080 5DF8047B 		ldr	r7, [sp], #4
 829              	.LCFI35:
 830              		.cfi_restore 7
 831              		.cfi_def_cfa_offset 0
 832 0084 7047     		bx	lr
 833              	.L50:
 834 0086 00BF     		.align	2
 835              	.L49:
 836 0088 00200240 		.word	1073881088
 837              		.cfi_endproc
 838              	.LFE132:
 840              		.section	.text.FLASH_OB_WRPConfig,"ax",%progbits
 841              		.align	1
 842              		.syntax unified
 843              		.thumb
 844              		.thumb_func
 845              		.fpu fpv4-sp-d16
 847              	FLASH_OB_WRPConfig:
 848              	.LFB133:
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Configure the write protection of the desired pages.
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         it is not possible to program or erase Flash memory if the CPU debug 
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         features are connected (JTAG or single wire) or boot code is being 
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         executed from RAM or System flash, even if WRP is not activated. 
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To configure the WRP options, the option lock bit OPTLOCK must be 
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         cleared with the call of the HAL_FLASH_OB_Unlock() function.
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To validate the WRP options, the option bytes must be reloaded 
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  WRPArea: specifies the area to be configured.
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK1_AREAA: Flash Bank 1 Area A                      
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK1_AREAB: Flash Bank 1 Area B                      
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK2_AREAA: Flash Bank 2 Area A  (don't apply for STM32L43x/STM32L4
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK2_AREAB: Flash Bank 2 Area B  (don't apply for STM32L43x/STM32L4
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  WRPStartOffset: specifies the start page of the write protected area
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be page number between 0 and (max number of pages in the bank - 1) 
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  WRDPEndOffset: specifies the end page of the write protected area
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be page number between WRPStartOffset and (max number of pages in t
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL Status
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_WRPConfig(uint32_t WRPArea, uint32_t WRPStartOffset, uint32_t WRD
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 849              		.loc 1 499 0
 850              		.cfi_startproc
ARM GAS  /tmp/ccblWEZv.s 			page 34


 851              		@ args = 0, pretend = 0, frame = 24
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853 0000 80B5     		push	{r7, lr}
 854              	.LCFI36:
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 86B0     		sub	sp, sp, #24
 859              	.LCFI37:
 860              		.cfi_def_cfa_offset 32
 861 0004 00AF     		add	r7, sp, #0
 862              	.LCFI38:
 863              		.cfi_def_cfa_register 7
 864 0006 F860     		str	r0, [r7, #12]
 865 0008 B960     		str	r1, [r7, #8]
 866 000a 7A60     		str	r2, [r7, #4]
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 867              		.loc 1 500 0
 868 000c 0023     		movs	r3, #0
 869 000e FB75     		strb	r3, [r7, #23]
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRPAREA(WRPArea));
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PAGE(WRPStartOffset));
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PAGE(WRDPEndOffset));
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 870              		.loc 1 508 0
 871 0010 4CF25030 		movw	r0, #50000
 872 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 873 0018 0346     		mov	r3, r0
 874 001a FB75     		strb	r3, [r7, #23]
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 875              		.loc 1 510 0
 876 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 877 001e 002B     		cmp	r3, #0
 878 0020 4CD1     		bne	.L52
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the write protected area */
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if(WRPArea == OB_WRPAREA_BANK1_AREAA)
 879              		.loc 1 513 0
 880 0022 FB68     		ldr	r3, [r7, #12]
 881 0024 002B     		cmp	r3, #0
 882 0026 0BD1     		bne	.L53
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->WRP1AR, (FLASH_WRP1AR_WRP1A_STRT | FLASH_WRP1AR_WRP1A_END), 
 883              		.loc 1 515 0
 884 0028 2748     		ldr	r0, .L58
 885 002a 274B     		ldr	r3, .L58
 886 002c DB6A     		ldr	r3, [r3, #44]
 887 002e 03F0FF22 		and	r2, r3, #-16711936
 888 0032 7B68     		ldr	r3, [r7, #4]
 889 0034 1904     		lsls	r1, r3, #16
 890 0036 BB68     		ldr	r3, [r7, #8]
 891 0038 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccblWEZv.s 			page 35


 892 003a 1343     		orrs	r3, r3, r2
 893 003c C362     		str	r3, [r0, #44]
 894 003e 2BE0     		b	.L54
 895              	.L53:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                  (WRPStartOffset | (WRDPEndOffset << 16)));
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     else if(WRPArea == OB_WRPAREA_BANK1_AREAB)
 896              		.loc 1 518 0
 897 0040 FB68     		ldr	r3, [r7, #12]
 898 0042 012B     		cmp	r3, #1
 899 0044 0BD1     		bne	.L55
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->WRP1BR, (FLASH_WRP1BR_WRP1B_STRT | FLASH_WRP1BR_WRP1B_END), 
 900              		.loc 1 520 0
 901 0046 2048     		ldr	r0, .L58
 902 0048 1F4B     		ldr	r3, .L58
 903 004a 1B6B     		ldr	r3, [r3, #48]
 904 004c 03F0FF22 		and	r2, r3, #-16711936
 905 0050 7B68     		ldr	r3, [r7, #4]
 906 0052 1904     		lsls	r1, r3, #16
 907 0054 BB68     		ldr	r3, [r7, #8]
 908 0056 0B43     		orrs	r3, r3, r1
 909 0058 1343     		orrs	r3, r3, r2
 910 005a 0363     		str	r3, [r0, #48]
 911 005c 1CE0     		b	.L54
 912              	.L55:
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                  (WRPStartOffset | (WRDPEndOffset << 16)));
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     else if(WRPArea == OB_WRPAREA_BANK2_AREAA)
 913              		.loc 1 524 0
 914 005e FB68     		ldr	r3, [r7, #12]
 915 0060 022B     		cmp	r3, #2
 916 0062 0BD1     		bne	.L56
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->WRP2AR, (FLASH_WRP2AR_WRP2A_STRT | FLASH_WRP2AR_WRP2A_END), 
 917              		.loc 1 526 0
 918 0064 1848     		ldr	r0, .L58
 919 0066 184B     		ldr	r3, .L58
 920 0068 DB6C     		ldr	r3, [r3, #76]
 921 006a 03F0FF22 		and	r2, r3, #-16711936
 922 006e 7B68     		ldr	r3, [r7, #4]
 923 0070 1904     		lsls	r1, r3, #16
 924 0072 BB68     		ldr	r3, [r7, #8]
 925 0074 0B43     		orrs	r3, r3, r1
 926 0076 1343     		orrs	r3, r3, r2
 927 0078 C364     		str	r3, [r0, #76]
 928 007a 0DE0     		b	.L54
 929              	.L56:
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                  (WRPStartOffset | (WRDPEndOffset << 16)));
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     else if(WRPArea == OB_WRPAREA_BANK2_AREAB)
 930              		.loc 1 529 0
 931 007c FB68     		ldr	r3, [r7, #12]
 932 007e 042B     		cmp	r3, #4
 933 0080 0AD1     		bne	.L54
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
ARM GAS  /tmp/ccblWEZv.s 			page 36


 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->WRP2BR, (FLASH_WRP2BR_WRP2B_STRT | FLASH_WRP2BR_WRP2B_END), 
 934              		.loc 1 531 0
 935 0082 1148     		ldr	r0, .L58
 936 0084 104B     		ldr	r3, .L58
 937 0086 1B6D     		ldr	r3, [r3, #80]
 938 0088 03F0FF22 		and	r2, r3, #-16711936
 939 008c 7B68     		ldr	r3, [r7, #4]
 940 008e 1904     		lsls	r1, r3, #16
 941 0090 BB68     		ldr	r3, [r7, #8]
 942 0092 0B43     		orrs	r3, r3, r1
 943 0094 1343     		orrs	r3, r3, r2
 944 0096 0365     		str	r3, [r0, #80]
 945              	.L54:
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****                  (WRPStartOffset | (WRDPEndOffset << 16)));
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Set OPTSTRT Bit */
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 946              		.loc 1 537 0
 947 0098 0B4A     		ldr	r2, .L58
 948 009a 0B4B     		ldr	r3, .L58
 949 009c 5B69     		ldr	r3, [r3, #20]
 950 009e 43F40033 		orr	r3, r3, #131072
 951 00a2 5361     		str	r3, [r2, #20]
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 952              		.loc 1 540 0
 953 00a4 4CF25030 		movw	r0, #50000
 954 00a8 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 955 00ac 0346     		mov	r3, r0
 956 00ae FB75     		strb	r3, [r7, #23]
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* If the option byte program operation is completed, disable the OPTSTRT Bit */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 957              		.loc 1 543 0
 958 00b0 054A     		ldr	r2, .L58
 959 00b2 054B     		ldr	r3, .L58
 960 00b4 5B69     		ldr	r3, [r3, #20]
 961 00b6 23F40033 		bic	r3, r3, #131072
 962 00ba 5361     		str	r3, [r2, #20]
 963              	.L52:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;
 964              		.loc 1 546 0
 965 00bc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 966              		.loc 1 547 0
 967 00be 1846     		mov	r0, r3
 968 00c0 1837     		adds	r7, r7, #24
 969              	.LCFI39:
 970              		.cfi_def_cfa_offset 8
 971 00c2 BD46     		mov	sp, r7
 972              	.LCFI40:
 973              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccblWEZv.s 			page 37


 974              		@ sp needed
 975 00c4 80BD     		pop	{r7, pc}
 976              	.L59:
 977 00c6 00BF     		.align	2
 978              	.L58:
 979 00c8 00200240 		.word	1073881088
 980              		.cfi_endproc
 981              	.LFE133:
 983              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 984              		.align	1
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 988              		.fpu fpv4-sp-d16
 990              	FLASH_OB_RDPConfig:
 991              	.LFB134:
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *    
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To configure the RDP level, the option lock bit OPTLOCK must be 
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         cleared with the call of the HAL_FLASH_OB_Unlock() function.
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To validate the RDP level, the option bytes must be reloaded 
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   !!! Warning : When enabling OB_RDP level 2 it's no more possible 
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         to go back to level 1 or 0 !!!
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *    
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  RDPLevel: specifies the read protection level.
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL status
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDPConfig(uint32_t RDPLevel)
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 992              		.loc 1 568 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 16
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 80B5     		push	{r7, lr}
 997              	.LCFI41:
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 7, -8
 1000              		.cfi_offset 14, -4
 1001 0002 84B0     		sub	sp, sp, #16
 1002              	.LCFI42:
 1003              		.cfi_def_cfa_offset 24
 1004 0004 00AF     		add	r7, sp, #0
 1005              	.LCFI43:
 1006              		.cfi_def_cfa_register 7
 1007 0006 7860     		str	r0, [r7, #4]
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1008              		.loc 1 569 0
 1009 0008 0023     		movs	r3, #0
 1010 000a FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccblWEZv.s 			page 38


 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(RDPLevel));
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1011              		.loc 1 575 0
 1012 000c 4CF25030 		movw	r0, #50000
 1013 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1014 0014 0346     		mov	r3, r0
 1015 0016 FB73     		strb	r3, [r7, #15]
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1016              		.loc 1 577 0
 1017 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1018 001a 002B     		cmp	r3, #0
 1019 001c 19D1     		bne	.L61
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   { 
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the RDP level in the option bytes register */
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->OPTR, FLASH_OPTR_RDP, RDPLevel);
 1020              		.loc 1 580 0
 1021 001e 0F49     		ldr	r1, .L63
 1022 0020 0E4B     		ldr	r3, .L63
 1023 0022 1B6A     		ldr	r3, [r3, #32]
 1024 0024 23F0FF02 		bic	r2, r3, #255
 1025 0028 7B68     		ldr	r3, [r7, #4]
 1026 002a 1343     		orrs	r3, r3, r2
 1027 002c 0B62     		str	r3, [r1, #32]
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Set OPTSTRT Bit */
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 1028              		.loc 1 583 0
 1029 002e 0B4A     		ldr	r2, .L63
 1030 0030 0A4B     		ldr	r3, .L63
 1031 0032 5B69     		ldr	r3, [r3, #20]
 1032 0034 43F40033 		orr	r3, r3, #131072
 1033 0038 5361     		str	r3, [r2, #20]
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1034              		.loc 1 586 0
 1035 003a 4CF25030 		movw	r0, #50000
 1036 003e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1037 0042 0346     		mov	r3, r0
 1038 0044 FB73     		strb	r3, [r7, #15]
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* If the option byte program operation is completed, disable the OPTSTRT Bit */
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 1039              		.loc 1 589 0
 1040 0046 054A     		ldr	r2, .L63
 1041 0048 044B     		ldr	r3, .L63
 1042 004a 5B69     		ldr	r3, [r3, #20]
 1043 004c 23F40033 		bic	r3, r3, #131072
 1044 0050 5361     		str	r3, [r2, #20]
 1045              	.L61:
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
ARM GAS  /tmp/ccblWEZv.s 			page 39


 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;            
 1046              		.loc 1 592 0
 1047 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1048              		.loc 1 593 0
 1049 0054 1846     		mov	r0, r3
 1050 0056 1037     		adds	r7, r7, #16
 1051              	.LCFI44:
 1052              		.cfi_def_cfa_offset 8
 1053 0058 BD46     		mov	sp, r7
 1054              	.LCFI45:
 1055              		.cfi_def_cfa_register 13
 1056              		@ sp needed
 1057 005a 80BD     		pop	{r7, pc}
 1058              	.L64:
 1059              		.align	2
 1060              	.L63:
 1061 005c 00200240 		.word	1073881088
 1062              		.cfi_endproc
 1063              	.LFE134:
 1065              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 1066              		.align	1
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1070              		.fpu fpv4-sp-d16
 1072              	FLASH_OB_UserConfig:
 1073              	.LFB135:
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte.    
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To configure the user option bytes, the option lock bit OPTLOCK must
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         be cleared with the call of the HAL_FLASH_OB_Unlock() function.
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To validate the user option bytes, the option bytes must be reloaded 
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  UserType: The FLASH User Option Bytes to be modified 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  UserConfig: The FLASH User Option Bytes values: 
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         BOR_LEV(Bit8-10), nRST_STOP(Bit12), nRST_STDBY(Bit13), IWDG_SW(Bit16),
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         IWDG_STOP(Bit17), IWDG_STDBY(Bit18), WWDG_SW(Bit19), BFB2(Bit20), 
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         DUALBANK(Bit21), nBOOT1(Bit23), SRAM2_PE(Bit24) and SRAM2_RST(Bit25). 
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *   
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL status
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint32_t UserType, uint32_t UserConfig)
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 1074              		.loc 1 612 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 24
 1077              		@ frame_needed = 1, uses_anonymous_args = 0
 1078 0000 80B5     		push	{r7, lr}
 1079              	.LCFI46:
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 86B0     		sub	sp, sp, #24
ARM GAS  /tmp/ccblWEZv.s 			page 40


 1084              	.LCFI47:
 1085              		.cfi_def_cfa_offset 32
 1086 0004 00AF     		add	r7, sp, #0
 1087              	.LCFI48:
 1088              		.cfi_def_cfa_register 7
 1089 0006 7860     		str	r0, [r7, #4]
 1090 0008 3960     		str	r1, [r7]
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t optr_reg_val = 0;
 1091              		.loc 1 613 0
 1092 000a 0023     		movs	r3, #0
 1093 000c 7B61     		str	r3, [r7, #20]
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t optr_reg_mask = 0;
 1094              		.loc 1 614 0
 1095 000e 0023     		movs	r3, #0
 1096 0010 3B61     		str	r3, [r7, #16]
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1097              		.loc 1 615 0
 1098 0012 0023     		movs	r3, #0
 1099 0014 FB73     		strb	r3, [r7, #15]
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_OB_USER_TYPE(UserType));
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1100              		.loc 1 621 0
 1101 0016 4CF25030 		movw	r0, #50000
 1102 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1103 001e 0346     		mov	r3, r0
 1104 0020 FB73     		strb	r3, [r7, #15]
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1105              		.loc 1 623 0
 1106 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1107 0024 002B     		cmp	r3, #0
 1108 0026 40F0DE80 		bne	.L66
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   { 
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_BOR_LEV) != RESET)
 1109              		.loc 1 625 0
 1110 002a 7B68     		ldr	r3, [r7, #4]
 1111 002c 03F00103 		and	r3, r3, #1
 1112 0030 002B     		cmp	r3, #0
 1113 0032 09D0     		beq	.L67
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* BOR level option byte should be modified */
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_BOR_LEVEL(UserConfig & FLASH_OPTR_BOR_LEV));
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for BOR level option byte */
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_BOR_LEV);
 1114              		.loc 1 631 0
 1115 0034 3B68     		ldr	r3, [r7]
 1116 0036 03F4E063 		and	r3, r3, #1792
 1117 003a 7A69     		ldr	r2, [r7, #20]
 1118 003c 1343     		orrs	r3, r3, r2
 1119 003e 7B61     		str	r3, [r7, #20]
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_BOR_LEV;
 1120              		.loc 1 632 0
ARM GAS  /tmp/ccblWEZv.s 			page 41


 1121 0040 3B69     		ldr	r3, [r7, #16]
 1122 0042 43F4E063 		orr	r3, r3, #1792
 1123 0046 3B61     		str	r3, [r7, #16]
 1124              	.L67:
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_nRST_STOP) != RESET)
 1125              		.loc 1 635 0
 1126 0048 7B68     		ldr	r3, [r7, #4]
 1127 004a 03F00203 		and	r3, r3, #2
 1128 004e 002B     		cmp	r3, #0
 1129 0050 09D0     		beq	.L68
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* nRST_STOP option byte should be modified */
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_STOP(UserConfig & FLASH_OPTR_nRST_STOP));
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for nRST_STOP option byte */
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_nRST_STOP);
 1130              		.loc 1 641 0
 1131 0052 3B68     		ldr	r3, [r7]
 1132 0054 03F48053 		and	r3, r3, #4096
 1133 0058 7A69     		ldr	r2, [r7, #20]
 1134 005a 1343     		orrs	r3, r3, r2
 1135 005c 7B61     		str	r3, [r7, #20]
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_nRST_STOP;
 1136              		.loc 1 642 0
 1137 005e 3B69     		ldr	r3, [r7, #16]
 1138 0060 43F48053 		orr	r3, r3, #4096
 1139 0064 3B61     		str	r3, [r7, #16]
 1140              	.L68:
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_nRST_STDBY) != RESET)
 1141              		.loc 1 645 0
 1142 0066 7B68     		ldr	r3, [r7, #4]
 1143 0068 03F00403 		and	r3, r3, #4
 1144 006c 002B     		cmp	r3, #0
 1145 006e 09D0     		beq	.L69
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* nRST_STDBY option byte should be modified */
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_STANDBY(UserConfig & FLASH_OPTR_nRST_STDBY));
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for nRST_STDBY option byte */
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_nRST_STDBY);
 1146              		.loc 1 651 0
 1147 0070 3B68     		ldr	r3, [r7]
 1148 0072 03F40053 		and	r3, r3, #8192
 1149 0076 7A69     		ldr	r2, [r7, #20]
 1150 0078 1343     		orrs	r3, r3, r2
 1151 007a 7B61     		str	r3, [r7, #20]
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_nRST_STDBY;
 1152              		.loc 1 652 0
 1153 007c 3B69     		ldr	r3, [r7, #16]
 1154 007e 43F40053 		orr	r3, r3, #8192
 1155 0082 3B61     		str	r3, [r7, #16]
 1156              	.L69:
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
ARM GAS  /tmp/ccblWEZv.s 			page 42


 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_nRST_SHDW) != RESET)
 1157              		.loc 1 655 0
 1158 0084 7B68     		ldr	r3, [r7, #4]
 1159 0086 03F48053 		and	r3, r3, #4096
 1160 008a 002B     		cmp	r3, #0
 1161 008c 09D0     		beq	.L70
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* nRST_SHDW option byte should be modified */
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_SHUTDOWN(UserConfig & FLASH_OPTR_nRST_SHDW));
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for nRST_SHDW option byte */
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_nRST_SHDW);
 1162              		.loc 1 661 0
 1163 008e 3B68     		ldr	r3, [r7]
 1164 0090 03F48043 		and	r3, r3, #16384
 1165 0094 7A69     		ldr	r2, [r7, #20]
 1166 0096 1343     		orrs	r3, r3, r2
 1167 0098 7B61     		str	r3, [r7, #20]
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_nRST_SHDW;
 1168              		.loc 1 662 0
 1169 009a 3B69     		ldr	r3, [r7, #16]
 1170 009c 43F48043 		orr	r3, r3, #16384
 1171 00a0 3B61     		str	r3, [r7, #16]
 1172              	.L70:
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_IWDG_SW) != RESET)
 1173              		.loc 1 665 0
 1174 00a2 7B68     		ldr	r3, [r7, #4]
 1175 00a4 03F00803 		and	r3, r3, #8
 1176 00a8 002B     		cmp	r3, #0
 1177 00aa 09D0     		beq	.L71
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* IWDG_SW option byte should be modified */
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_IWDG(UserConfig & FLASH_OPTR_IWDG_SW));
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for IWDG_SW option byte */
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_IWDG_SW);
 1178              		.loc 1 671 0
 1179 00ac 3B68     		ldr	r3, [r7]
 1180 00ae 03F48033 		and	r3, r3, #65536
 1181 00b2 7A69     		ldr	r2, [r7, #20]
 1182 00b4 1343     		orrs	r3, r3, r2
 1183 00b6 7B61     		str	r3, [r7, #20]
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_IWDG_SW;
 1184              		.loc 1 672 0
 1185 00b8 3B69     		ldr	r3, [r7, #16]
 1186 00ba 43F48033 		orr	r3, r3, #65536
 1187 00be 3B61     		str	r3, [r7, #16]
 1188              	.L71:
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_IWDG_STOP) != RESET)
 1189              		.loc 1 675 0
 1190 00c0 7B68     		ldr	r3, [r7, #4]
 1191 00c2 03F01003 		and	r3, r3, #16
ARM GAS  /tmp/ccblWEZv.s 			page 43


 1192 00c6 002B     		cmp	r3, #0
 1193 00c8 09D0     		beq	.L72
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* IWDG_STOP option byte should be modified */
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_IWDG_STOP(UserConfig & FLASH_OPTR_IWDG_STOP));
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for IWDG_STOP option byte */
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_IWDG_STOP);
 1194              		.loc 1 681 0
 1195 00ca 3B68     		ldr	r3, [r7]
 1196 00cc 03F40033 		and	r3, r3, #131072
 1197 00d0 7A69     		ldr	r2, [r7, #20]
 1198 00d2 1343     		orrs	r3, r3, r2
 1199 00d4 7B61     		str	r3, [r7, #20]
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_IWDG_STOP;
 1200              		.loc 1 682 0
 1201 00d6 3B69     		ldr	r3, [r7, #16]
 1202 00d8 43F40033 		orr	r3, r3, #131072
 1203 00dc 3B61     		str	r3, [r7, #16]
 1204              	.L72:
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_IWDG_STDBY) != RESET)
 1205              		.loc 1 685 0
 1206 00de 7B68     		ldr	r3, [r7, #4]
 1207 00e0 03F02003 		and	r3, r3, #32
 1208 00e4 002B     		cmp	r3, #0
 1209 00e6 09D0     		beq	.L73
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* IWDG_STDBY option byte should be modified */
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_IWDG_STDBY(UserConfig & FLASH_OPTR_IWDG_STDBY));
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for IWDG_STDBY option byte */
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_IWDG_STDBY);
 1210              		.loc 1 691 0
 1211 00e8 3B68     		ldr	r3, [r7]
 1212 00ea 03F48023 		and	r3, r3, #262144
 1213 00ee 7A69     		ldr	r2, [r7, #20]
 1214 00f0 1343     		orrs	r3, r3, r2
 1215 00f2 7B61     		str	r3, [r7, #20]
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_IWDG_STDBY;
 1216              		.loc 1 692 0
 1217 00f4 3B69     		ldr	r3, [r7, #16]
 1218 00f6 43F48023 		orr	r3, r3, #262144
 1219 00fa 3B61     		str	r3, [r7, #16]
 1220              	.L73:
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_WWDG_SW) != RESET)
 1221              		.loc 1 695 0
 1222 00fc 7B68     		ldr	r3, [r7, #4]
 1223 00fe 03F04003 		and	r3, r3, #64
 1224 0102 002B     		cmp	r3, #0
 1225 0104 09D0     		beq	.L74
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* WWDG_SW option byte should be modified */
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_WWDG(UserConfig & FLASH_OPTR_WWDG_SW));
ARM GAS  /tmp/ccblWEZv.s 			page 44


 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for WWDG_SW option byte */
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_WWDG_SW);
 1226              		.loc 1 701 0
 1227 0106 3B68     		ldr	r3, [r7]
 1228 0108 03F40023 		and	r3, r3, #524288
 1229 010c 7A69     		ldr	r2, [r7, #20]
 1230 010e 1343     		orrs	r3, r3, r2
 1231 0110 7B61     		str	r3, [r7, #20]
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_WWDG_SW;
 1232              		.loc 1 702 0
 1233 0112 3B69     		ldr	r3, [r7, #16]
 1234 0114 43F40023 		orr	r3, r3, #524288
 1235 0118 3B61     		str	r3, [r7, #16]
 1236              	.L74:
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_BFB2) != RESET)
 1237              		.loc 1 706 0
 1238 011a 7B68     		ldr	r3, [r7, #4]
 1239 011c 03F08003 		and	r3, r3, #128
 1240 0120 002B     		cmp	r3, #0
 1241 0122 09D0     		beq	.L75
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* BFB2 option byte should be modified */
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_BFB2(UserConfig & FLASH_OPTR_BFB2));
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for BFB2 option byte */
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_BFB2);
 1242              		.loc 1 712 0
 1243 0124 3B68     		ldr	r3, [r7]
 1244 0126 03F48013 		and	r3, r3, #1048576
 1245 012a 7A69     		ldr	r2, [r7, #20]
 1246 012c 1343     		orrs	r3, r3, r2
 1247 012e 7B61     		str	r3, [r7, #20]
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_BFB2;
 1248              		.loc 1 713 0
 1249 0130 3B69     		ldr	r3, [r7, #16]
 1250 0132 43F48013 		orr	r3, r3, #1048576
 1251 0136 3B61     		str	r3, [r7, #16]
 1252              	.L75:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_DUALBANK) != RESET)
 1253              		.loc 1 716 0
 1254 0138 7B68     		ldr	r3, [r7, #4]
 1255 013a 03F48073 		and	r3, r3, #256
 1256 013e 002B     		cmp	r3, #0
 1257 0140 09D0     		beq	.L76
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* DUALBANK option byte should be modified */
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_DUALBANK(UserConfig & FLASH_OPTR_DUALBANK));
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for DUALBANK option byte */
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_DUALBANK);
 1258              		.loc 1 722 0
ARM GAS  /tmp/ccblWEZv.s 			page 45


 1259 0142 3B68     		ldr	r3, [r7]
 1260 0144 03F40013 		and	r3, r3, #2097152
 1261 0148 7A69     		ldr	r2, [r7, #20]
 1262 014a 1343     		orrs	r3, r3, r2
 1263 014c 7B61     		str	r3, [r7, #20]
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_DUALBANK;
 1264              		.loc 1 723 0
 1265 014e 3B69     		ldr	r3, [r7, #16]
 1266 0150 43F40013 		orr	r3, r3, #2097152
 1267 0154 3B61     		str	r3, [r7, #16]
 1268              	.L76:
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_nBOOT1) != RESET)
 1269              		.loc 1 727 0
 1270 0156 7B68     		ldr	r3, [r7, #4]
 1271 0158 03F40073 		and	r3, r3, #512
 1272 015c 002B     		cmp	r3, #0
 1273 015e 09D0     		beq	.L77
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* nBOOT1 option byte should be modified */
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_BOOT1(UserConfig & FLASH_OPTR_nBOOT1));
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for nBOOT1 option byte */
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_nBOOT1);
 1274              		.loc 1 733 0
 1275 0160 3B68     		ldr	r3, [r7]
 1276 0162 03F40003 		and	r3, r3, #8388608
 1277 0166 7A69     		ldr	r2, [r7, #20]
 1278 0168 1343     		orrs	r3, r3, r2
 1279 016a 7B61     		str	r3, [r7, #20]
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_nBOOT1;
 1280              		.loc 1 734 0
 1281 016c 3B69     		ldr	r3, [r7, #16]
 1282 016e 43F40003 		orr	r3, r3, #8388608
 1283 0172 3B61     		str	r3, [r7, #16]
 1284              	.L77:
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_SRAM2_PE) != RESET)
 1285              		.loc 1 737 0
 1286 0174 7B68     		ldr	r3, [r7, #4]
 1287 0176 03F48063 		and	r3, r3, #1024
 1288 017a 002B     		cmp	r3, #0
 1289 017c 09D0     		beq	.L78
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* SRAM2_PE option byte should be modified */
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_SRAM2_PARITY(UserConfig & FLASH_OPTR_SRAM2_PE));
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for SRAM2_PE option byte */
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_SRAM2_PE);
 1290              		.loc 1 743 0
 1291 017e 3B68     		ldr	r3, [r7]
 1292 0180 03F08073 		and	r3, r3, #16777216
 1293 0184 7A69     		ldr	r2, [r7, #20]
 1294 0186 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccblWEZv.s 			page 46


 1295 0188 7B61     		str	r3, [r7, #20]
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_SRAM2_PE;
 1296              		.loc 1 744 0
 1297 018a 3B69     		ldr	r3, [r7, #16]
 1298 018c 43F08073 		orr	r3, r3, #16777216
 1299 0190 3B61     		str	r3, [r7, #16]
 1300              	.L78:
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_SRAM2_RST) != RESET)
 1301              		.loc 1 747 0
 1302 0192 7B68     		ldr	r3, [r7, #4]
 1303 0194 03F40063 		and	r3, r3, #2048
 1304 0198 002B     		cmp	r3, #0
 1305 019a 09D0     		beq	.L79
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* SRAM2_RST option byte should be modified */
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_SRAM2_RST(UserConfig & FLASH_OPTR_SRAM2_RST));
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for SRAM2_RST option byte */
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_SRAM2_RST);
 1306              		.loc 1 753 0
 1307 019c 3B68     		ldr	r3, [r7]
 1308 019e 03F00073 		and	r3, r3, #33554432
 1309 01a2 7A69     		ldr	r2, [r7, #20]
 1310 01a4 1343     		orrs	r3, r3, r2
 1311 01a6 7B61     		str	r3, [r7, #20]
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_SRAM2_RST;
 1312              		.loc 1 754 0
 1313 01a8 3B69     		ldr	r3, [r7, #16]
 1314 01aa 43F00073 		orr	r3, r3, #33554432
 1315 01ae 3B61     		str	r3, [r7, #16]
 1316              	.L79:
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined (STM32L431xx) || defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_nSWBOOT0) != RESET)
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* nSWBOOT0 option byte should be modified */
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_SWBOOT0(UserConfig & FLASH_OPTR_nSWBOOT0));
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for nSWBOOT0 option byte */
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_nSWBOOT0);
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_nSWBOOT0;
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((UserType & OB_USER_nBOOT0) != RESET)
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* nBOOT0 option byte should be modified */
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       assert_param(IS_OB_USER_BOOT0(UserConfig & FLASH_OPTR_nBOOT0));
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       /* Set value and mask for nBOOT0 option byte */
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_val |= (UserConfig & FLASH_OPTR_nBOOT0);
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       optr_reg_mask |= FLASH_OPTR_nBOOT0;
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
ARM GAS  /tmp/ccblWEZv.s 			page 47


 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the option bytes register */
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->OPTR, optr_reg_mask, optr_reg_val);
 1317              		.loc 1 780 0
 1318 01b0 0F49     		ldr	r1, .L81
 1319 01b2 0F4B     		ldr	r3, .L81
 1320 01b4 1A6A     		ldr	r2, [r3, #32]
 1321 01b6 3B69     		ldr	r3, [r7, #16]
 1322 01b8 DB43     		mvns	r3, r3
 1323 01ba 1A40     		ands	r2, r2, r3
 1324 01bc 7B69     		ldr	r3, [r7, #20]
 1325 01be 1343     		orrs	r3, r3, r2
 1326 01c0 0B62     		str	r3, [r1, #32]
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Set OPTSTRT Bit */
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 1327              		.loc 1 783 0
 1328 01c2 0B4A     		ldr	r2, .L81
 1329 01c4 0A4B     		ldr	r3, .L81
 1330 01c6 5B69     		ldr	r3, [r3, #20]
 1331 01c8 43F40033 		orr	r3, r3, #131072
 1332 01cc 5361     		str	r3, [r2, #20]
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1333              		.loc 1 786 0
 1334 01ce 4CF25030 		movw	r0, #50000
 1335 01d2 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1336 01d6 0346     		mov	r3, r0
 1337 01d8 FB73     		strb	r3, [r7, #15]
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* If the option byte program operation is completed, disable the OPTSTRT Bit */
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 1338              		.loc 1 789 0
 1339 01da 054A     		ldr	r2, .L81
 1340 01dc 044B     		ldr	r3, .L81
 1341 01de 5B69     		ldr	r3, [r3, #20]
 1342 01e0 23F40033 		bic	r3, r3, #131072
 1343 01e4 5361     		str	r3, [r2, #20]
 1344              	.L66:
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;            
 1345              		.loc 1 792 0
 1346 01e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1347              		.loc 1 793 0
 1348 01e8 1846     		mov	r0, r3
 1349 01ea 1837     		adds	r7, r7, #24
 1350              	.LCFI49:
 1351              		.cfi_def_cfa_offset 8
 1352 01ec BD46     		mov	sp, r7
 1353              	.LCFI50:
 1354              		.cfi_def_cfa_register 13
 1355              		@ sp needed
 1356 01ee 80BD     		pop	{r7, pc}
 1357              	.L82:
 1358              		.align	2
ARM GAS  /tmp/ccblWEZv.s 			page 48


 1359              	.L81:
 1360 01f0 00200240 		.word	1073881088
 1361              		.cfi_endproc
 1362              	.LFE135:
 1364              		.section	.text.FLASH_OB_PCROPConfig,"ax",%progbits
 1365              		.align	1
 1366              		.syntax unified
 1367              		.thumb
 1368              		.thumb_func
 1369              		.fpu fpv4-sp-d16
 1371              	FLASH_OB_PCROPConfig:
 1372              	.LFB136:
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Configure the Proprietary code readout protection of the desired addresses.
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To configure the PCROP options, the option lock bit OPTLOCK must be 
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         cleared with the call of the HAL_FLASH_OB_Unlock() function.
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @note   To validate the PCROP options, the option bytes must be reloaded 
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         through the call of the HAL_FLASH_OB_Launch() function.
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  PCROPConfig: specifies the configuration (Bank to be configured and PCROP_RDP option).
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter must be a combination of FLASH_BANK_1 or FLASH_BANK_2 
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          with OB_PCROP_RDP_NOT_ERASE or OB_PCROP_RDP_ERASE
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  PCROPStartAddr: specifies the start address of the Proprietary code readout protection
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be an address between begin and end of the bank 
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param  PCROPEndAddr: specifies the end address of the Proprietary code readout protection
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be an address between PCROPStartAddr and end of the bank 
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval HAL Status
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_PCROPConfig(uint32_t PCROPConfig, uint32_t PCROPStartAddr, uint32
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 1373              		.loc 1 816 0
 1374              		.cfi_startproc
 1375              		@ args = 0, pretend = 0, frame = 32
 1376              		@ frame_needed = 1, uses_anonymous_args = 0
 1377 0000 80B5     		push	{r7, lr}
 1378              	.LCFI51:
 1379              		.cfi_def_cfa_offset 8
 1380              		.cfi_offset 7, -8
 1381              		.cfi_offset 14, -4
 1382 0002 88B0     		sub	sp, sp, #32
 1383              	.LCFI52:
 1384              		.cfi_def_cfa_offset 40
 1385 0004 00AF     		add	r7, sp, #0
 1386              	.LCFI53:
 1387              		.cfi_def_cfa_register 7
 1388 0006 F860     		str	r0, [r7, #12]
 1389 0008 B960     		str	r1, [r7, #8]
 1390 000a 7A60     		str	r2, [r7, #4]
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1391              		.loc 1 817 0
 1392 000c 0023     		movs	r3, #0
 1393 000e FB77     		strb	r3, [r7, #31]
ARM GAS  /tmp/ccblWEZv.s 			page 49


 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t reg_value = 0;
 1394              		.loc 1 818 0
 1395 0010 0023     		movs	r3, #0
 1396 0012 3B61     		str	r3, [r7, #16]
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t bank1_addr;
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t bank2_addr;
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE(PCROPConfig & FLASH_BANK_BOTH));
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_OB_PCROP_RDP(PCROPConfig & FLASH_PCROP1ER_PCROP_RDP));
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_MAIN_MEM_ADDRESS(PCROPStartAddr));
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_MAIN_MEM_ADDRESS(PCROPEndAddr));
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1397              		.loc 1 831 0
 1398 0014 4CF25030 		movw	r0, #50000
 1399 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1400 001c 0346     		mov	r3, r0
 1401 001e FB77     		strb	r3, [r7, #31]
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1402              		.loc 1 833 0
 1403 0020 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1404 0022 002B     		cmp	r3, #0
 1405 0024 40F08C80 		bne	.L84
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Get the information about the bank swapping */
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if (READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_FB_MODE) == 0)
 1406              		.loc 1 837 0
 1407 0028 484B     		ldr	r3, .L94
 1408 002a 1B68     		ldr	r3, [r3]
 1409 002c 03F48073 		and	r3, r3, #256
 1410 0030 002B     		cmp	r3, #0
 1411 0032 15D1     		bne	.L85
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       bank1_addr = FLASH_BASE;
 1412              		.loc 1 839 0
 1413 0034 4FF00063 		mov	r3, #134217728
 1414 0038 BB61     		str	r3, [r7, #24]
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       bank2_addr = FLASH_BASE + FLASH_BANK_SIZE;
 1415              		.loc 1 840 0
 1416 003a 454B     		ldr	r3, .L94+4
 1417 003c 1B88     		ldrh	r3, [r3]
 1418 003e 4FF6FF72 		movw	r2, #65535
 1419 0042 9342     		cmp	r3, r2
 1420 0044 09D0     		beq	.L86
 1421              		.loc 1 840 0 is_stmt 0 discriminator 1
 1422 0046 424B     		ldr	r3, .L94+4
 1423 0048 1B88     		ldrh	r3, [r3]
 1424 004a 9B02     		lsls	r3, r3, #10
 1425 004c 5B10     		asrs	r3, r3, #1
 1426 004e 1A46     		mov	r2, r3
 1427 0050 404B     		ldr	r3, .L94+8
ARM GAS  /tmp/ccblWEZv.s 			page 50


 1428 0052 1340     		ands	r3, r3, r2
 1429 0054 03F10063 		add	r3, r3, #134217728
 1430 0058 00E0     		b	.L87
 1431              	.L86:
 1432              		.loc 1 840 0 discriminator 2
 1433 005a 3F4B     		ldr	r3, .L94+12
 1434              	.L87:
 1435              		.loc 1 840 0 discriminator 4
 1436 005c 7B61     		str	r3, [r7, #20]
 1437 005e 14E0     		b	.L88
 1438              	.L85:
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     else
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       bank1_addr = FLASH_BASE + FLASH_BANK_SIZE;
 1439              		.loc 1 844 0 is_stmt 1
 1440 0060 3B4B     		ldr	r3, .L94+4
 1441 0062 1B88     		ldrh	r3, [r3]
 1442 0064 4FF6FF72 		movw	r2, #65535
 1443 0068 9342     		cmp	r3, r2
 1444 006a 09D0     		beq	.L89
 1445              		.loc 1 844 0 is_stmt 0 discriminator 1
 1446 006c 384B     		ldr	r3, .L94+4
 1447 006e 1B88     		ldrh	r3, [r3]
 1448 0070 9B02     		lsls	r3, r3, #10
 1449 0072 5B10     		asrs	r3, r3, #1
 1450 0074 1A46     		mov	r2, r3
 1451 0076 374B     		ldr	r3, .L94+8
 1452 0078 1340     		ands	r3, r3, r2
 1453 007a 03F10063 		add	r3, r3, #134217728
 1454 007e 00E0     		b	.L90
 1455              	.L89:
 1456              		.loc 1 844 0 discriminator 2
 1457 0080 354B     		ldr	r3, .L94+12
 1458              	.L90:
 1459              		.loc 1 844 0 discriminator 4
 1460 0082 BB61     		str	r3, [r7, #24]
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       bank2_addr = FLASH_BASE;
 1461              		.loc 1 845 0 is_stmt 1 discriminator 4
 1462 0084 4FF00063 		mov	r3, #134217728
 1463 0088 7B61     		str	r3, [r7, #20]
 1464              	.L88:
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #else
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     bank1_addr = FLASH_BASE;
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Configure the Proprietary code readout protection */
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     if((PCROPConfig & FLASH_BANK_BOTH) == FLASH_BANK_1)
 1465              		.loc 1 852 0
 1466 008a FB68     		ldr	r3, [r7, #12]
 1467 008c 03F00303 		and	r3, r3, #3
 1468 0090 012B     		cmp	r3, #1
 1469 0092 1AD1     		bne	.L91
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       reg_value = ((PCROPStartAddr - bank1_addr) >> 3);
 1470              		.loc 1 854 0
ARM GAS  /tmp/ccblWEZv.s 			page 51


 1471 0094 BA68     		ldr	r2, [r7, #8]
 1472 0096 BB69     		ldr	r3, [r7, #24]
 1473 0098 D31A     		subs	r3, r2, r3
 1474 009a DB08     		lsrs	r3, r3, #3
 1475 009c 3B61     		str	r3, [r7, #16]
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->PCROP1SR, FLASH_PCROP1SR_PCROP1_STRT, reg_value);
 1476              		.loc 1 855 0
 1477 009e 2F49     		ldr	r1, .L94+16
 1478 00a0 2E4B     		ldr	r3, .L94+16
 1479 00a2 5B6A     		ldr	r3, [r3, #36]
 1480 00a4 1B0C     		lsrs	r3, r3, #16
 1481 00a6 1B04     		lsls	r3, r3, #16
 1482 00a8 3A69     		ldr	r2, [r7, #16]
 1483 00aa 1343     		orrs	r3, r3, r2
 1484 00ac 4B62     		str	r3, [r1, #36]
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       reg_value = ((PCROPEndAddr - bank1_addr) >> 3);
 1485              		.loc 1 857 0
 1486 00ae 7A68     		ldr	r2, [r7, #4]
 1487 00b0 BB69     		ldr	r3, [r7, #24]
 1488 00b2 D31A     		subs	r3, r2, r3
 1489 00b4 DB08     		lsrs	r3, r3, #3
 1490 00b6 3B61     		str	r3, [r7, #16]
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->PCROP1ER, FLASH_PCROP1ER_PCROP1_END, reg_value);
 1491              		.loc 1 858 0
 1492 00b8 2849     		ldr	r1, .L94+16
 1493 00ba 284B     		ldr	r3, .L94+16
 1494 00bc 9B6A     		ldr	r3, [r3, #40]
 1495 00be 1B0C     		lsrs	r3, r3, #16
 1496 00c0 1B04     		lsls	r3, r3, #16
 1497 00c2 3A69     		ldr	r2, [r7, #16]
 1498 00c4 1343     		orrs	r3, r3, r2
 1499 00c6 8B62     		str	r3, [r1, #40]
 1500 00c8 1EE0     		b	.L92
 1501              	.L91:
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     else if((PCROPConfig & FLASH_BANK_BOTH) == FLASH_BANK_2)
 1502              		.loc 1 861 0
 1503 00ca FB68     		ldr	r3, [r7, #12]
 1504 00cc 03F00303 		and	r3, r3, #3
 1505 00d0 022B     		cmp	r3, #2
 1506 00d2 19D1     		bne	.L92
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     {
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       reg_value = ((PCROPStartAddr - bank2_addr) >> 3);
 1507              		.loc 1 863 0
 1508 00d4 BA68     		ldr	r2, [r7, #8]
 1509 00d6 7B69     		ldr	r3, [r7, #20]
 1510 00d8 D31A     		subs	r3, r2, r3
 1511 00da DB08     		lsrs	r3, r3, #3
 1512 00dc 3B61     		str	r3, [r7, #16]
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->PCROP2SR, FLASH_PCROP2SR_PCROP2_STRT, reg_value);
 1513              		.loc 1 864 0
 1514 00de 1F49     		ldr	r1, .L94+16
 1515 00e0 1E4B     		ldr	r3, .L94+16
 1516 00e2 5B6C     		ldr	r3, [r3, #68]
 1517 00e4 1B0C     		lsrs	r3, r3, #16
ARM GAS  /tmp/ccblWEZv.s 			page 52


 1518 00e6 1B04     		lsls	r3, r3, #16
 1519 00e8 3A69     		ldr	r2, [r7, #16]
 1520 00ea 1343     		orrs	r3, r3, r2
 1521 00ec 4B64     		str	r3, [r1, #68]
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       reg_value = ((PCROPEndAddr - bank2_addr) >> 3);
 1522              		.loc 1 866 0
 1523 00ee 7A68     		ldr	r2, [r7, #4]
 1524 00f0 7B69     		ldr	r3, [r7, #20]
 1525 00f2 D31A     		subs	r3, r2, r3
 1526 00f4 DB08     		lsrs	r3, r3, #3
 1527 00f6 3B61     		str	r3, [r7, #16]
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       MODIFY_REG(FLASH->PCROP2ER, FLASH_PCROP2ER_PCROP2_END, reg_value);
 1528              		.loc 1 867 0
 1529 00f8 1849     		ldr	r1, .L94+16
 1530 00fa 184B     		ldr	r3, .L94+16
 1531 00fc 9B6C     		ldr	r3, [r3, #72]
 1532 00fe 1B0C     		lsrs	r3, r3, #16
 1533 0100 1B04     		lsls	r3, r3, #16
 1534 0102 3A69     		ldr	r2, [r7, #16]
 1535 0104 1343     		orrs	r3, r3, r2
 1536 0106 8B64     		str	r3, [r1, #72]
 1537              	.L92:
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     }
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     MODIFY_REG(FLASH->PCROP1ER, FLASH_PCROP1ER_PCROP_RDP, (PCROPConfig & FLASH_PCROP1ER_PCROP_RDP))
 1538              		.loc 1 871 0
 1539 0108 1449     		ldr	r1, .L94+16
 1540 010a 144B     		ldr	r3, .L94+16
 1541 010c 9B6A     		ldr	r3, [r3, #40]
 1542 010e 23F00042 		bic	r2, r3, #-2147483648
 1543 0112 FB68     		ldr	r3, [r7, #12]
 1544 0114 03F00043 		and	r3, r3, #-2147483648
 1545 0118 1343     		orrs	r3, r3, r2
 1546 011a 8B62     		str	r3, [r1, #40]
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Set OPTSTRT Bit */
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 1547              		.loc 1 874 0
 1548 011c 0F4A     		ldr	r2, .L94+16
 1549 011e 0F4B     		ldr	r3, .L94+16
 1550 0120 5B69     		ldr	r3, [r3, #20]
 1551 0122 43F40033 		orr	r3, r3, #131072
 1552 0126 5361     		str	r3, [r2, #20]
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 1553              		.loc 1 877 0
 1554 0128 4CF25030 		movw	r0, #50000
 1555 012c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1556 0130 0346     		mov	r3, r0
 1557 0132 FB77     		strb	r3, [r7, #31]
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     /* If the option byte program operation is completed, disable the OPTSTRT Bit */
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTSTRT);
 1558              		.loc 1 880 0
ARM GAS  /tmp/ccblWEZv.s 			page 53


 1559 0134 094A     		ldr	r2, .L94+16
 1560 0136 094B     		ldr	r3, .L94+16
 1561 0138 5B69     		ldr	r3, [r3, #20]
 1562 013a 23F40033 		bic	r3, r3, #131072
 1563 013e 5361     		str	r3, [r2, #20]
 1564              	.L84:
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return status;
 1565              		.loc 1 883 0
 1566 0140 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1567              		.loc 1 884 0
 1568 0142 1846     		mov	r0, r3
 1569 0144 2037     		adds	r7, r7, #32
 1570              	.LCFI54:
 1571              		.cfi_def_cfa_offset 8
 1572 0146 BD46     		mov	sp, r7
 1573              	.LCFI55:
 1574              		.cfi_def_cfa_register 13
 1575              		@ sp needed
 1576 0148 80BD     		pop	{r7, pc}
 1577              	.L95:
 1578 014a 00BF     		.align	2
 1579              	.L94:
 1580 014c 00000140 		.word	1073807360
 1581 0150 E075FF1F 		.word	536835552
 1582 0154 00FE1F00 		.word	2096640
 1583 0158 00000808 		.word	134742016
 1584 015c 00200240 		.word	1073881088
 1585              		.cfi_endproc
 1586              	.LFE136:
 1588              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 1589              		.align	1
 1590              		.syntax unified
 1591              		.thumb
 1592              		.thumb_func
 1593              		.fpu fpv4-sp-d16
 1595              	FLASH_OB_GetWRP:
 1596              	.LFB137:
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param[in]  WRPArea: specifies the area to be returned.
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK1_AREAA: Flash Bank 1 Area A                      
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK1_AREAB: Flash Bank 1 Area B                      
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK2_AREAA: Flash Bank 2 Area A (don't apply to STM32L43x/STM32L44x
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_WRPAREA_BANK2_AREAB: Flash Bank 2 Area B (don't apply to STM32L43x/STM32L44x
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param[out]  WRPStartOffset: specifies the address where to copied the start page 
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *                         of the write protected area
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param[out]  WRDPEndOffset: specifies the address where to copied the end page of 
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *                        the write protected area
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
ARM GAS  /tmp/ccblWEZv.s 			page 54


 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval None
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static void FLASH_OB_GetWRP(uint32_t WRPArea, uint32_t * WRPStartOffset, uint32_t * WRDPEndOffset)
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 1597              		.loc 1 905 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 16
 1600              		@ frame_needed = 1, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602 0000 80B4     		push	{r7}
 1603              	.LCFI56:
 1604              		.cfi_def_cfa_offset 4
 1605              		.cfi_offset 7, -4
 1606 0002 85B0     		sub	sp, sp, #20
 1607              	.LCFI57:
 1608              		.cfi_def_cfa_offset 24
 1609 0004 00AF     		add	r7, sp, #0
 1610              	.LCFI58:
 1611              		.cfi_def_cfa_register 7
 1612 0006 F860     		str	r0, [r7, #12]
 1613 0008 B960     		str	r1, [r7, #8]
 1614 000a 7A60     		str	r2, [r7, #4]
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_OB_WRPAREA(WRPArea));
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Get the configuration of the write protected area */
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(WRPArea == OB_WRPAREA_BANK1_AREAA)
 1615              		.loc 1 910 0
 1616 000c FB68     		ldr	r3, [r7, #12]
 1617 000e 002B     		cmp	r3, #0
 1618 0010 0BD1     		bne	.L97
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRPStartOffset = READ_BIT(FLASH->WRP1AR, FLASH_WRP1AR_WRP1A_STRT);
 1619              		.loc 1 912 0
 1620 0012 1F4B     		ldr	r3, .L102
 1621 0014 DB6A     		ldr	r3, [r3, #44]
 1622 0016 DAB2     		uxtb	r2, r3
 1623 0018 BB68     		ldr	r3, [r7, #8]
 1624 001a 1A60     		str	r2, [r3]
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP1AR, FLASH_WRP1AR_WRP1A_END) >> 16);
 1625              		.loc 1 913 0
 1626 001c 1C4B     		ldr	r3, .L102
 1627 001e DB6A     		ldr	r3, [r3, #44]
 1628 0020 1B0C     		lsrs	r3, r3, #16
 1629 0022 DAB2     		uxtb	r2, r3
 1630 0024 7B68     		ldr	r3, [r7, #4]
 1631 0026 1A60     		str	r2, [r3]
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else if(WRPArea == OB_WRPAREA_BANK1_AREAB)
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRPStartOffset = READ_BIT(FLASH->WRP1BR, FLASH_WRP1BR_WRP1B_STRT);
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP1BR, FLASH_WRP1BR_WRP1B_END) >> 16);
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else if(WRPArea == OB_WRPAREA_BANK2_AREAA)
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRPStartOffset = READ_BIT(FLASH->WRP2AR, FLASH_WRP2AR_WRP2A_STRT);
ARM GAS  /tmp/ccblWEZv.s 			page 55


 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP2AR, FLASH_WRP2AR_WRP2A_END) >> 16);
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else if(WRPArea == OB_WRPAREA_BANK2_AREAB)
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRPStartOffset = READ_BIT(FLASH->WRP2BR, FLASH_WRP2BR_WRP2B_STRT);
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP2BR, FLASH_WRP2BR_WRP2B_END) >> 16);
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1632              		.loc 1 932 0
 1633 0028 2BE0     		b	.L101
 1634              	.L97:
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 1635              		.loc 1 915 0
 1636 002a FB68     		ldr	r3, [r7, #12]
 1637 002c 012B     		cmp	r3, #1
 1638 002e 0BD1     		bne	.L99
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP1BR, FLASH_WRP1BR_WRP1B_END) >> 16);
 1639              		.loc 1 917 0
 1640 0030 174B     		ldr	r3, .L102
 1641 0032 1B6B     		ldr	r3, [r3, #48]
 1642 0034 DAB2     		uxtb	r2, r3
 1643 0036 BB68     		ldr	r3, [r7, #8]
 1644 0038 1A60     		str	r2, [r3]
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 1645              		.loc 1 918 0
 1646 003a 154B     		ldr	r3, .L102
 1647 003c 1B6B     		ldr	r3, [r3, #48]
 1648 003e 1B0C     		lsrs	r3, r3, #16
 1649 0040 DAB2     		uxtb	r2, r3
 1650 0042 7B68     		ldr	r3, [r7, #4]
 1651 0044 1A60     		str	r2, [r3]
 1652              		.loc 1 932 0
 1653 0046 1CE0     		b	.L101
 1654              	.L99:
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 1655              		.loc 1 921 0
 1656 0048 FB68     		ldr	r3, [r7, #12]
 1657 004a 022B     		cmp	r3, #2
 1658 004c 0BD1     		bne	.L100
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP2AR, FLASH_WRP2AR_WRP2A_END) >> 16);
 1659              		.loc 1 923 0
 1660 004e 104B     		ldr	r3, .L102
 1661 0050 DB6C     		ldr	r3, [r3, #76]
 1662 0052 DAB2     		uxtb	r2, r3
 1663 0054 BB68     		ldr	r3, [r7, #8]
 1664 0056 1A60     		str	r2, [r3]
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 1665              		.loc 1 924 0
 1666 0058 0D4B     		ldr	r3, .L102
 1667 005a DB6C     		ldr	r3, [r3, #76]
 1668 005c 1B0C     		lsrs	r3, r3, #16
 1669 005e DAB2     		uxtb	r2, r3
 1670 0060 7B68     		ldr	r3, [r7, #4]
 1671 0062 1A60     		str	r2, [r3]
 1672              		.loc 1 932 0
 1673 0064 0DE0     		b	.L101
ARM GAS  /tmp/ccblWEZv.s 			page 56


 1674              	.L100:
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 1675              		.loc 1 926 0
 1676 0066 FB68     		ldr	r3, [r7, #12]
 1677 0068 042B     		cmp	r3, #4
 1678 006a 0AD1     		bne	.L101
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *WRDPEndOffset = (READ_BIT(FLASH->WRP2BR, FLASH_WRP2BR_WRP2B_END) >> 16);
 1679              		.loc 1 928 0
 1680 006c 084B     		ldr	r3, .L102
 1681 006e 1B6D     		ldr	r3, [r3, #80]
 1682 0070 DAB2     		uxtb	r2, r3
 1683 0072 BB68     		ldr	r3, [r7, #8]
 1684 0074 1A60     		str	r2, [r3]
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 1685              		.loc 1 929 0
 1686 0076 064B     		ldr	r3, .L102
 1687 0078 1B6D     		ldr	r3, [r3, #80]
 1688 007a 1B0C     		lsrs	r3, r3, #16
 1689 007c DAB2     		uxtb	r2, r3
 1690 007e 7B68     		ldr	r3, [r7, #4]
 1691 0080 1A60     		str	r2, [r3]
 1692              	.L101:
 1693              		.loc 1 932 0
 1694 0082 00BF     		nop
 1695 0084 1437     		adds	r7, r7, #20
 1696              	.LCFI59:
 1697              		.cfi_def_cfa_offset 4
 1698 0086 BD46     		mov	sp, r7
 1699              	.LCFI60:
 1700              		.cfi_def_cfa_register 13
 1701              		@ sp needed
 1702 0088 5DF8047B 		ldr	r7, [sp], #4
 1703              	.LCFI61:
 1704              		.cfi_restore 7
 1705              		.cfi_def_cfa_offset 0
 1706 008c 7047     		bx	lr
 1707              	.L103:
 1708 008e 00BF     		.align	2
 1709              	.L102:
 1710 0090 00200240 		.word	1073881088
 1711              		.cfi_endproc
 1712              	.LFE137:
 1714              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 1715              		.align	1
 1716              		.syntax unified
 1717              		.thumb
 1718              		.thumb_func
 1719              		.fpu fpv4-sp-d16
 1721              	FLASH_OB_GetRDP:
 1722              	.LFB138:
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Return the FLASH Read Protection level.
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval FLASH ReadOut Protection Status:
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         This return value can be one of the following values:
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
ARM GAS  /tmp/ccblWEZv.s 			page 57


 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetRDP(void)
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 1723              		.loc 1 943 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 1, uses_anonymous_args = 0
 1727              		@ link register save eliminated.
 1728 0000 80B4     		push	{r7}
 1729              	.LCFI62:
 1730              		.cfi_def_cfa_offset 4
 1731              		.cfi_offset 7, -4
 1732 0002 00AF     		add	r7, sp, #0
 1733              	.LCFI63:
 1734              		.cfi_def_cfa_register 7
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if ((READ_BIT(FLASH->OPTR, FLASH_OPTR_RDP) != OB_RDP_LEVEL_0) && 
 1735              		.loc 1 944 0
 1736 0004 094B     		ldr	r3, .L107
 1737 0006 1B6A     		ldr	r3, [r3, #32]
 1738 0008 DBB2     		uxtb	r3, r3
 1739 000a AA2B     		cmp	r3, #170
 1740 000c 06D0     		beq	.L105
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****       (READ_BIT(FLASH->OPTR, FLASH_OPTR_RDP) != OB_RDP_LEVEL_2))
 1741              		.loc 1 945 0 discriminator 1
 1742 000e 074B     		ldr	r3, .L107
 1743 0010 1B6A     		ldr	r3, [r3, #32]
 1744 0012 DBB2     		uxtb	r3, r3
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if ((READ_BIT(FLASH->OPTR, FLASH_OPTR_RDP) != OB_RDP_LEVEL_0) && 
 1745              		.loc 1 944 0 discriminator 1
 1746 0014 CC2B     		cmp	r3, #204
 1747 0016 01D0     		beq	.L105
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     return (OB_RDP_LEVEL_1);
 1748              		.loc 1 947 0
 1749 0018 BB23     		movs	r3, #187
 1750 001a 02E0     		b	.L106
 1751              	.L105:
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     return (READ_BIT(FLASH->OPTR, FLASH_OPTR_RDP));
 1752              		.loc 1 951 0
 1753 001c 034B     		ldr	r3, .L107
 1754 001e 1B6A     		ldr	r3, [r3, #32]
 1755 0020 DBB2     		uxtb	r3, r3
 1756              	.L106:
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1757              		.loc 1 953 0
 1758 0022 1846     		mov	r0, r3
 1759 0024 BD46     		mov	sp, r7
 1760              	.LCFI64:
 1761              		.cfi_def_cfa_register 13
 1762              		@ sp needed
 1763 0026 5DF8047B 		ldr	r7, [sp], #4
 1764              	.LCFI65:
ARM GAS  /tmp/ccblWEZv.s 			page 58


 1765              		.cfi_restore 7
 1766              		.cfi_def_cfa_offset 0
 1767 002a 7047     		bx	lr
 1768              	.L108:
 1769              		.align	2
 1770              	.L107:
 1771 002c 00200240 		.word	1073881088
 1772              		.cfi_endproc
 1773              	.LFE138:
 1775              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 1776              		.align	1
 1777              		.syntax unified
 1778              		.thumb
 1779              		.thumb_func
 1780              		.fpu fpv4-sp-d16
 1782              	FLASH_OB_GetUser:
 1783              	.LFB139:
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval The FLASH User Option Bytes values: 
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      For STM32L47x/STM32L48x devices :
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         BOR_LEV(Bit8-10), nRST_STOP(Bit12), nRST_STDBY(Bit13), nRST_SHDW(Bit14), 
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         IWDG_SW(Bit16), IWDG_STOP(Bit17), IWDG_STDBY(Bit18), WWDG_SW(Bit19),  
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         BFB2(Bit20), DUALBANK(Bit21), nBOOT1(Bit23), SRAM2_PE(Bit24) and SRAM2_RST(Bit25). 
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *      For STM32L43x/STM32L44x devices :
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         BOR_LEV(Bit8-10), nRST_STOP(Bit12), nRST_STDBY(Bit13), nRST_SHDW(Bit14),
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         IWDG_SW(Bit16), IWDG_STOP(Bit17), IWDG_STDBY(Bit18), WWDG_SW(Bit19),  
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *         nBOOT1(Bit23), SRAM2_PE(Bit24), SRAM2_RST(Bit25), nSWBOOT0(Bit26) and nBOOT0(Bit27). 
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetUser(void)
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 1784              		.loc 1 968 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 8
 1787              		@ frame_needed = 1, uses_anonymous_args = 0
 1788              		@ link register save eliminated.
 1789 0000 80B4     		push	{r7}
 1790              	.LCFI66:
 1791              		.cfi_def_cfa_offset 4
 1792              		.cfi_offset 7, -4
 1793 0002 83B0     		sub	sp, sp, #12
 1794              	.LCFI67:
 1795              		.cfi_def_cfa_offset 16
 1796 0004 00AF     		add	r7, sp, #0
 1797              	.LCFI68:
 1798              		.cfi_def_cfa_register 7
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t user_config = READ_REG(FLASH->OPTR);
 1799              		.loc 1 969 0
 1800 0006 074B     		ldr	r3, .L111
 1801 0008 1B6A     		ldr	r3, [r3, #32]
 1802 000a 7B60     		str	r3, [r7, #4]
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   CLEAR_BIT(user_config, FLASH_OPTR_RDP);
 1803              		.loc 1 970 0
 1804 000c 7B68     		ldr	r3, [r7, #4]
 1805 000e 23F0FF03 		bic	r3, r3, #255
 1806 0012 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/ccblWEZv.s 			page 59


 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   return user_config;
 1807              		.loc 1 972 0
 1808 0014 7B68     		ldr	r3, [r7, #4]
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1809              		.loc 1 973 0
 1810 0016 1846     		mov	r0, r3
 1811 0018 0C37     		adds	r7, r7, #12
 1812              	.LCFI69:
 1813              		.cfi_def_cfa_offset 4
 1814 001a BD46     		mov	sp, r7
 1815              	.LCFI70:
 1816              		.cfi_def_cfa_register 13
 1817              		@ sp needed
 1818 001c 5DF8047B 		ldr	r7, [sp], #4
 1819              	.LCFI71:
 1820              		.cfi_restore 7
 1821              		.cfi_def_cfa_offset 0
 1822 0020 7047     		bx	lr
 1823              	.L112:
 1824 0022 00BF     		.align	2
 1825              	.L111:
 1826 0024 00200240 		.word	1073881088
 1827              		.cfi_endproc
 1828              	.LFE139:
 1830              		.section	.text.FLASH_OB_GetPCROP,"ax",%progbits
 1831              		.align	1
 1832              		.syntax unified
 1833              		.thumb
 1834              		.thumb_func
 1835              		.fpu fpv4-sp-d16
 1837              	FLASH_OB_GetPCROP:
 1838              	.LFB140:
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** /**
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param PCROPConfig [inout]: specifies the configuration (Bank to be configured and PCROP_RDP op
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          This parameter must be a combination of FLASH_BANK_1 or FLASH_BANK_2 
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *          with OB_PCROP_RDP_NOT_ERASE or OB_PCROP_RDP_ERASE
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param PCROPStartAddr [out]: specifies the address where to copied the start address 
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *                         of the Proprietary code readout protection
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @param PCROPEndAddr [out]: specifies the address where to copied the end address of 
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *                       the Proprietary code readout protection
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   * @retval None
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   */
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** static void FLASH_OB_GetPCROP(uint32_t * PCROPConfig, uint32_t * PCROPStartAddr, uint32_t * PCROPEn
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** {
 1839              		.loc 1 991 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 32
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843              		@ link register save eliminated.
 1844 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccblWEZv.s 			page 60


 1845              	.LCFI72:
 1846              		.cfi_def_cfa_offset 4
 1847              		.cfi_offset 7, -4
 1848 0002 89B0     		sub	sp, sp, #36
 1849              	.LCFI73:
 1850              		.cfi_def_cfa_offset 40
 1851 0004 00AF     		add	r7, sp, #0
 1852              	.LCFI74:
 1853              		.cfi_def_cfa_register 7
 1854 0006 F860     		str	r0, [r7, #12]
 1855 0008 B960     		str	r1, [r7, #8]
 1856 000a 7A60     		str	r2, [r7, #4]
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t reg_value = 0;
 1857              		.loc 1 992 0
 1858 000c 0023     		movs	r3, #0
 1859 000e 7B61     		str	r3, [r7, #20]
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t bank1_addr;
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   uint32_t bank2_addr;
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Check the parameters */
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK_EXCLUSIVE((*PCROPConfig) & FLASH_BANK_BOTH));
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   /* Get the information about the bank swapping */
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if (READ_BIT(SYSCFG->MEMRMP, SYSCFG_MEMRMP_FB_MODE) == 0)
 1860              		.loc 1 1003 0
 1861 0010 3A4B     		ldr	r3, .L122
 1862 0012 1B68     		ldr	r3, [r3]
 1863 0014 03F48073 		and	r3, r3, #256
 1864 0018 002B     		cmp	r3, #0
 1865 001a 15D1     		bne	.L114
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     bank1_addr = FLASH_BASE;
 1866              		.loc 1 1005 0
 1867 001c 4FF00063 		mov	r3, #134217728
 1868 0020 FB61     		str	r3, [r7, #28]
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     bank2_addr = FLASH_BASE + FLASH_BANK_SIZE;
 1869              		.loc 1 1006 0
 1870 0022 374B     		ldr	r3, .L122+4
 1871 0024 1B88     		ldrh	r3, [r3]
 1872 0026 4FF6FF72 		movw	r2, #65535
 1873 002a 9342     		cmp	r3, r2
 1874 002c 09D0     		beq	.L115
 1875              		.loc 1 1006 0 is_stmt 0 discriminator 1
 1876 002e 344B     		ldr	r3, .L122+4
 1877 0030 1B88     		ldrh	r3, [r3]
 1878 0032 9B02     		lsls	r3, r3, #10
 1879 0034 5B10     		asrs	r3, r3, #1
 1880 0036 1A46     		mov	r2, r3
 1881 0038 324B     		ldr	r3, .L122+8
 1882 003a 1340     		ands	r3, r3, r2
 1883 003c 03F10063 		add	r3, r3, #134217728
 1884 0040 00E0     		b	.L116
 1885              	.L115:
 1886              		.loc 1 1006 0 discriminator 2
ARM GAS  /tmp/ccblWEZv.s 			page 61


 1887 0042 314B     		ldr	r3, .L122+12
 1888              	.L116:
 1889              		.loc 1 1006 0 discriminator 4
 1890 0044 BB61     		str	r3, [r7, #24]
 1891 0046 14E0     		b	.L117
 1892              	.L114:
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     bank1_addr = FLASH_BASE + FLASH_BANK_SIZE;
 1893              		.loc 1 1010 0 is_stmt 1
 1894 0048 2D4B     		ldr	r3, .L122+4
 1895 004a 1B88     		ldrh	r3, [r3]
 1896 004c 4FF6FF72 		movw	r2, #65535
 1897 0050 9342     		cmp	r3, r2
 1898 0052 09D0     		beq	.L118
 1899              		.loc 1 1010 0 is_stmt 0 discriminator 1
 1900 0054 2A4B     		ldr	r3, .L122+4
 1901 0056 1B88     		ldrh	r3, [r3]
 1902 0058 9B02     		lsls	r3, r3, #10
 1903 005a 5B10     		asrs	r3, r3, #1
 1904 005c 1A46     		mov	r2, r3
 1905 005e 294B     		ldr	r3, .L122+8
 1906 0060 1340     		ands	r3, r3, r2
 1907 0062 03F10063 		add	r3, r3, #134217728
 1908 0066 00E0     		b	.L119
 1909              	.L118:
 1910              		.loc 1 1010 0 discriminator 2
 1911 0068 274B     		ldr	r3, .L122+12
 1912              	.L119:
 1913              		.loc 1 1010 0 discriminator 4
 1914 006a FB61     		str	r3, [r7, #28]
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     bank2_addr = FLASH_BASE;
 1915              		.loc 1 1011 0 is_stmt 1 discriminator 4
 1916 006c 4FF00063 		mov	r3, #134217728
 1917 0070 BB61     		str	r3, [r7, #24]
 1918              	.L117:
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #else
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   bank1_addr = FLASH_BASE;
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   if(((*PCROPConfig) & FLASH_BANK_BOTH) == FLASH_BANK_1)
 1919              		.loc 1 1017 0
 1920 0072 FB68     		ldr	r3, [r7, #12]
 1921 0074 1B68     		ldr	r3, [r3]
 1922 0076 03F00303 		and	r3, r3, #3
 1923 007a 012B     		cmp	r3, #1
 1924 007c 14D1     		bne	.L120
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     reg_value       = (READ_REG(FLASH->PCROP1SR) & FLASH_PCROP1SR_PCROP1_STRT);
 1925              		.loc 1 1019 0
 1926 007e 234B     		ldr	r3, .L122+16
 1927 0080 5B6A     		ldr	r3, [r3, #36]
 1928 0082 9BB2     		uxth	r3, r3
 1929 0084 7B61     		str	r3, [r7, #20]
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *PCROPStartAddr = (reg_value << 3) + bank1_addr;
ARM GAS  /tmp/ccblWEZv.s 			page 62


 1930              		.loc 1 1020 0
 1931 0086 7B69     		ldr	r3, [r7, #20]
 1932 0088 DA00     		lsls	r2, r3, #3
 1933 008a FB69     		ldr	r3, [r7, #28]
 1934 008c 1A44     		add	r2, r2, r3
 1935 008e BB68     		ldr	r3, [r7, #8]
 1936 0090 1A60     		str	r2, [r3]
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     reg_value     = (READ_REG(FLASH->PCROP1ER) & FLASH_PCROP1ER_PCROP1_END);
 1937              		.loc 1 1022 0
 1938 0092 1E4B     		ldr	r3, .L122+16
 1939 0094 9B6A     		ldr	r3, [r3, #40]
 1940 0096 9BB2     		uxth	r3, r3
 1941 0098 7B61     		str	r3, [r7, #20]
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *PCROPEndAddr = (reg_value << 3) + bank1_addr;
 1942              		.loc 1 1023 0
 1943 009a 7B69     		ldr	r3, [r7, #20]
 1944 009c DA00     		lsls	r2, r3, #3
 1945 009e FB69     		ldr	r3, [r7, #28]
 1946 00a0 1A44     		add	r2, r2, r3
 1947 00a2 7B68     		ldr	r3, [r7, #4]
 1948 00a4 1A60     		str	r2, [r3]
 1949 00a6 19E0     		b	.L121
 1950              	.L120:
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #if defined(STM32L471xx) || defined(STM32L475xx) || defined(STM32L476xx) || defined(STM32L485xx) ||
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   else if(((*PCROPConfig) & FLASH_BANK_BOTH) == FLASH_BANK_2)
 1951              		.loc 1 1026 0
 1952 00a8 FB68     		ldr	r3, [r7, #12]
 1953 00aa 1B68     		ldr	r3, [r3]
 1954 00ac 03F00303 		and	r3, r3, #3
 1955 00b0 022B     		cmp	r3, #2
 1956 00b2 13D1     		bne	.L121
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   {
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     reg_value       = (READ_REG(FLASH->PCROP2SR) & FLASH_PCROP2SR_PCROP2_STRT);
 1957              		.loc 1 1028 0
 1958 00b4 154B     		ldr	r3, .L122+16
 1959 00b6 5B6C     		ldr	r3, [r3, #68]
 1960 00b8 9BB2     		uxth	r3, r3
 1961 00ba 7B61     		str	r3, [r7, #20]
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *PCROPStartAddr = (reg_value << 3) + bank2_addr;
 1962              		.loc 1 1029 0
 1963 00bc 7B69     		ldr	r3, [r7, #20]
 1964 00be DA00     		lsls	r2, r3, #3
 1965 00c0 BB69     		ldr	r3, [r7, #24]
 1966 00c2 1A44     		add	r2, r2, r3
 1967 00c4 BB68     		ldr	r3, [r7, #8]
 1968 00c6 1A60     		str	r2, [r3]
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** 
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     reg_value     = (READ_REG(FLASH->PCROP2ER) & FLASH_PCROP2ER_PCROP2_END);
 1969              		.loc 1 1031 0
 1970 00c8 104B     		ldr	r3, .L122+16
 1971 00ca 9B6C     		ldr	r3, [r3, #72]
 1972 00cc 9BB2     		uxth	r3, r3
 1973 00ce 7B61     		str	r3, [r7, #20]
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****     *PCROPEndAddr = (reg_value << 3) + bank2_addr;
 1974              		.loc 1 1032 0
ARM GAS  /tmp/ccblWEZv.s 			page 63


 1975 00d0 7B69     		ldr	r3, [r7, #20]
 1976 00d2 DA00     		lsls	r2, r3, #3
 1977 00d4 BB69     		ldr	r3, [r7, #24]
 1978 00d6 1A44     		add	r2, r2, r3
 1979 00d8 7B68     		ldr	r3, [r7, #4]
 1980 00da 1A60     		str	r2, [r3]
 1981              	.L121:
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   }
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** #endif
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c ****   *PCROPConfig |= (READ_REG(FLASH->PCROP1ER) & FLASH_PCROP1ER_PCROP_RDP);
 1982              		.loc 1 1036 0
 1983 00dc 0B4B     		ldr	r3, .L122+16
 1984 00de 9B6A     		ldr	r3, [r3, #40]
 1985 00e0 03F00043 		and	r3, r3, #-2147483648
 1986 00e4 FA68     		ldr	r2, [r7, #12]
 1987 00e6 1268     		ldr	r2, [r2]
 1988 00e8 1A43     		orrs	r2, r2, r3
 1989 00ea FB68     		ldr	r3, [r7, #12]
 1990 00ec 1A60     		str	r2, [r3]
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash_ex.c **** }
 1991              		.loc 1 1037 0
 1992 00ee 00BF     		nop
 1993 00f0 2437     		adds	r7, r7, #36
 1994              	.LCFI75:
 1995              		.cfi_def_cfa_offset 4
 1996 00f2 BD46     		mov	sp, r7
 1997              	.LCFI76:
 1998              		.cfi_def_cfa_register 13
 1999              		@ sp needed
 2000 00f4 5DF8047B 		ldr	r7, [sp], #4
 2001              	.LCFI77:
 2002              		.cfi_restore 7
 2003              		.cfi_def_cfa_offset 0
 2004 00f8 7047     		bx	lr
 2005              	.L123:
 2006 00fa 00BF     		.align	2
 2007              	.L122:
 2008 00fc 00000140 		.word	1073807360
 2009 0100 E075FF1F 		.word	536835552
 2010 0104 00FE1F00 		.word	2096640
 2011 0108 00000808 		.word	134742016
 2012 010c 00200240 		.word	1073881088
 2013              		.cfi_endproc
 2014              	.LFE140:
 2016              		.text
 2017              	.Letext0:
 2018              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2019              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2020              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2021              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 2022              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2023              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 2024              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 2025              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 2026              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 2027              		.file 12 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
ARM GAS  /tmp/ccblWEZv.s 			page 64


 2028              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2029              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
ARM GAS  /tmp/ccblWEZv.s 			page 65


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_flash_ex.c
     /tmp/ccblWEZv.s:18     .text.HAL_FLASHEx_Erase:0000000000000000 $t
     /tmp/ccblWEZv.s:25     .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
     /tmp/ccblWEZv.s:562    .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
     /tmp/ccblWEZv.s:639    .text.FLASH_PageErase:0000000000000000 FLASH_PageErase
     /tmp/ccblWEZv.s:748    .text.FLASH_FlushCaches:0000000000000000 FLASH_FlushCaches
     /tmp/ccblWEZv.s:178    .text.HAL_FLASHEx_Erase:00000000000000dc $d
     /tmp/ccblWEZv.s:184    .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
     /tmp/ccblWEZv.s:191    .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
     /tmp/ccblWEZv.s:295    .text.HAL_FLASHEx_Erase_IT:0000000000000084 $d
     /tmp/ccblWEZv.s:301    .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
     /tmp/ccblWEZv.s:308    .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
     /tmp/ccblWEZv.s:847    .text.FLASH_OB_WRPConfig:0000000000000000 FLASH_OB_WRPConfig
     /tmp/ccblWEZv.s:990    .text.FLASH_OB_RDPConfig:0000000000000000 FLASH_OB_RDPConfig
     /tmp/ccblWEZv.s:1072   .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/ccblWEZv.s:1371   .text.FLASH_OB_PCROPConfig:0000000000000000 FLASH_OB_PCROPConfig
     /tmp/ccblWEZv.s:433    .text.HAL_FLASHEx_OBProgram:00000000000000b4 $d
     /tmp/ccblWEZv.s:438    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
     /tmp/ccblWEZv.s:445    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
     /tmp/ccblWEZv.s:1595   .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/ccblWEZv.s:1721   .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/ccblWEZv.s:1782   .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/ccblWEZv.s:1837   .text.FLASH_OB_GetPCROP:0000000000000000 FLASH_OB_GetPCROP
     /tmp/ccblWEZv.s:556    .text.FLASH_MassErase:0000000000000000 $t
     /tmp/ccblWEZv.s:627    .text.FLASH_MassErase:000000000000004c $d
     /tmp/ccblWEZv.s:632    .text.FLASH_PageErase:0000000000000000 $t
     /tmp/ccblWEZv.s:736    .text.FLASH_PageErase:000000000000007c $d
     /tmp/ccblWEZv.s:741    .text.FLASH_FlushCaches:0000000000000000 $t
     /tmp/ccblWEZv.s:836    .text.FLASH_FlushCaches:0000000000000088 $d
     /tmp/ccblWEZv.s:841    .text.FLASH_OB_WRPConfig:0000000000000000 $t
     /tmp/ccblWEZv.s:979    .text.FLASH_OB_WRPConfig:00000000000000c8 $d
     /tmp/ccblWEZv.s:984    .text.FLASH_OB_RDPConfig:0000000000000000 $t
     /tmp/ccblWEZv.s:1061   .text.FLASH_OB_RDPConfig:000000000000005c $d
     /tmp/ccblWEZv.s:1066   .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/ccblWEZv.s:1360   .text.FLASH_OB_UserConfig:00000000000001f0 $d
     /tmp/ccblWEZv.s:1365   .text.FLASH_OB_PCROPConfig:0000000000000000 $t
     /tmp/ccblWEZv.s:1580   .text.FLASH_OB_PCROPConfig:000000000000014c $d
     /tmp/ccblWEZv.s:1589   .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/ccblWEZv.s:1710   .text.FLASH_OB_GetWRP:0000000000000090 $d
     /tmp/ccblWEZv.s:1715   .text.FLASH_OB_GetRDP:0000000000000000 $t
     /tmp/ccblWEZv.s:1771   .text.FLASH_OB_GetRDP:000000000000002c $d
     /tmp/ccblWEZv.s:1776   .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/ccblWEZv.s:1826   .text.FLASH_OB_GetUser:0000000000000024 $d
     /tmp/ccblWEZv.s:1831   .text.FLASH_OB_GetPCROP:0000000000000000 $t
     /tmp/ccblWEZv.s:2008   .text.FLASH_OB_GetPCROP:00000000000000fc $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
