ARM GAS  /tmp/cc5LhkN2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_pwr_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWREx_GetVoltageRange
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_PWREx_GetVoltageRange:
  26              	.LFB126:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @file    stm32l4xx_hal_pwr_ex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @version V1.5.2
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @date    12-September-2016
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @attention
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * are permitted provided that the following conditions are met:
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer.
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      and/or other materials provided with the distribution.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      may be used to endorse or promote products derived from this software
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      without specific prior written permission.
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
ARM GAS  /tmp/cc5LhkN2.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #include "stm32l4xx_hal.h"
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   (PWR_GPIO_BIT_0|PWR_GPIO_BIT_1)    
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #elif defined (STM32L431xx) || defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   (PWR_GPIO_BIT_0|PWR_GPIO_BIT_1|PWR_GPIO_BIT_3)
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif   
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */ 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVM
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVM thresh
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVM trig
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVM tri
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */ 
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50   /*!< Time out value for REGLPF and VOSF
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
ARM GAS  /tmp/cc5LhkN2.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @verbatim
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     [..]
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @endverbatim
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_RANGE1 or PWR_REGULATOR_VOLTAGE_RANGE2)
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */  
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  28              		.loc 1 125 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
  40              		.loc 1 126 0
  41 0004 044B     		ldr	r3, .L3
  42 0006 1B68     		ldr	r3, [r3]
  43 0008 03F4C063 		and	r3, r3, #1536
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
  44              		.loc 1 127 0
  45 000c 1846     		mov	r0, r3
ARM GAS  /tmp/cc5LhkN2.s 			page 4


  46 000e BD46     		mov	sp, r7
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 13
  49              		@ sp needed
  50 0010 5DF8047B 		ldr	r7, [sp], #4
  51              	.LCFI3:
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0014 7047     		bx	lr
  55              	.L4:
  56 0016 00BF     		.align	2
  57              	.L3:
  58 0018 00700040 		.word	1073770496
  59              		.cfi_endproc
  60              	.LFE126:
  62              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  63              		.align	1
  64              		.global	HAL_PWREx_ControlVoltageScaling
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	HAL_PWREx_ControlVoltageScaling:
  71              	.LFB127:
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE1 Regulator voltage output range 1 mode,
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,  
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 80 MHz.
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_REGULATOR_VOLTAGE_SCALE2 Regulator voltage output range 2 mode,
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,                
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value up to 80 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.                    
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  72              		.loc 1 152 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 16
  75              		@ frame_needed = 1, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77 0000 80B4     		push	{r7}
  78              	.LCFI4:
  79              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/cc5LhkN2.s 			page 5


  80              		.cfi_offset 7, -4
  81 0002 85B0     		sub	sp, sp, #20
  82              	.LCFI5:
  83              		.cfi_def_cfa_offset 24
  84 0004 00AF     		add	r7, sp, #0
  85              	.LCFI6:
  86              		.cfi_def_cfa_register 7
  87 0006 7860     		str	r0, [r7, #4]
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index = 0;  
  88              		.loc 1 153 0
  89 0008 0023     		movs	r3, #0
  90 000a FB60     		str	r3, [r7, #12]
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* If Set Range 1 */
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  91              		.loc 1 158 0
  92 000c 7B68     		ldr	r3, [r7, #4]
  93 000e B3F5007F 		cmp	r3, #512
  94 0012 2FD1     		bne	.L6
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
  95              		.loc 1 160 0
  96 0014 224B     		ldr	r3, .L12
  97 0016 1B68     		ldr	r3, [r3]
  98 0018 03F4C063 		and	r3, r3, #1536
  99 001c B3F5007F 		cmp	r3, #512
 100 0020 37D0     		beq	.L7
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 101              		.loc 1 163 0
 102 0022 1F4A     		ldr	r2, .L12
 103 0024 1E4B     		ldr	r3, .L12
 104 0026 1B68     		ldr	r3, [r3]
 105 0028 23F4C063 		bic	r3, r3, #1536
 106 002c 43F40073 		orr	r3, r3, #512
 107 0030 1360     		str	r3, [r2]
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */      
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 108              		.loc 1 166 0
 109 0032 1C4B     		ldr	r3, .L12+4
 110 0034 1B68     		ldr	r3, [r3]
 111 0036 1C4A     		ldr	r2, .L12+8
 112 0038 A2FB0323 		umull	r2, r3, r2, r3
 113 003c 9B0C     		lsrs	r3, r3, #18
 114 003e 3222     		movs	r2, #50
 115 0040 02FB03F3 		mul	r3, r2, r3
 116 0044 FB60     		str	r3, [r7, #12]
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 117              		.loc 1 167 0
 118 0046 02E0     		b	.L8
 119              	.L10:
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
ARM GAS  /tmp/cc5LhkN2.s 			page 6


 120              		.loc 1 169 0
 121 0048 FB68     		ldr	r3, [r7, #12]
 122 004a 013B     		subs	r3, r3, #1
 123 004c FB60     		str	r3, [r7, #12]
 124              	.L8:
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 125              		.loc 1 167 0
 126 004e FB68     		ldr	r3, [r7, #12]
 127 0050 002B     		cmp	r3, #0
 128 0052 06D0     		beq	.L9
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 129              		.loc 1 167 0 is_stmt 0 discriminator 1
 130 0054 124B     		ldr	r3, .L12
 131 0056 5B69     		ldr	r3, [r3, #20]
 132 0058 03F48063 		and	r3, r3, #1024
 133 005c B3F5806F 		cmp	r3, #1024
 134 0060 F2D0     		beq	.L10
 135              	.L9:
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 136              		.loc 1 171 0 is_stmt 1
 137 0062 0F4B     		ldr	r3, .L12
 138 0064 5B69     		ldr	r3, [r3, #20]
 139 0066 03F48063 		and	r3, r3, #1024
 140 006a B3F5806F 		cmp	r3, #1024
 141 006e 10D1     		bne	.L7
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 142              		.loc 1 173 0
 143 0070 0323     		movs	r3, #3
 144 0072 0FE0     		b	.L11
 145              	.L6:
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 146              		.loc 1 179 0
 147 0074 0A4B     		ldr	r3, .L12
 148 0076 1B68     		ldr	r3, [r3]
 149 0078 03F4C063 		and	r3, r3, #1536
 150 007c B3F5806F 		cmp	r3, #1024
 151 0080 07D0     		beq	.L7
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 2 */
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 152              		.loc 1 182 0
 153 0082 074A     		ldr	r2, .L12
 154 0084 064B     		ldr	r3, .L12
 155 0086 1B68     		ldr	r3, [r3]
 156 0088 23F4C063 		bic	r3, r3, #1536
 157 008c 43F48063 		orr	r3, r3, #1024
 158 0090 1360     		str	r3, [r2]
 159              	.L7:
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* No need to wait for VOSF to be cleared for this transition */
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
ARM GAS  /tmp/cc5LhkN2.s 			page 7


 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 160              		.loc 1 187 0
 161 0092 0023     		movs	r3, #0
 162              	.L11:
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }  
 163              		.loc 1 188 0
 164 0094 1846     		mov	r0, r3
 165 0096 1437     		adds	r7, r7, #20
 166              	.LCFI7:
 167              		.cfi_def_cfa_offset 4
 168 0098 BD46     		mov	sp, r7
 169              	.LCFI8:
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 009a 5DF8047B 		ldr	r7, [sp], #4
 173              	.LCFI9:
 174              		.cfi_restore 7
 175              		.cfi_def_cfa_offset 0
 176 009e 7047     		bx	lr
 177              	.L13:
 178              		.align	2
 179              	.L12:
 180 00a0 00700040 		.word	1073770496
 181 00a4 00000000 		.word	SystemCoreClock
 182 00a8 83DE1B43 		.word	1125899907
 183              		.cfi_endproc
 184              	.LFE127:
 186              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 187              		.align	1
 188              		.global	HAL_PWREx_EnableBatteryCharging
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu fpv4-sp-d16
 194              	HAL_PWREx_EnableBatteryCharging:
 195              	.LFB128:
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT thru an internal resistor.  
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_5     5 kOhms resistor
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_BATTERY_CHARGING_RESISTOR_1_5 1.5 kOhms resistor 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 196              		.loc 1 201 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 8
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200              		@ link register save eliminated.
 201 0000 80B4     		push	{r7}
ARM GAS  /tmp/cc5LhkN2.s 			page 8


 202              	.LCFI10:
 203              		.cfi_def_cfa_offset 4
 204              		.cfi_offset 7, -4
 205 0002 83B0     		sub	sp, sp, #12
 206              	.LCFI11:
 207              		.cfi_def_cfa_offset 16
 208 0004 00AF     		add	r7, sp, #0
 209              	.LCFI12:
 210              		.cfi_def_cfa_register 7
 211 0006 7860     		str	r0, [r7, #4]
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 212              		.loc 1 205 0
 213 0008 0949     		ldr	r1, .L15
 214 000a 094B     		ldr	r3, .L15
 215 000c DB68     		ldr	r3, [r3, #12]
 216 000e 23F40072 		bic	r2, r3, #512
 217 0012 7B68     		ldr	r3, [r7, #4]
 218 0014 1343     		orrs	r3, r3, r2
 219 0016 CB60     		str	r3, [r1, #12]
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 220              		.loc 1 208 0
 221 0018 054A     		ldr	r2, .L15
 222 001a 054B     		ldr	r3, .L15
 223 001c DB68     		ldr	r3, [r3, #12]
 224 001e 43F48073 		orr	r3, r3, #256
 225 0022 D360     		str	r3, [r2, #12]
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 226              		.loc 1 209 0
 227 0024 00BF     		nop
 228 0026 0C37     		adds	r7, r7, #12
 229              	.LCFI13:
 230              		.cfi_def_cfa_offset 4
 231 0028 BD46     		mov	sp, r7
 232              	.LCFI14:
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 002a 5DF8047B 		ldr	r7, [sp], #4
 236              	.LCFI15:
 237              		.cfi_restore 7
 238              		.cfi_def_cfa_offset 0
 239 002e 7047     		bx	lr
 240              	.L16:
 241              		.align	2
 242              	.L15:
 243 0030 00700040 		.word	1073770496
 244              		.cfi_endproc
 245              	.LFE128:
 247              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 248              		.align	1
 249              		.global	HAL_PWREx_DisableBatteryCharging
 250              		.syntax unified
 251              		.thumb
ARM GAS  /tmp/cc5LhkN2.s 			page 9


 252              		.thumb_func
 253              		.fpu fpv4-sp-d16
 255              	HAL_PWREx_DisableBatteryCharging:
 256              	.LFB129:
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.  
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 257              		.loc 1 217 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262 0000 80B4     		push	{r7}
 263              	.LCFI16:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 00AF     		add	r7, sp, #0
 267              	.LCFI17:
 268              		.cfi_def_cfa_register 7
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE); 
 269              		.loc 1 218 0
 270 0004 054A     		ldr	r2, .L18
 271 0006 054B     		ldr	r3, .L18
 272 0008 DB68     		ldr	r3, [r3, #12]
 273 000a 23F48073 		bic	r3, r3, #256
 274 000e D360     		str	r3, [r2, #12]
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }  
 275              		.loc 1 219 0
 276 0010 00BF     		nop
 277 0012 BD46     		mov	sp, r7
 278              	.LCFI18:
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0014 5DF8047B 		ldr	r7, [sp], #4
 282              	.LCFI19:
 283              		.cfi_restore 7
 284              		.cfi_def_cfa_offset 0
 285 0018 7047     		bx	lr
 286              	.L19:
 287 001a 00BF     		.align	2
 288              	.L18:
 289 001c 00700040 		.word	1073770496
 290              		.cfi_endproc
 291              	.LFE129:
 293              		.section	.text.HAL_PWREx_EnableVddUSB,"ax",%progbits
 294              		.align	1
 295              		.global	HAL_PWREx_EnableVddUSB
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	HAL_PWREx_EnableVddUSB:
ARM GAS  /tmp/cc5LhkN2.s 			page 10


 302              	.LFB130:
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32L443xx
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDUSB supply. 
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDUSB electrical and logical isolation, once VDDUSB supply is present.  
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddUSB(void)
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 303              		.loc 1 229 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              	.LCFI20:
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 7, -4
 312 0002 00AF     		add	r7, sp, #0
 313              	.LCFI21:
 314              		.cfi_def_cfa_register 7
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_USV);
 315              		.loc 1 230 0
 316 0004 054A     		ldr	r2, .L21
 317 0006 054B     		ldr	r3, .L21
 318 0008 5B68     		ldr	r3, [r3, #4]
 319 000a 43F48063 		orr	r3, r3, #1024
 320 000e 5360     		str	r3, [r2, #4]
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 321              		.loc 1 231 0
 322 0010 00BF     		nop
 323 0012 BD46     		mov	sp, r7
 324              	.LCFI22:
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0014 5DF8047B 		ldr	r7, [sp], #4
 328              	.LCFI23:
 329              		.cfi_restore 7
 330              		.cfi_def_cfa_offset 0
 331 0018 7047     		bx	lr
 332              	.L22:
 333 001a 00BF     		.align	2
 334              	.L21:
 335 001c 00700040 		.word	1073770496
 336              		.cfi_endproc
 337              	.LFE130:
 339              		.section	.text.HAL_PWREx_DisableVddUSB,"ax",%progbits
 340              		.align	1
 341              		.global	HAL_PWREx_DisableVddUSB
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	HAL_PWREx_DisableVddUSB:
 348              	.LFB131:
ARM GAS  /tmp/cc5LhkN2.s 			page 11


 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDUSB supply. 
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddUSB(void)
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 349              		.loc 1 239 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI24:
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 00AF     		add	r7, sp, #0
 359              	.LCFI25:
 360              		.cfi_def_cfa_register 7
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_USV);
 361              		.loc 1 240 0
 362 0004 054A     		ldr	r2, .L24
 363 0006 054B     		ldr	r3, .L24
 364 0008 5B68     		ldr	r3, [r3, #4]
 365 000a 23F48063 		bic	r3, r3, #1024
 366 000e 5360     		str	r3, [r2, #4]
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 367              		.loc 1 241 0
 368 0010 00BF     		nop
 369 0012 BD46     		mov	sp, r7
 370              	.LCFI26:
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0014 5DF8047B 		ldr	r7, [sp], #4
 374              	.LCFI27:
 375              		.cfi_restore 7
 376              		.cfi_def_cfa_offset 0
 377 0018 7047     		bx	lr
 378              	.L25:
 379 001a 00BF     		.align	2
 380              	.L24:
 381 001c 00700040 		.word	1073770496
 382              		.cfi_endproc
 383              	.LFE131:
 385              		.section	.text.HAL_PWREx_EnableVddIO2,"ax",%progbits
 386              		.align	1
 387              		.global	HAL_PWREx_EnableVddIO2
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 391              		.fpu fpv4-sp-d16
 393              	HAL_PWREx_EnableVddIO2:
 394              	.LFB132:
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
ARM GAS  /tmp/cc5LhkN2.s 			page 12


 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDIO2 supply. 
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply is present. 
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddIO2(void)
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 395              		.loc 1 251 0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 1, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 400 0000 80B4     		push	{r7}
 401              	.LCFI28:
 402              		.cfi_def_cfa_offset 4
 403              		.cfi_offset 7, -4
 404 0002 00AF     		add	r7, sp, #0
 405              	.LCFI29:
 406              		.cfi_def_cfa_register 7
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 407              		.loc 1 252 0
 408 0004 054A     		ldr	r2, .L27
 409 0006 054B     		ldr	r3, .L27
 410 0008 5B68     		ldr	r3, [r3, #4]
 411 000a 43F40073 		orr	r3, r3, #512
 412 000e 5360     		str	r3, [r2, #4]
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 413              		.loc 1 253 0
 414 0010 00BF     		nop
 415 0012 BD46     		mov	sp, r7
 416              	.LCFI30:
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
 419 0014 5DF8047B 		ldr	r7, [sp], #4
 420              	.LCFI31:
 421              		.cfi_restore 7
 422              		.cfi_def_cfa_offset 0
 423 0018 7047     		bx	lr
 424              	.L28:
 425 001a 00BF     		.align	2
 426              	.L27:
 427 001c 00700040 		.word	1073770496
 428              		.cfi_endproc
 429              	.LFE132:
 431              		.section	.text.HAL_PWREx_DisableVddIO2,"ax",%progbits
 432              		.align	1
 433              		.global	HAL_PWREx_DisableVddIO2
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	HAL_PWREx_DisableVddIO2:
 440              	.LFB133:
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDIO2 supply. 
ARM GAS  /tmp/cc5LhkN2.s 			page 13


 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddIO2(void)
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 441              		.loc 1 261 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 1, uses_anonymous_args = 0
 445              		@ link register save eliminated.
 446 0000 80B4     		push	{r7}
 447              	.LCFI32:
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0002 00AF     		add	r7, sp, #0
 451              	.LCFI33:
 452              		.cfi_def_cfa_register 7
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_IOSV);
 453              		.loc 1 262 0
 454 0004 054A     		ldr	r2, .L30
 455 0006 054B     		ldr	r3, .L30
 456 0008 5B68     		ldr	r3, [r3, #4]
 457 000a 23F40073 		bic	r3, r3, #512
 458 000e 5360     		str	r3, [r2, #4]
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 459              		.loc 1 263 0
 460 0010 00BF     		nop
 461 0012 BD46     		mov	sp, r7
 462              	.LCFI34:
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 0014 5DF8047B 		ldr	r7, [sp], #4
 466              	.LCFI35:
 467              		.cfi_restore 7
 468              		.cfi_def_cfa_offset 0
 469 0018 7047     		bx	lr
 470              	.L31:
 471 001a 00BF     		.align	2
 472              	.L30:
 473 001c 00700040 		.word	1073770496
 474              		.cfi_endproc
 475              	.LFE133:
 477              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 478              		.align	1
 479              		.global	HAL_PWREx_EnableInternalWakeUpLine
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu fpv4-sp-d16
 485              	HAL_PWREx_EnableInternalWakeUpLine:
 486              	.LFB134:
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line. 
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/cc5LhkN2.s 			page 14


 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 487              		.loc 1 272 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              	.LCFI36:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 00AF     		add	r7, sp, #0
 497              	.LCFI37:
 498              		.cfi_def_cfa_register 7
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 499              		.loc 1 273 0
 500 0004 054A     		ldr	r2, .L33
 501 0006 054B     		ldr	r3, .L33
 502 0008 9B68     		ldr	r3, [r3, #8]
 503 000a 43F40043 		orr	r3, r3, #32768
 504 000e 9360     		str	r3, [r2, #8]
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 505              		.loc 1 274 0
 506 0010 00BF     		nop
 507 0012 BD46     		mov	sp, r7
 508              	.LCFI38:
 509              		.cfi_def_cfa_register 13
 510              		@ sp needed
 511 0014 5DF8047B 		ldr	r7, [sp], #4
 512              	.LCFI39:
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 0018 7047     		bx	lr
 516              	.L34:
 517 001a 00BF     		.align	2
 518              	.L33:
 519 001c 00700040 		.word	1073770496
 520              		.cfi_endproc
 521              	.LFE134:
 523              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 524              		.align	1
 525              		.global	HAL_PWREx_DisableInternalWakeUpLine
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 529              		.fpu fpv4-sp-d16
 531              	HAL_PWREx_DisableInternalWakeUpLine:
 532              	.LFB135:
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line. 
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 533              		.loc 1 282 0
ARM GAS  /tmp/cc5LhkN2.s 			page 15


 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 1, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 538 0000 80B4     		push	{r7}
 539              	.LCFI40:
 540              		.cfi_def_cfa_offset 4
 541              		.cfi_offset 7, -4
 542 0002 00AF     		add	r7, sp, #0
 543              	.LCFI41:
 544              		.cfi_def_cfa_register 7
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 545              		.loc 1 283 0
 546 0004 054A     		ldr	r2, .L36
 547 0006 054B     		ldr	r3, .L36
 548 0008 9B68     		ldr	r3, [r3, #8]
 549 000a 23F40043 		bic	r3, r3, #32768
 550 000e 9360     		str	r3, [r2, #8]
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 551              		.loc 1 284 0
 552 0010 00BF     		nop
 553 0012 BD46     		mov	sp, r7
 554              	.LCFI42:
 555              		.cfi_def_cfa_register 13
 556              		@ sp needed
 557 0014 5DF8047B 		ldr	r7, [sp], #4
 558              	.LCFI43:
 559              		.cfi_restore 7
 560              		.cfi_def_cfa_offset 0
 561 0018 7047     		bx	lr
 562              	.L37:
 563 001a 00BF     		.align	2
 564              	.L36:
 565 001c 00700040 		.word	1073770496
 566              		.cfi_endproc
 567              	.LFE135:
 569              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 570              		.align	1
 571              		.global	HAL_PWREx_EnableGPIOPullUp
 572              		.syntax unified
 573              		.thumb
 574              		.thumb_func
 575              		.fpu fpv4-sp-d16
 577              	HAL_PWREx_EnableGPIOPullUp:
 578              	.LFB136:
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in 
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes. 
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit 
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the 
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode. 
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
ARM GAS  /tmp/cc5LhkN2.s 			page 16


 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved. 
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input 
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.     
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H 
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set 
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.    
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 579              		.loc 1 310 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 8
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584 0000 80B4     		push	{r7}
 585              	.LCFI44:
 586              		.cfi_def_cfa_offset 4
 587              		.cfi_offset 7, -4
 588 0002 83B0     		sub	sp, sp, #12
 589              	.LCFI45:
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              	.LCFI46:
 593              		.cfi_def_cfa_register 7
 594 0006 7860     		str	r0, [r7, #4]
 595 0008 3960     		str	r1, [r7]
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 596              		.loc 1 314 0
 597 000a 7B68     		ldr	r3, [r7, #4]
 598 000c 072B     		cmp	r3, #7
 599 000e 00F28D80 		bhi	.L39
 600 0012 01A2     		adr	r2, .L41
 601 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 602              		.p2align 2
 603              	.L41:
 604 0018 39000000 		.word	.L40+1
 605 001c 5D000000 		.word	.L42+1
 606 0020 7D000000 		.word	.L43+1
 607 0024 99000000 		.word	.L44+1
 608 0028 B5000000 		.word	.L45+1
 609 002c D1000000 		.word	.L46+1
 610 0030 ED000000 		.word	.L47+1
 611 0034 09010000 		.word	.L48+1
 612              		.p2align 1
 613              	.L40:
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 614              		.loc 1 317 0
ARM GAS  /tmp/cc5LhkN2.s 			page 17


 615 0038 4149     		ldr	r1, .L51
 616 003a 414B     		ldr	r3, .L51
 617 003c 1A6A     		ldr	r2, [r3, #32]
 618 003e 3B68     		ldr	r3, [r7]
 619 0040 23F48043 		bic	r3, r3, #16384
 620 0044 1343     		orrs	r3, r3, r2
 621 0046 0B62     		str	r3, [r1, #32]
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));                 
 622              		.loc 1 318 0
 623 0048 3D49     		ldr	r1, .L51
 624 004a 3D4B     		ldr	r3, .L51
 625 004c 5A6A     		ldr	r2, [r3, #36]
 626 004e 3B68     		ldr	r3, [r7]
 627 0050 23F42043 		bic	r3, r3, #40960
 628 0054 DB43     		mvns	r3, r3
 629 0056 1340     		ands	r3, r3, r2
 630 0058 4B62     		str	r3, [r1, #36]
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 631              		.loc 1 319 0
 632 005a 69E0     		b	.L49
 633              	.L42:
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 634              		.loc 1 321 0
 635 005c 3849     		ldr	r1, .L51
 636 005e 384B     		ldr	r3, .L51
 637 0060 9A6A     		ldr	r2, [r3, #40]
 638 0062 3B68     		ldr	r3, [r7]
 639 0064 1343     		orrs	r3, r3, r2
 640 0066 8B62     		str	r3, [r1, #40]
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));                  
 641              		.loc 1 322 0
 642 0068 3549     		ldr	r1, .L51
 643 006a 354B     		ldr	r3, .L51
 644 006c DA6A     		ldr	r2, [r3, #44]
 645 006e 3B68     		ldr	r3, [r7]
 646 0070 23F01003 		bic	r3, r3, #16
 647 0074 DB43     		mvns	r3, r3
 648 0076 1340     		ands	r3, r3, r2
 649 0078 CB62     		str	r3, [r1, #44]
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 650              		.loc 1 323 0
 651 007a 59E0     		b	.L49
 652              	.L43:
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 653              		.loc 1 325 0
 654 007c 3049     		ldr	r1, .L51
 655 007e 304B     		ldr	r3, .L51
 656 0080 1A6B     		ldr	r2, [r3, #48]
 657 0082 3B68     		ldr	r3, [r7]
 658 0084 1343     		orrs	r3, r3, r2
 659 0086 0B63     		str	r3, [r1, #48]
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);         
 660              		.loc 1 326 0
 661 0088 2D49     		ldr	r1, .L51
 662 008a 2D4B     		ldr	r3, .L51
ARM GAS  /tmp/cc5LhkN2.s 			page 18


 663 008c 5A6B     		ldr	r2, [r3, #52]
 664 008e 3B68     		ldr	r3, [r7]
 665 0090 DB43     		mvns	r3, r3
 666 0092 1340     		ands	r3, r3, r2
 667 0094 4B63     		str	r3, [r1, #52]
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 668              		.loc 1 327 0
 669 0096 4BE0     		b	.L49
 670              	.L44:
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L431xx) || defined (STM32L433xx) || defined (STM32L443xx) || defined (STM32L471xx
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 671              		.loc 1 330 0
 672 0098 2949     		ldr	r1, .L51
 673 009a 294B     		ldr	r3, .L51
 674 009c 9A6B     		ldr	r2, [r3, #56]
 675 009e 3B68     		ldr	r3, [r7]
 676 00a0 1343     		orrs	r3, r3, r2
 677 00a2 8B63     		str	r3, [r1, #56]
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);         
 678              		.loc 1 331 0
 679 00a4 2649     		ldr	r1, .L51
 680 00a6 264B     		ldr	r3, .L51
 681 00a8 DA6B     		ldr	r2, [r3, #60]
 682 00aa 3B68     		ldr	r3, [r7]
 683 00ac DB43     		mvns	r3, r3
 684 00ae 1340     		ands	r3, r3, r2
 685 00b0 CB63     		str	r3, [r1, #60]
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 686              		.loc 1 332 0
 687 00b2 3DE0     		b	.L49
 688              	.L45:
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 689              		.loc 1 334 0
 690 00b4 2249     		ldr	r1, .L51
 691 00b6 224B     		ldr	r3, .L51
 692 00b8 1A6C     		ldr	r2, [r3, #64]
 693 00ba 3B68     		ldr	r3, [r7]
 694 00bc 1343     		orrs	r3, r3, r2
 695 00be 0B64     		str	r3, [r1, #64]
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);         
 696              		.loc 1 335 0
 697 00c0 1F49     		ldr	r1, .L51
 698 00c2 1F4B     		ldr	r3, .L51
 699 00c4 5A6C     		ldr	r2, [r3, #68]
 700 00c6 3B68     		ldr	r3, [r7]
 701 00c8 DB43     		mvns	r3, r3
 702 00ca 1340     		ands	r3, r3, r2
 703 00cc 4B64     		str	r3, [r1, #68]
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 704              		.loc 1 336 0
 705 00ce 2FE0     		b	.L49
 706              	.L46:
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
ARM GAS  /tmp/cc5LhkN2.s 			page 19


 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, GPIONumber);
 707              		.loc 1 340 0
 708 00d0 1B49     		ldr	r1, .L51
 709 00d2 1B4B     		ldr	r3, .L51
 710 00d4 9A6C     		ldr	r2, [r3, #72]
 711 00d6 3B68     		ldr	r3, [r7]
 712 00d8 1343     		orrs	r3, r3, r2
 713 00da 8B64     		str	r3, [r1, #72]
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);         
 714              		.loc 1 341 0
 715 00dc 1849     		ldr	r1, .L51
 716 00de 184B     		ldr	r3, .L51
 717 00e0 DA6C     		ldr	r2, [r3, #76]
 718 00e2 3B68     		ldr	r3, [r7]
 719 00e4 DB43     		mvns	r3, r3
 720 00e6 1340     		ands	r3, r3, r2
 721 00e8 CB64     		str	r3, [r1, #76]
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 722              		.loc 1 342 0
 723 00ea 21E0     		b	.L49
 724              	.L47:
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, GPIONumber);
 725              		.loc 1 344 0
 726 00ec 1449     		ldr	r1, .L51
 727 00ee 144B     		ldr	r3, .L51
 728 00f0 1A6D     		ldr	r2, [r3, #80]
 729 00f2 3B68     		ldr	r3, [r7]
 730 00f4 1343     		orrs	r3, r3, r2
 731 00f6 0B65     		str	r3, [r1, #80]
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);         
 732              		.loc 1 345 0
 733 00f8 1149     		ldr	r1, .L51
 734 00fa 114B     		ldr	r3, .L51
 735 00fc 5A6D     		ldr	r2, [r3, #84]
 736 00fe 3B68     		ldr	r3, [r7]
 737 0100 DB43     		mvns	r3, r3
 738 0102 1340     		ands	r3, r3, r2
 739 0104 4B65     		str	r3, [r1, #84]
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 740              		.loc 1 346 0
 741 0106 13E0     		b	.L49
 742              	.L48:
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif           
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 743              		.loc 1 349 0
 744 0108 0D49     		ldr	r1, .L51
 745 010a 0D4B     		ldr	r3, .L51
 746 010c 9A6D     		ldr	r2, [r3, #88]
 747 010e 3B68     		ldr	r3, [r7]
 748 0110 03F00303 		and	r3, r3, #3
 749 0114 1343     		orrs	r3, r3, r2
 750 0116 8B65     		str	r3, [r1, #88]
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));           
 751              		.loc 1 350 0
 752 0118 0949     		ldr	r1, .L51
ARM GAS  /tmp/cc5LhkN2.s 			page 20


 753 011a 094B     		ldr	r3, .L51
 754 011c DA6D     		ldr	r2, [r3, #92]
 755 011e 3B68     		ldr	r3, [r7]
 756 0120 03F00303 		and	r3, r3, #3
 757 0124 DB43     		mvns	r3, r3
 758 0126 1340     		ands	r3, r3, r2
 759 0128 CB65     		str	r3, [r1, #92]
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 760              		.loc 1 351 0
 761 012a 01E0     		b	.L49
 762              	.L39:
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 763              		.loc 1 353 0
 764 012c 0123     		movs	r3, #1
 765 012e 00E0     		b	.L50
 766              	.L49:
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 767              		.loc 1 356 0
 768 0130 0023     		movs	r3, #0
 769              	.L50:
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 770              		.loc 1 357 0
 771 0132 1846     		mov	r0, r3
 772 0134 0C37     		adds	r7, r7, #12
 773              	.LCFI47:
 774              		.cfi_def_cfa_offset 4
 775 0136 BD46     		mov	sp, r7
 776              	.LCFI48:
 777              		.cfi_def_cfa_register 13
 778              		@ sp needed
 779 0138 5DF8047B 		ldr	r7, [sp], #4
 780              	.LCFI49:
 781              		.cfi_restore 7
 782              		.cfi_def_cfa_offset 0
 783 013c 7047     		bx	lr
 784              	.L52:
 785 013e 00BF     		.align	2
 786              	.L51:
 787 0140 00700040 		.word	1073770496
 788              		.cfi_endproc
 789              	.LFE136:
 791              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 792              		.align	1
 793              		.global	HAL_PWREx_DisableGPIOPullUp
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu fpv4-sp-d16
 799              	HAL_PWREx_DisableGPIOPullUp:
 800              	.LFB137:
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
ARM GAS  /tmp/cc5LhkN2.s 			page 21


 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input 
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.      
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H 
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset 
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 801              		.loc 1 376 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 8
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              	.LCFI50:
 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 7, -4
 810 0002 83B0     		sub	sp, sp, #12
 811              	.LCFI51:
 812              		.cfi_def_cfa_offset 16
 813 0004 00AF     		add	r7, sp, #0
 814              	.LCFI52:
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 817 0008 3960     		str	r1, [r7]
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 818              		.loc 1 380 0
 819 000a 7B68     		ldr	r3, [r7, #4]
 820 000c 072B     		cmp	r3, #7
 821 000e 57D8     		bhi	.L54
 822 0010 01A2     		adr	r2, .L56
 823 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 824 0016 00BF     		.p2align 2
 825              	.L56:
 826 0018 39000000 		.word	.L55+1
 827 001c 4D000000 		.word	.L57+1
 828 0020 5D000000 		.word	.L58+1
 829 0024 6D000000 		.word	.L59+1
 830 0028 7D000000 		.word	.L60+1
 831 002c 8D000000 		.word	.L61+1
 832 0030 9D000000 		.word	.L62+1
 833 0034 AD000000 		.word	.L63+1
 834              		.p2align 1
 835              	.L55:
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));         
ARM GAS  /tmp/cc5LhkN2.s 			page 22


 836              		.loc 1 383 0
 837 0038 2649     		ldr	r1, .L66
 838 003a 264B     		ldr	r3, .L66
 839 003c 1A6A     		ldr	r2, [r3, #32]
 840 003e 3B68     		ldr	r3, [r7]
 841 0040 23F48043 		bic	r3, r3, #16384
 842 0044 DB43     		mvns	r3, r3
 843 0046 1340     		ands	r3, r3, r2
 844 0048 0B62     		str	r3, [r1, #32]
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 845              		.loc 1 384 0
 846 004a 3BE0     		b	.L64
 847              	.L57:
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 848              		.loc 1 386 0
 849 004c 2149     		ldr	r1, .L66
 850 004e 214B     		ldr	r3, .L66
 851 0050 9A6A     		ldr	r2, [r3, #40]
 852 0052 3B68     		ldr	r3, [r7]
 853 0054 DB43     		mvns	r3, r3
 854 0056 1340     		ands	r3, r3, r2
 855 0058 8B62     		str	r3, [r1, #40]
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 856              		.loc 1 387 0
 857 005a 33E0     		b	.L64
 858              	.L58:
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 859              		.loc 1 389 0
 860 005c 1D49     		ldr	r1, .L66
 861 005e 1D4B     		ldr	r3, .L66
 862 0060 1A6B     		ldr	r2, [r3, #48]
 863 0062 3B68     		ldr	r3, [r7]
 864 0064 DB43     		mvns	r3, r3
 865 0066 1340     		ands	r3, r3, r2
 866 0068 0B63     		str	r3, [r1, #48]
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 867              		.loc 1 390 0
 868 006a 2BE0     		b	.L64
 869              	.L59:
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L431xx) || defined (STM32L433xx) || defined (STM32L443xx) || defined (STM32L471xx
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 870              		.loc 1 393 0
 871 006c 1949     		ldr	r1, .L66
 872 006e 194B     		ldr	r3, .L66
 873 0070 9A6B     		ldr	r2, [r3, #56]
 874 0072 3B68     		ldr	r3, [r7]
 875 0074 DB43     		mvns	r3, r3
 876 0076 1340     		ands	r3, r3, r2
 877 0078 8B63     		str	r3, [r1, #56]
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 878              		.loc 1 394 0
 879 007a 23E0     		b	.L64
 880              	.L60:
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
ARM GAS  /tmp/cc5LhkN2.s 			page 23


 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 881              		.loc 1 396 0
 882 007c 1549     		ldr	r1, .L66
 883 007e 154B     		ldr	r3, .L66
 884 0080 1A6C     		ldr	r2, [r3, #64]
 885 0082 3B68     		ldr	r3, [r7]
 886 0084 DB43     		mvns	r3, r3
 887 0086 1340     		ands	r3, r3, r2
 888 0088 0B64     		str	r3, [r1, #64]
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 889              		.loc 1 397 0
 890 008a 1BE0     		b	.L64
 891              	.L61:
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 892              		.loc 1 401 0
 893 008c 1149     		ldr	r1, .L66
 894 008e 114B     		ldr	r3, .L66
 895 0090 9A6C     		ldr	r2, [r3, #72]
 896 0092 3B68     		ldr	r3, [r7]
 897 0094 DB43     		mvns	r3, r3
 898 0096 1340     		ands	r3, r3, r2
 899 0098 8B64     		str	r3, [r1, #72]
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 900              		.loc 1 402 0
 901 009a 13E0     		b	.L64
 902              	.L62:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 903              		.loc 1 404 0
 904 009c 0D49     		ldr	r1, .L66
 905 009e 0D4B     		ldr	r3, .L66
 906 00a0 1A6D     		ldr	r2, [r3, #80]
 907 00a2 3B68     		ldr	r3, [r7]
 908 00a4 DB43     		mvns	r3, r3
 909 00a6 1340     		ands	r3, r3, r2
 910 00a8 0B65     		str	r3, [r1, #80]
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 911              		.loc 1 405 0
 912 00aa 0BE0     		b	.L64
 913              	.L63:
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif           
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 914              		.loc 1 408 0
 915 00ac 0949     		ldr	r1, .L66
 916 00ae 094B     		ldr	r3, .L66
 917 00b0 9A6D     		ldr	r2, [r3, #88]
 918 00b2 3B68     		ldr	r3, [r7]
 919 00b4 03F00303 		and	r3, r3, #3
 920 00b8 DB43     		mvns	r3, r3
 921 00ba 1340     		ands	r3, r3, r2
 922 00bc 8B65     		str	r3, [r1, #88]
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 923              		.loc 1 409 0
ARM GAS  /tmp/cc5LhkN2.s 			page 24


 924 00be 01E0     		b	.L64
 925              	.L54:
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 926              		.loc 1 411 0
 927 00c0 0123     		movs	r3, #1
 928 00c2 00E0     		b	.L65
 929              	.L64:
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 930              		.loc 1 414 0
 931 00c4 0023     		movs	r3, #0
 932              	.L65:
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 933              		.loc 1 415 0
 934 00c6 1846     		mov	r0, r3
 935 00c8 0C37     		adds	r7, r7, #12
 936              	.LCFI53:
 937              		.cfi_def_cfa_offset 4
 938 00ca BD46     		mov	sp, r7
 939              	.LCFI54:
 940              		.cfi_def_cfa_register 13
 941              		@ sp needed
 942 00cc 5DF8047B 		ldr	r7, [sp], #4
 943              	.LCFI55:
 944              		.cfi_restore 7
 945              		.cfi_def_cfa_offset 0
 946 00d0 7047     		bx	lr
 947              	.L67:
 948 00d2 00BF     		.align	2
 949              	.L66:
 950 00d4 00700040 		.word	1073770496
 951              		.cfi_endproc
 952              	.LFE137:
 954              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 955              		.align	1
 956              		.global	HAL_PWREx_EnableGPIOPullDown
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 960              		.fpu fpv4-sp-d16
 962              	HAL_PWREx_EnableGPIOPullDown:
 963              	.LFB138:
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in 
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes. 
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API. 
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the 
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode. 
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved. 
ARM GAS  /tmp/cc5LhkN2.s 			page 25


 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input 
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.         
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H 
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set 
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 964              		.loc 1 441 0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 8
 967              		@ frame_needed = 1, uses_anonymous_args = 0
 968              		@ link register save eliminated.
 969 0000 80B4     		push	{r7}
 970              	.LCFI56:
 971              		.cfi_def_cfa_offset 4
 972              		.cfi_offset 7, -4
 973 0002 83B0     		sub	sp, sp, #12
 974              	.LCFI57:
 975              		.cfi_def_cfa_offset 16
 976 0004 00AF     		add	r7, sp, #0
 977              	.LCFI58:
 978              		.cfi_def_cfa_register 7
 979 0006 7860     		str	r0, [r7, #4]
 980 0008 3960     		str	r1, [r7]
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 981              		.loc 1 445 0
 982 000a 7B68     		ldr	r3, [r7, #4]
 983 000c 072B     		cmp	r3, #7
 984 000e 00F28D80 		bhi	.L69
 985 0012 01A2     		adr	r2, .L71
 986 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 987              		.p2align 2
 988              	.L71:
 989 0018 39000000 		.word	.L70+1
 990 001c 5D000000 		.word	.L72+1
 991 0020 7D000000 		.word	.L73+1
 992 0024 99000000 		.word	.L74+1
 993 0028 B5000000 		.word	.L75+1
 994 002c D1000000 		.word	.L76+1
 995 0030 ED000000 		.word	.L77+1
 996 0034 09010000 		.word	.L78+1
 997              		.p2align 1
 998              	.L70:
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   { 
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));        
 999              		.loc 1 448 0
 1000 0038 4149     		ldr	r1, .L81
ARM GAS  /tmp/cc5LhkN2.s 			page 26


 1001 003a 414B     		ldr	r3, .L81
 1002 003c 5A6A     		ldr	r2, [r3, #36]
 1003 003e 3B68     		ldr	r3, [r7]
 1004 0040 23F42043 		bic	r3, r3, #40960
 1005 0044 1343     		orrs	r3, r3, r2
 1006 0046 4B62     		str	r3, [r1, #36]
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));           
 1007              		.loc 1 449 0
 1008 0048 3D49     		ldr	r1, .L81
 1009 004a 3D4B     		ldr	r3, .L81
 1010 004c 1A6A     		ldr	r2, [r3, #32]
 1011 004e 3B68     		ldr	r3, [r7]
 1012 0050 23F48043 		bic	r3, r3, #16384
 1013 0054 DB43     		mvns	r3, r3
 1014 0056 1340     		ands	r3, r3, r2
 1015 0058 0B62     		str	r3, [r1, #32]
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1016              		.loc 1 450 0
 1017 005a 69E0     		b	.L79
 1018              	.L72:
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 1019              		.loc 1 452 0
 1020 005c 3849     		ldr	r1, .L81
 1021 005e 384B     		ldr	r3, .L81
 1022 0060 DA6A     		ldr	r2, [r3, #44]
 1023 0062 3B68     		ldr	r3, [r7]
 1024 0064 23F01003 		bic	r3, r3, #16
 1025 0068 1343     		orrs	r3, r3, r2
 1026 006a CB62     		str	r3, [r1, #44]
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);                    
 1027              		.loc 1 453 0
 1028 006c 3449     		ldr	r1, .L81
 1029 006e 344B     		ldr	r3, .L81
 1030 0070 9A6A     		ldr	r2, [r3, #40]
 1031 0072 3B68     		ldr	r3, [r7]
 1032 0074 DB43     		mvns	r3, r3
 1033 0076 1340     		ands	r3, r3, r2
 1034 0078 8B62     		str	r3, [r1, #40]
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1035              		.loc 1 454 0
 1036 007a 59E0     		b	.L79
 1037              	.L73:
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 1038              		.loc 1 456 0
 1039 007c 3049     		ldr	r1, .L81
 1040 007e 304B     		ldr	r3, .L81
 1041 0080 5A6B     		ldr	r2, [r3, #52]
 1042 0082 3B68     		ldr	r3, [r7]
 1043 0084 1343     		orrs	r3, r3, r2
 1044 0086 4B63     		str	r3, [r1, #52]
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);        
 1045              		.loc 1 457 0
 1046 0088 2D49     		ldr	r1, .L81
 1047 008a 2D4B     		ldr	r3, .L81
 1048 008c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/cc5LhkN2.s 			page 27


 1049 008e 3B68     		ldr	r3, [r7]
 1050 0090 DB43     		mvns	r3, r3
 1051 0092 1340     		ands	r3, r3, r2
 1052 0094 0B63     		str	r3, [r1, #48]
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1053              		.loc 1 458 0
 1054 0096 4BE0     		b	.L79
 1055              	.L74:
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L431xx) || defined (STM32L433xx) || defined (STM32L443xx) || defined (STM32L471xx
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 1056              		.loc 1 461 0
 1057 0098 2949     		ldr	r1, .L81
 1058 009a 294B     		ldr	r3, .L81
 1059 009c DA6B     		ldr	r2, [r3, #60]
 1060 009e 3B68     		ldr	r3, [r7]
 1061 00a0 1343     		orrs	r3, r3, r2
 1062 00a2 CB63     		str	r3, [r1, #60]
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);        
 1063              		.loc 1 462 0
 1064 00a4 2649     		ldr	r1, .L81
 1065 00a6 264B     		ldr	r3, .L81
 1066 00a8 9A6B     		ldr	r2, [r3, #56]
 1067 00aa 3B68     		ldr	r3, [r7]
 1068 00ac DB43     		mvns	r3, r3
 1069 00ae 1340     		ands	r3, r3, r2
 1070 00b0 8B63     		str	r3, [r1, #56]
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1071              		.loc 1 463 0
 1072 00b2 3DE0     		b	.L79
 1073              	.L75:
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 1074              		.loc 1 465 0
 1075 00b4 2249     		ldr	r1, .L81
 1076 00b6 224B     		ldr	r3, .L81
 1077 00b8 5A6C     		ldr	r2, [r3, #68]
 1078 00ba 3B68     		ldr	r3, [r7]
 1079 00bc 1343     		orrs	r3, r3, r2
 1080 00be 4B64     		str	r3, [r1, #68]
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);        
 1081              		.loc 1 466 0
 1082 00c0 1F49     		ldr	r1, .L81
 1083 00c2 1F4B     		ldr	r3, .L81
 1084 00c4 1A6C     		ldr	r2, [r3, #64]
 1085 00c6 3B68     		ldr	r3, [r7]
 1086 00c8 DB43     		mvns	r3, r3
 1087 00ca 1340     		ands	r3, r3, r2
 1088 00cc 0B64     		str	r3, [r1, #64]
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1089              		.loc 1 467 0
 1090 00ce 2FE0     		b	.L79
 1091              	.L76:
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, GPIONumber);
ARM GAS  /tmp/cc5LhkN2.s 			page 28


 1092              		.loc 1 471 0
 1093 00d0 1B49     		ldr	r1, .L81
 1094 00d2 1B4B     		ldr	r3, .L81
 1095 00d4 DA6C     		ldr	r2, [r3, #76]
 1096 00d6 3B68     		ldr	r3, [r7]
 1097 00d8 1343     		orrs	r3, r3, r2
 1098 00da CB64     		str	r3, [r1, #76]
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);        
 1099              		.loc 1 472 0
 1100 00dc 1849     		ldr	r1, .L81
 1101 00de 184B     		ldr	r3, .L81
 1102 00e0 9A6C     		ldr	r2, [r3, #72]
 1103 00e2 3B68     		ldr	r3, [r7]
 1104 00e4 DB43     		mvns	r3, r3
 1105 00e6 1340     		ands	r3, r3, r2
 1106 00e8 8B64     		str	r3, [r1, #72]
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1107              		.loc 1 473 0
 1108 00ea 21E0     		b	.L79
 1109              	.L77:
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, GPIONumber);
 1110              		.loc 1 475 0
 1111 00ec 1449     		ldr	r1, .L81
 1112 00ee 144B     		ldr	r3, .L81
 1113 00f0 5A6D     		ldr	r2, [r3, #84]
 1114 00f2 3B68     		ldr	r3, [r7]
 1115 00f4 1343     		orrs	r3, r3, r2
 1116 00f6 4B65     		str	r3, [r1, #84]
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);        
 1117              		.loc 1 476 0
 1118 00f8 1149     		ldr	r1, .L81
 1119 00fa 114B     		ldr	r3, .L81
 1120 00fc 1A6D     		ldr	r2, [r3, #80]
 1121 00fe 3B68     		ldr	r3, [r7]
 1122 0100 DB43     		mvns	r3, r3
 1123 0102 1340     		ands	r3, r3, r2
 1124 0104 0B65     		str	r3, [r1, #80]
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1125              		.loc 1 477 0
 1126 0106 13E0     		b	.L79
 1127              	.L78:
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif           
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1128              		.loc 1 480 0
 1129 0108 0D49     		ldr	r1, .L81
 1130 010a 0D4B     		ldr	r3, .L81
 1131 010c DA6D     		ldr	r2, [r3, #92]
 1132 010e 3B68     		ldr	r3, [r7]
 1133 0110 03F00303 		and	r3, r3, #3
 1134 0114 1343     		orrs	r3, r3, r2
 1135 0116 CB65     		str	r3, [r1, #92]
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));          
 1136              		.loc 1 481 0
 1137 0118 0949     		ldr	r1, .L81
 1138 011a 094B     		ldr	r3, .L81
ARM GAS  /tmp/cc5LhkN2.s 			page 29


 1139 011c 9A6D     		ldr	r2, [r3, #88]
 1140 011e 3B68     		ldr	r3, [r7]
 1141 0120 03F00303 		and	r3, r3, #3
 1142 0124 DB43     		mvns	r3, r3
 1143 0126 1340     		ands	r3, r3, r2
 1144 0128 8B65     		str	r3, [r1, #88]
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 1145              		.loc 1 482 0
 1146 012a 01E0     		b	.L79
 1147              	.L69:
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 1148              		.loc 1 484 0
 1149 012c 0123     		movs	r3, #1
 1150 012e 00E0     		b	.L80
 1151              	.L79:
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1152              		.loc 1 487 0
 1153 0130 0023     		movs	r3, #0
 1154              	.L80:
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1155              		.loc 1 488 0
 1156 0132 1846     		mov	r0, r3
 1157 0134 0C37     		adds	r7, r7, #12
 1158              	.LCFI59:
 1159              		.cfi_def_cfa_offset 4
 1160 0136 BD46     		mov	sp, r7
 1161              	.LCFI60:
 1162              		.cfi_def_cfa_register 13
 1163              		@ sp needed
 1164 0138 5DF8047B 		ldr	r7, [sp], #4
 1165              	.LCFI61:
 1166              		.cfi_restore 7
 1167              		.cfi_def_cfa_offset 0
 1168 013c 7047     		bx	lr
 1169              	.L82:
 1170 013e 00BF     		.align	2
 1171              	.L81:
 1172 0140 00700040 		.word	1073770496
 1173              		.cfi_endproc
 1174              	.LFE138:
 1176              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 1177              		.align	1
 1178              		.global	HAL_PWREx_DisableGPIOPullDown
 1179              		.syntax unified
 1180              		.thumb
 1181              		.thumb_func
 1182              		.fpu fpv4-sp-d16
 1184              	HAL_PWREx_DisableGPIOPullDown:
 1185              	.LFB139:
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
ARM GAS  /tmp/cc5LhkN2.s 			page 30


 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes. 
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input 
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.   
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H 
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset 
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1186              		.loc 1 507 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 8
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190              		@ link register save eliminated.
 1191 0000 80B4     		push	{r7}
 1192              	.LCFI62:
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 7, -4
 1195 0002 83B0     		sub	sp, sp, #12
 1196              	.LCFI63:
 1197              		.cfi_def_cfa_offset 16
 1198 0004 00AF     		add	r7, sp, #0
 1199              	.LCFI64:
 1200              		.cfi_def_cfa_register 7
 1201 0006 7860     		str	r0, [r7, #4]
 1202 0008 3960     		str	r1, [r7]
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 1203              		.loc 1 511 0
 1204 000a 7B68     		ldr	r3, [r7, #4]
 1205 000c 072B     		cmp	r3, #7
 1206 000e 59D8     		bhi	.L84
 1207 0010 01A2     		adr	r2, .L86
 1208 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1209 0016 00BF     		.p2align 2
 1210              	.L86:
 1211 0018 39000000 		.word	.L85+1
 1212 001c 4D000000 		.word	.L87+1
 1213 0020 61000000 		.word	.L88+1
 1214 0024 71000000 		.word	.L89+1
 1215 0028 81000000 		.word	.L90+1
 1216 002c 91000000 		.word	.L91+1
 1217 0030 A1000000 		.word	.L92+1
 1218 0034 B1000000 		.word	.L93+1
 1219              		.p2align 1
 1220              	.L85:
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));                 
 1221              		.loc 1 514 0
ARM GAS  /tmp/cc5LhkN2.s 			page 31


 1222 0038 2749     		ldr	r1, .L96
 1223 003a 274B     		ldr	r3, .L96
 1224 003c 5A6A     		ldr	r2, [r3, #36]
 1225 003e 3B68     		ldr	r3, [r7]
 1226 0040 23F42043 		bic	r3, r3, #40960
 1227 0044 DB43     		mvns	r3, r3
 1228 0046 1340     		ands	r3, r3, r2
 1229 0048 4B62     		str	r3, [r1, #36]
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1230              		.loc 1 515 0
 1231 004a 3DE0     		b	.L94
 1232              	.L87:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));           
 1233              		.loc 1 517 0
 1234 004c 2249     		ldr	r1, .L96
 1235 004e 224B     		ldr	r3, .L96
 1236 0050 DA6A     		ldr	r2, [r3, #44]
 1237 0052 3B68     		ldr	r3, [r7]
 1238 0054 23F01003 		bic	r3, r3, #16
 1239 0058 DB43     		mvns	r3, r3
 1240 005a 1340     		ands	r3, r3, r2
 1241 005c CB62     		str	r3, [r1, #44]
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1242              		.loc 1 518 0
 1243 005e 33E0     		b	.L94
 1244              	.L88:
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 1245              		.loc 1 520 0
 1246 0060 1D49     		ldr	r1, .L96
 1247 0062 1D4B     		ldr	r3, .L96
 1248 0064 5A6B     		ldr	r2, [r3, #52]
 1249 0066 3B68     		ldr	r3, [r7]
 1250 0068 DB43     		mvns	r3, r3
 1251 006a 1340     		ands	r3, r3, r2
 1252 006c 4B63     		str	r3, [r1, #52]
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1253              		.loc 1 521 0
 1254 006e 2BE0     		b	.L94
 1255              	.L89:
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L431xx) || defined (STM32L433xx) || defined (STM32L443xx) || defined (STM32L471xx
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 1256              		.loc 1 524 0
 1257 0070 1949     		ldr	r1, .L96
 1258 0072 194B     		ldr	r3, .L96
 1259 0074 DA6B     		ldr	r2, [r3, #60]
 1260 0076 3B68     		ldr	r3, [r7]
 1261 0078 DB43     		mvns	r3, r3
 1262 007a 1340     		ands	r3, r3, r2
 1263 007c CB63     		str	r3, [r1, #60]
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1264              		.loc 1 525 0
 1265 007e 23E0     		b	.L94
 1266              	.L90:
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
ARM GAS  /tmp/cc5LhkN2.s 			page 32


 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 1267              		.loc 1 527 0
 1268 0080 1549     		ldr	r1, .L96
 1269 0082 154B     		ldr	r3, .L96
 1270 0084 5A6C     		ldr	r2, [r3, #68]
 1271 0086 3B68     		ldr	r3, [r7]
 1272 0088 DB43     		mvns	r3, r3
 1273 008a 1340     		ands	r3, r3, r2
 1274 008c 4B64     		str	r3, [r1, #68]
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1275              		.loc 1 528 0
 1276 008e 1BE0     		b	.L94
 1277              	.L91:
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 1278              		.loc 1 532 0
 1279 0090 1149     		ldr	r1, .L96
 1280 0092 114B     		ldr	r3, .L96
 1281 0094 DA6C     		ldr	r2, [r3, #76]
 1282 0096 3B68     		ldr	r3, [r7]
 1283 0098 DB43     		mvns	r3, r3
 1284 009a 1340     		ands	r3, r3, r2
 1285 009c CB64     		str	r3, [r1, #76]
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1286              		.loc 1 533 0
 1287 009e 13E0     		b	.L94
 1288              	.L92:
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 1289              		.loc 1 535 0
 1290 00a0 0D49     		ldr	r1, .L96
 1291 00a2 0D4B     		ldr	r3, .L96
 1292 00a4 5A6D     		ldr	r2, [r3, #84]
 1293 00a6 3B68     		ldr	r3, [r7]
 1294 00a8 DB43     		mvns	r3, r3
 1295 00aa 1340     		ands	r3, r3, r2
 1296 00ac 4B65     		str	r3, [r1, #84]
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1297              		.loc 1 536 0
 1298 00ae 0BE0     		b	.L94
 1299              	.L93:
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif              
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1300              		.loc 1 539 0
 1301 00b0 0949     		ldr	r1, .L96
 1302 00b2 094B     		ldr	r3, .L96
 1303 00b4 DA6D     		ldr	r2, [r3, #92]
 1304 00b6 3B68     		ldr	r3, [r7]
 1305 00b8 03F00303 		and	r3, r3, #3
 1306 00bc DB43     		mvns	r3, r3
 1307 00be 1340     		ands	r3, r3, r2
 1308 00c0 CB65     		str	r3, [r1, #92]
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 1309              		.loc 1 540 0
ARM GAS  /tmp/cc5LhkN2.s 			page 33


 1310 00c2 01E0     		b	.L94
 1311              	.L84:
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 1312              		.loc 1 542 0
 1313 00c4 0123     		movs	r3, #1
 1314 00c6 00E0     		b	.L95
 1315              	.L94:
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1316              		.loc 1 545 0
 1317 00c8 0023     		movs	r3, #0
 1318              	.L95:
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1319              		.loc 1 546 0
 1320 00ca 1846     		mov	r0, r3
 1321 00cc 0C37     		adds	r7, r7, #12
 1322              	.LCFI65:
 1323              		.cfi_def_cfa_offset 4
 1324 00ce BD46     		mov	sp, r7
 1325              	.LCFI66:
 1326              		.cfi_def_cfa_register 13
 1327              		@ sp needed
 1328 00d0 5DF8047B 		ldr	r7, [sp], #4
 1329              	.LCFI67:
 1330              		.cfi_restore 7
 1331              		.cfi_def_cfa_offset 0
 1332 00d4 7047     		bx	lr
 1333              	.L97:
 1334 00d6 00BF     		.align	2
 1335              	.L96:
 1336 00d8 00700040 		.word	1073770496
 1337              		.cfi_endproc
 1338              	.LFE139:
 1340              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1341              		.align	1
 1342              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1343              		.syntax unified
 1344              		.thumb
 1345              		.thumb_func
 1346              		.fpu fpv4-sp-d16
 1348              	HAL_PWREx_EnablePullUpPullDownConfig:
 1349              	.LFB140:
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in 
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.    
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher). 
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there 
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.         
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/cc5LhkN2.s 			page 34


 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1350              		.loc 1 561 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354              		@ link register save eliminated.
 1355 0000 80B4     		push	{r7}
 1356              	.LCFI68:
 1357              		.cfi_def_cfa_offset 4
 1358              		.cfi_offset 7, -4
 1359 0002 00AF     		add	r7, sp, #0
 1360              	.LCFI69:
 1361              		.cfi_def_cfa_register 7
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1362              		.loc 1 562 0
 1363 0004 054A     		ldr	r2, .L99
 1364 0006 054B     		ldr	r3, .L99
 1365 0008 9B68     		ldr	r3, [r3, #8]
 1366 000a 43F48063 		orr	r3, r3, #1024
 1367 000e 9360     		str	r3, [r2, #8]
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1368              		.loc 1 563 0
 1369 0010 00BF     		nop
 1370 0012 BD46     		mov	sp, r7
 1371              	.LCFI70:
 1372              		.cfi_def_cfa_register 13
 1373              		@ sp needed
 1374 0014 5DF8047B 		ldr	r7, [sp], #4
 1375              	.LCFI71:
 1376              		.cfi_restore 7
 1377              		.cfi_def_cfa_offset 0
 1378 0018 7047     		bx	lr
 1379              	.L100:
 1380 001a 00BF     		.align	2
 1381              	.L99:
 1382 001c 00700040 		.word	1073770496
 1383              		.cfi_endproc
 1384              	.LFE140:
 1386              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1387              		.align	1
 1388              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1389              		.syntax unified
 1390              		.thumb
 1391              		.thumb_func
 1392              		.fpu fpv4-sp-d16
 1394              	HAL_PWREx_DisablePullUpPullDownConfig:
 1395              	.LFB141:
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in 
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.     
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
ARM GAS  /tmp/cc5LhkN2.s 			page 35


 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1396              		.loc 1 573 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 1, uses_anonymous_args = 0
 1400              		@ link register save eliminated.
 1401 0000 80B4     		push	{r7}
 1402              	.LCFI72:
 1403              		.cfi_def_cfa_offset 4
 1404              		.cfi_offset 7, -4
 1405 0002 00AF     		add	r7, sp, #0
 1406              	.LCFI73:
 1407              		.cfi_def_cfa_register 7
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1408              		.loc 1 574 0
 1409 0004 054A     		ldr	r2, .L102
 1410 0006 054B     		ldr	r3, .L102
 1411 0008 9B68     		ldr	r3, [r3, #8]
 1412 000a 23F48063 		bic	r3, r3, #1024
 1413 000e 9360     		str	r3, [r2, #8]
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1414              		.loc 1 575 0
 1415 0010 00BF     		nop
 1416 0012 BD46     		mov	sp, r7
 1417              	.LCFI74:
 1418              		.cfi_def_cfa_register 13
 1419              		@ sp needed
 1420 0014 5DF8047B 		ldr	r7, [sp], #4
 1421              	.LCFI75:
 1422              		.cfi_restore 7
 1423              		.cfi_def_cfa_offset 0
 1424 0018 7047     		bx	lr
 1425              	.L103:
 1426 001a 00BF     		.align	2
 1427              	.L102:
 1428 001c 00700040 		.word	1073770496
 1429              		.cfi_endproc
 1430              	.LFE141:
 1432              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1433              		.align	1
 1434              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1438              		.fpu fpv4-sp-d16
 1440              	HAL_PWREx_EnableSRAM2ContentRetention:
 1441              	.LFB142:
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in 
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.    
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
ARM GAS  /tmp/cc5LhkN2.s 			page 36


 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1442              		.loc 1 586 0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 1, uses_anonymous_args = 0
 1446              		@ link register save eliminated.
 1447 0000 80B4     		push	{r7}
 1448              	.LCFI76:
 1449              		.cfi_def_cfa_offset 4
 1450              		.cfi_offset 7, -4
 1451 0002 00AF     		add	r7, sp, #0
 1452              	.LCFI77:
 1453              		.cfi_def_cfa_register 7
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
 1454              		.loc 1 587 0
 1455 0004 054A     		ldr	r2, .L105
 1456 0006 054B     		ldr	r3, .L105
 1457 0008 9B68     		ldr	r3, [r3, #8]
 1458 000a 43F48073 		orr	r3, r3, #256
 1459 000e 9360     		str	r3, [r2, #8]
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1460              		.loc 1 588 0
 1461 0010 00BF     		nop
 1462 0012 BD46     		mov	sp, r7
 1463              	.LCFI78:
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 0014 5DF8047B 		ldr	r7, [sp], #4
 1467              	.LCFI79:
 1468              		.cfi_restore 7
 1469              		.cfi_def_cfa_offset 0
 1470 0018 7047     		bx	lr
 1471              	.L106:
 1472 001a 00BF     		.align	2
 1473              	.L105:
 1474 001c 00700040 		.word	1073770496
 1475              		.cfi_endproc
 1476              	.LFE142:
 1478              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1479              		.align	1
 1480              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1481              		.syntax unified
 1482              		.thumb
 1483              		.thumb_func
 1484              		.fpu fpv4-sp-d16
 1486              	HAL_PWREx_DisableSRAM2ContentRetention:
 1487              	.LFB143:
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode 
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.      
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/cc5LhkN2.s 			page 37


 1488              		.loc 1 598 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 1, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493 0000 80B4     		push	{r7}
 1494              	.LCFI80:
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 7, -4
 1497 0002 00AF     		add	r7, sp, #0
 1498              	.LCFI81:
 1499              		.cfi_def_cfa_register 7
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1500              		.loc 1 599 0
 1501 0004 054A     		ldr	r2, .L108
 1502 0006 054B     		ldr	r3, .L108
 1503 0008 9B68     		ldr	r3, [r3, #8]
 1504 000a 23F48073 		bic	r3, r3, #256
 1505 000e 9360     		str	r3, [r2, #8]
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1506              		.loc 1 600 0
 1507 0010 00BF     		nop
 1508 0012 BD46     		mov	sp, r7
 1509              	.LCFI82:
 1510              		.cfi_def_cfa_register 13
 1511              		@ sp needed
 1512 0014 5DF8047B 		ldr	r7, [sp], #4
 1513              	.LCFI83:
 1514              		.cfi_restore 7
 1515              		.cfi_def_cfa_offset 0
 1516 0018 7047     		bx	lr
 1517              	.L109:
 1518 001a 00BF     		.align	2
 1519              	.L108:
 1520 001c 00700040 		.word	1073770496
 1521              		.cfi_endproc
 1522              	.LFE143:
 1524              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1525              		.align	1
 1526              		.global	HAL_PWREx_EnablePVM1
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1530              		.fpu fpv4-sp-d16
 1532              	HAL_PWREx_EnablePVM1:
 1533              	.LFB144:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32L443xx
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/cc5LhkN2.s 			page 38


 1534              		.loc 1 611 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 1, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 1539 0000 80B4     		push	{r7}
 1540              	.LCFI84:
 1541              		.cfi_def_cfa_offset 4
 1542              		.cfi_offset 7, -4
 1543 0002 00AF     		add	r7, sp, #0
 1544              	.LCFI85:
 1545              		.cfi_def_cfa_register 7
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);    
 1546              		.loc 1 612 0
 1547 0004 054A     		ldr	r2, .L111
 1548 0006 054B     		ldr	r3, .L111
 1549 0008 5B68     		ldr	r3, [r3, #4]
 1550 000a 43F01003 		orr	r3, r3, #16
 1551 000e 5360     		str	r3, [r2, #4]
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1552              		.loc 1 613 0
 1553 0010 00BF     		nop
 1554 0012 BD46     		mov	sp, r7
 1555              	.LCFI86:
 1556              		.cfi_def_cfa_register 13
 1557              		@ sp needed
 1558 0014 5DF8047B 		ldr	r7, [sp], #4
 1559              	.LCFI87:
 1560              		.cfi_restore 7
 1561              		.cfi_def_cfa_offset 0
 1562 0018 7047     		bx	lr
 1563              	.L112:
 1564 001a 00BF     		.align	2
 1565              	.L111:
 1566 001c 00700040 		.word	1073770496
 1567              		.cfi_endproc
 1568              	.LFE144:
 1570              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1571              		.align	1
 1572              		.global	HAL_PWREx_DisablePVM1
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu fpv4-sp-d16
 1578              	HAL_PWREx_DisablePVM1:
 1579              	.LFB145:
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1580              		.loc 1 620 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc5LhkN2.s 			page 39


 1584              		@ link register save eliminated.
 1585 0000 80B4     		push	{r7}
 1586              	.LCFI88:
 1587              		.cfi_def_cfa_offset 4
 1588              		.cfi_offset 7, -4
 1589 0002 00AF     		add	r7, sp, #0
 1590              	.LCFI89:
 1591              		.cfi_def_cfa_register 7
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);    
 1592              		.loc 1 621 0
 1593 0004 054A     		ldr	r2, .L114
 1594 0006 054B     		ldr	r3, .L114
 1595 0008 5B68     		ldr	r3, [r3, #4]
 1596 000a 23F01003 		bic	r3, r3, #16
 1597 000e 5360     		str	r3, [r2, #4]
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1598              		.loc 1 622 0
 1599 0010 00BF     		nop
 1600 0012 BD46     		mov	sp, r7
 1601              	.LCFI90:
 1602              		.cfi_def_cfa_register 13
 1603              		@ sp needed
 1604 0014 5DF8047B 		ldr	r7, [sp], #4
 1605              	.LCFI91:
 1606              		.cfi_restore 7
 1607              		.cfi_def_cfa_offset 0
 1608 0018 7047     		bx	lr
 1609              	.L115:
 1610 001a 00BF     		.align	2
 1611              	.L114:
 1612 001c 00700040 		.word	1073770496
 1613              		.cfi_endproc
 1614              	.LFE145:
 1616              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1617              		.align	1
 1618              		.global	HAL_PWREx_EnablePVM2
 1619              		.syntax unified
 1620              		.thumb
 1621              		.thumb_func
 1622              		.fpu fpv4-sp-d16
 1624              	HAL_PWREx_EnablePVM2:
 1625              	.LFB146:
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1626              		.loc 1 632 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 0
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630              		@ link register save eliminated.
ARM GAS  /tmp/cc5LhkN2.s 			page 40


 1631 0000 80B4     		push	{r7}
 1632              	.LCFI92:
 1633              		.cfi_def_cfa_offset 4
 1634              		.cfi_offset 7, -4
 1635 0002 00AF     		add	r7, sp, #0
 1636              	.LCFI93:
 1637              		.cfi_def_cfa_register 7
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);    
 1638              		.loc 1 633 0
 1639 0004 054A     		ldr	r2, .L117
 1640 0006 054B     		ldr	r3, .L117
 1641 0008 5B68     		ldr	r3, [r3, #4]
 1642 000a 43F02003 		orr	r3, r3, #32
 1643 000e 5360     		str	r3, [r2, #4]
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1644              		.loc 1 634 0
 1645 0010 00BF     		nop
 1646 0012 BD46     		mov	sp, r7
 1647              	.LCFI94:
 1648              		.cfi_def_cfa_register 13
 1649              		@ sp needed
 1650 0014 5DF8047B 		ldr	r7, [sp], #4
 1651              	.LCFI95:
 1652              		.cfi_restore 7
 1653              		.cfi_def_cfa_offset 0
 1654 0018 7047     		bx	lr
 1655              	.L118:
 1656 001a 00BF     		.align	2
 1657              	.L117:
 1658 001c 00700040 		.word	1073770496
 1659              		.cfi_endproc
 1660              	.LFE146:
 1662              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1663              		.align	1
 1664              		.global	HAL_PWREx_DisablePVM2
 1665              		.syntax unified
 1666              		.thumb
 1667              		.thumb_func
 1668              		.fpu fpv4-sp-d16
 1670              	HAL_PWREx_DisablePVM2:
 1671              	.LFB147:
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1672              		.loc 1 641 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676              		@ link register save eliminated.
 1677 0000 80B4     		push	{r7}
 1678              	.LCFI96:
 1679              		.cfi_def_cfa_offset 4
 1680              		.cfi_offset 7, -4
ARM GAS  /tmp/cc5LhkN2.s 			page 41


 1681 0002 00AF     		add	r7, sp, #0
 1682              	.LCFI97:
 1683              		.cfi_def_cfa_register 7
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);    
 1684              		.loc 1 642 0
 1685 0004 054A     		ldr	r2, .L120
 1686 0006 054B     		ldr	r3, .L120
 1687 0008 5B68     		ldr	r3, [r3, #4]
 1688 000a 23F02003 		bic	r3, r3, #32
 1689 000e 5360     		str	r3, [r2, #4]
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1690              		.loc 1 643 0
 1691 0010 00BF     		nop
 1692 0012 BD46     		mov	sp, r7
 1693              	.LCFI98:
 1694              		.cfi_def_cfa_register 13
 1695              		@ sp needed
 1696 0014 5DF8047B 		ldr	r7, [sp], #4
 1697              	.LCFI99:
 1698              		.cfi_restore 7
 1699              		.cfi_def_cfa_offset 0
 1700 0018 7047     		bx	lr
 1701              	.L121:
 1702 001a 00BF     		.align	2
 1703              	.L120:
 1704 001c 00700040 		.word	1073770496
 1705              		.cfi_endproc
 1706              	.LFE147:
 1708              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1709              		.align	1
 1710              		.global	HAL_PWREx_EnablePVM3
 1711              		.syntax unified
 1712              		.thumb
 1713              		.thumb_func
 1714              		.fpu fpv4-sp-d16
 1716              	HAL_PWREx_EnablePVM3:
 1717              	.LFB148:
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1718              		.loc 1 652 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723 0000 80B4     		push	{r7}
 1724              	.LCFI100:
 1725              		.cfi_def_cfa_offset 4
 1726              		.cfi_offset 7, -4
 1727 0002 00AF     		add	r7, sp, #0
 1728              	.LCFI101:
ARM GAS  /tmp/cc5LhkN2.s 			page 42


 1729              		.cfi_def_cfa_register 7
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);    
 1730              		.loc 1 653 0
 1731 0004 054A     		ldr	r2, .L123
 1732 0006 054B     		ldr	r3, .L123
 1733 0008 5B68     		ldr	r3, [r3, #4]
 1734 000a 43F04003 		orr	r3, r3, #64
 1735 000e 5360     		str	r3, [r2, #4]
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1736              		.loc 1 654 0
 1737 0010 00BF     		nop
 1738 0012 BD46     		mov	sp, r7
 1739              	.LCFI102:
 1740              		.cfi_def_cfa_register 13
 1741              		@ sp needed
 1742 0014 5DF8047B 		ldr	r7, [sp], #4
 1743              	.LCFI103:
 1744              		.cfi_restore 7
 1745              		.cfi_def_cfa_offset 0
 1746 0018 7047     		bx	lr
 1747              	.L124:
 1748 001a 00BF     		.align	2
 1749              	.L123:
 1750 001c 00700040 		.word	1073770496
 1751              		.cfi_endproc
 1752              	.LFE148:
 1754              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1755              		.align	1
 1756              		.global	HAL_PWREx_DisablePVM3
 1757              		.syntax unified
 1758              		.thumb
 1759              		.thumb_func
 1760              		.fpu fpv4-sp-d16
 1762              	HAL_PWREx_DisablePVM3:
 1763              	.LFB149:
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1764              		.loc 1 661 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 1, uses_anonymous_args = 0
 1768              		@ link register save eliminated.
 1769 0000 80B4     		push	{r7}
 1770              	.LCFI104:
 1771              		.cfi_def_cfa_offset 4
 1772              		.cfi_offset 7, -4
 1773 0002 00AF     		add	r7, sp, #0
 1774              	.LCFI105:
 1775              		.cfi_def_cfa_register 7
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);    
 1776              		.loc 1 662 0
 1777 0004 054A     		ldr	r2, .L126
ARM GAS  /tmp/cc5LhkN2.s 			page 43


 1778 0006 054B     		ldr	r3, .L126
 1779 0008 5B68     		ldr	r3, [r3, #4]
 1780 000a 23F04003 		bic	r3, r3, #64
 1781 000e 5360     		str	r3, [r2, #4]
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1782              		.loc 1 663 0
 1783 0010 00BF     		nop
 1784 0012 BD46     		mov	sp, r7
 1785              	.LCFI106:
 1786              		.cfi_def_cfa_register 13
 1787              		@ sp needed
 1788 0014 5DF8047B 		ldr	r7, [sp], #4
 1789              	.LCFI107:
 1790              		.cfi_restore 7
 1791              		.cfi_def_cfa_offset 0
 1792 0018 7047     		bx	lr
 1793              	.L127:
 1794 001a 00BF     		.align	2
 1795              	.L126:
 1796 001c 00700040 		.word	1073770496
 1797              		.cfi_endproc
 1798              	.LFE149:
 1800              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1801              		.align	1
 1802              		.global	HAL_PWREx_EnablePVM4
 1803              		.syntax unified
 1804              		.thumb
 1805              		.thumb_func
 1806              		.fpu fpv4-sp-d16
 1808              	HAL_PWREx_EnablePVM4:
 1809              	.LFB150:
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1810              		.loc 1 671 0
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 0
 1813              		@ frame_needed = 1, uses_anonymous_args = 0
 1814              		@ link register save eliminated.
 1815 0000 80B4     		push	{r7}
 1816              	.LCFI108:
 1817              		.cfi_def_cfa_offset 4
 1818              		.cfi_offset 7, -4
 1819 0002 00AF     		add	r7, sp, #0
 1820              	.LCFI109:
 1821              		.cfi_def_cfa_register 7
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);    
 1822              		.loc 1 672 0
 1823 0004 054A     		ldr	r2, .L129
 1824 0006 054B     		ldr	r3, .L129
 1825 0008 5B68     		ldr	r3, [r3, #4]
 1826 000a 43F08003 		orr	r3, r3, #128
ARM GAS  /tmp/cc5LhkN2.s 			page 44


 1827 000e 5360     		str	r3, [r2, #4]
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1828              		.loc 1 673 0
 1829 0010 00BF     		nop
 1830 0012 BD46     		mov	sp, r7
 1831              	.LCFI110:
 1832              		.cfi_def_cfa_register 13
 1833              		@ sp needed
 1834 0014 5DF8047B 		ldr	r7, [sp], #4
 1835              	.LCFI111:
 1836              		.cfi_restore 7
 1837              		.cfi_def_cfa_offset 0
 1838 0018 7047     		bx	lr
 1839              	.L130:
 1840 001a 00BF     		.align	2
 1841              	.L129:
 1842 001c 00700040 		.word	1073770496
 1843              		.cfi_endproc
 1844              	.LFE150:
 1846              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1847              		.align	1
 1848              		.global	HAL_PWREx_DisablePVM4
 1849              		.syntax unified
 1850              		.thumb
 1851              		.thumb_func
 1852              		.fpu fpv4-sp-d16
 1854              	HAL_PWREx_DisablePVM4:
 1855              	.LFB151:
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1856              		.loc 1 680 0
 1857              		.cfi_startproc
 1858              		@ args = 0, pretend = 0, frame = 0
 1859              		@ frame_needed = 1, uses_anonymous_args = 0
 1860              		@ link register save eliminated.
 1861 0000 80B4     		push	{r7}
 1862              	.LCFI112:
 1863              		.cfi_def_cfa_offset 4
 1864              		.cfi_offset 7, -4
 1865 0002 00AF     		add	r7, sp, #0
 1866              	.LCFI113:
 1867              		.cfi_def_cfa_register 7
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);    
 1868              		.loc 1 681 0
 1869 0004 054A     		ldr	r2, .L132
 1870 0006 054B     		ldr	r3, .L132
 1871 0008 5B68     		ldr	r3, [r3, #4]
 1872 000a 23F08003 		bic	r3, r3, #128
 1873 000e 5360     		str	r3, [r2, #4]
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1874              		.loc 1 682 0
 1875 0010 00BF     		nop
ARM GAS  /tmp/cc5LhkN2.s 			page 45


 1876 0012 BD46     		mov	sp, r7
 1877              	.LCFI114:
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 0014 5DF8047B 		ldr	r7, [sp], #4
 1881              	.LCFI115:
 1882              		.cfi_restore 7
 1883              		.cfi_def_cfa_offset 0
 1884 0018 7047     		bx	lr
 1885              	.L133:
 1886 001a 00BF     		.align	2
 1887              	.L132:
 1888 001c 00700040 		.word	1073770496
 1889              		.cfi_endproc
 1890              	.LFE151:
 1892              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1893              		.align	1
 1894              		.global	HAL_PWREx_ConfigPVM
 1895              		.syntax unified
 1896              		.thumb
 1897              		.thumb_func
 1898              		.fpu fpv4-sp-d16
 1900              	HAL_PWREx_ConfigPVM:
 1901              	.LFB152:
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained 
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly 
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL status
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 1902              		.loc 1 700 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 8
 1905              		@ frame_needed = 1, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
 1907 0000 80B4     		push	{r7}
 1908              	.LCFI116:
 1909              		.cfi_def_cfa_offset 4
 1910              		.cfi_offset 7, -4
 1911 0002 83B0     		sub	sp, sp, #12
 1912              	.LCFI117:
 1913              		.cfi_def_cfa_offset 16
 1914 0004 00AF     		add	r7, sp, #0
 1915              	.LCFI118:
 1916              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc5LhkN2.s 			page 46


 1917 0006 7860     		str	r0, [r7, #4]
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      scan thru PVMType to detect which PVMx is set and
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1918              		.loc 1 709 0
 1919 0008 7B68     		ldr	r3, [r7, #4]
 1920 000a 1B68     		ldr	r3, [r3]
 1921 000c 202B     		cmp	r3, #32
 1922 000e 55D0     		beq	.L136
 1923 0010 202B     		cmp	r3, #32
 1924 0012 02D8     		bhi	.L137
 1925 0014 102B     		cmp	r3, #16
 1926 0016 07D0     		beq	.L138
 1927 0018 2CE1     		b	.L135
 1928              	.L137:
 1929 001a 402B     		cmp	r3, #64
 1930 001c 00F09880 		beq	.L139
 1931 0020 802B     		cmp	r3, #128
 1932 0022 00F0DE80 		beq	.L140
 1933 0026 25E1     		b	.L135
 1934              	.L138:
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32L443xx
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 1935              		.loc 1 714 0
 1936 0028 9A4A     		ldr	r2, .L163
 1937 002a 9A4B     		ldr	r3, .L163
 1938 002c 5B6A     		ldr	r3, [r3, #36]
 1939 002e 23F00803 		bic	r3, r3, #8
 1940 0032 5362     		str	r3, [r2, #36]
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1941              		.loc 1 715 0
 1942 0034 974A     		ldr	r2, .L163
 1943 0036 974B     		ldr	r3, .L163
 1944 0038 1B6A     		ldr	r3, [r3, #32]
 1945 003a 23F00803 		bic	r3, r3, #8
 1946 003e 1362     		str	r3, [r2, #32]
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE(); 
 1947              		.loc 1 716 0
 1948 0040 944A     		ldr	r2, .L163
 1949 0042 944B     		ldr	r3, .L163
 1950 0044 DB6A     		ldr	r3, [r3, #44]
 1951 0046 23F00803 		bic	r3, r3, #8
 1952 004a D362     		str	r3, [r2, #44]
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1953              		.loc 1 717 0
 1954 004c 914A     		ldr	r2, .L163
 1955 004e 914B     		ldr	r3, .L163
 1956 0050 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/cc5LhkN2.s 			page 47


 1957 0052 23F00803 		bic	r3, r3, #8
 1958 0056 9362     		str	r3, [r2, #40]
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1959              		.loc 1 720 0
 1960 0058 7B68     		ldr	r3, [r7, #4]
 1961 005a 5B68     		ldr	r3, [r3, #4]
 1962 005c 03F48033 		and	r3, r3, #65536
 1963 0060 002B     		cmp	r3, #0
 1964 0062 05D0     		beq	.L141
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 1965              		.loc 1 722 0
 1966 0064 8B4A     		ldr	r2, .L163
 1967 0066 8B4B     		ldr	r3, .L163
 1968 0068 1B6A     		ldr	r3, [r3, #32]
 1969 006a 43F00803 		orr	r3, r3, #8
 1970 006e 1362     		str	r3, [r2, #32]
 1971              	.L141:
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1972              		.loc 1 726 0
 1973 0070 7B68     		ldr	r3, [r7, #4]
 1974 0072 5B68     		ldr	r3, [r3, #4]
 1975 0074 03F40033 		and	r3, r3, #131072
 1976 0078 002B     		cmp	r3, #0
 1977 007a 05D0     		beq	.L142
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 1978              		.loc 1 728 0
 1979 007c 854A     		ldr	r2, .L163
 1980 007e 854B     		ldr	r3, .L163
 1981 0080 5B6A     		ldr	r3, [r3, #36]
 1982 0082 43F00803 		orr	r3, r3, #8
 1983 0086 5362     		str	r3, [r2, #36]
 1984              	.L142:
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1985              		.loc 1 732 0
 1986 0088 7B68     		ldr	r3, [r7, #4]
 1987 008a 5B68     		ldr	r3, [r3, #4]
 1988 008c 03F00103 		and	r3, r3, #1
 1989 0090 002B     		cmp	r3, #0
 1990 0092 05D0     		beq	.L143
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 1991              		.loc 1 734 0
 1992 0094 7F4A     		ldr	r2, .L163
 1993 0096 7F4B     		ldr	r3, .L163
 1994 0098 9B6A     		ldr	r3, [r3, #40]
 1995 009a 43F00803 		orr	r3, r3, #8
 1996 009e 9362     		str	r3, [r2, #40]
ARM GAS  /tmp/cc5LhkN2.s 			page 48


 1997              	.L143:
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1998              		.loc 1 737 0
 1999 00a0 7B68     		ldr	r3, [r7, #4]
 2000 00a2 5B68     		ldr	r3, [r3, #4]
 2001 00a4 03F00203 		and	r3, r3, #2
 2002 00a8 002B     		cmp	r3, #0
 2003 00aa 00F0E580 		beq	.L159
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 2004              		.loc 1 739 0
 2005 00ae 794A     		ldr	r2, .L163
 2006 00b0 784B     		ldr	r3, .L163
 2007 00b2 DB6A     		ldr	r3, [r3, #44]
 2008 00b4 43F00803 		orr	r3, r3, #8
 2009 00b8 D362     		str	r3, [r2, #44]
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break; 
 2010              		.loc 1 741 0
 2011 00ba DDE0     		b	.L159
 2012              	.L136:
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L443xx) || defined (STM32
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
 2013              		.loc 1 747 0
 2014 00bc 754A     		ldr	r2, .L163
 2015 00be 754B     		ldr	r3, .L163
 2016 00c0 5B6A     		ldr	r3, [r3, #36]
 2017 00c2 23F01003 		bic	r3, r3, #16
 2018 00c6 5362     		str	r3, [r2, #36]
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 2019              		.loc 1 748 0
 2020 00c8 724A     		ldr	r2, .L163
 2021 00ca 724B     		ldr	r3, .L163
 2022 00cc 1B6A     		ldr	r3, [r3, #32]
 2023 00ce 23F01003 		bic	r3, r3, #16
 2024 00d2 1362     		str	r3, [r2, #32]
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE(); 
 2025              		.loc 1 749 0
 2026 00d4 6F4A     		ldr	r2, .L163
 2027 00d6 6F4B     		ldr	r3, .L163
 2028 00d8 DB6A     		ldr	r3, [r3, #44]
 2029 00da 23F01003 		bic	r3, r3, #16
 2030 00de D362     		str	r3, [r2, #44]
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 2031              		.loc 1 750 0
 2032 00e0 6C4A     		ldr	r2, .L163
 2033 00e2 6C4B     		ldr	r3, .L163
 2034 00e4 9B6A     		ldr	r3, [r3, #40]
 2035 00e6 23F01003 		bic	r3, r3, #16
 2036 00ea 9362     		str	r3, [r2, #40]
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cc5LhkN2.s 			page 49


 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2037              		.loc 1 753 0
 2038 00ec 7B68     		ldr	r3, [r7, #4]
 2039 00ee 5B68     		ldr	r3, [r3, #4]
 2040 00f0 03F48033 		and	r3, r3, #65536
 2041 00f4 002B     		cmp	r3, #0
 2042 00f6 05D0     		beq	.L146
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
 2043              		.loc 1 755 0
 2044 00f8 664A     		ldr	r2, .L163
 2045 00fa 664B     		ldr	r3, .L163
 2046 00fc 1B6A     		ldr	r3, [r3, #32]
 2047 00fe 43F01003 		orr	r3, r3, #16
 2048 0102 1362     		str	r3, [r2, #32]
 2049              	.L146:
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2050              		.loc 1 759 0
 2051 0104 7B68     		ldr	r3, [r7, #4]
 2052 0106 5B68     		ldr	r3, [r3, #4]
 2053 0108 03F40033 		and	r3, r3, #131072
 2054 010c 002B     		cmp	r3, #0
 2055 010e 05D0     		beq	.L147
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
 2056              		.loc 1 761 0
 2057 0110 604A     		ldr	r2, .L163
 2058 0112 604B     		ldr	r3, .L163
 2059 0114 5B6A     		ldr	r3, [r3, #36]
 2060 0116 43F01003 		orr	r3, r3, #16
 2061 011a 5362     		str	r3, [r2, #36]
 2062              	.L147:
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2063              		.loc 1 765 0
 2064 011c 7B68     		ldr	r3, [r7, #4]
 2065 011e 5B68     		ldr	r3, [r3, #4]
 2066 0120 03F00103 		and	r3, r3, #1
 2067 0124 002B     		cmp	r3, #0
 2068 0126 05D0     		beq	.L148
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
 2069              		.loc 1 767 0
 2070 0128 5A4A     		ldr	r2, .L163
 2071 012a 5A4B     		ldr	r3, .L163
 2072 012c 9B6A     		ldr	r3, [r3, #40]
 2073 012e 43F01003 		orr	r3, r3, #16
 2074 0132 9362     		str	r3, [r2, #40]
 2075              	.L148:
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
ARM GAS  /tmp/cc5LhkN2.s 			page 50


 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2076              		.loc 1 770 0
 2077 0134 7B68     		ldr	r3, [r7, #4]
 2078 0136 5B68     		ldr	r3, [r3, #4]
 2079 0138 03F00203 		and	r3, r3, #2
 2080 013c 002B     		cmp	r3, #0
 2081 013e 00F09D80 		beq	.L160
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
 2082              		.loc 1 772 0
 2083 0142 544A     		ldr	r2, .L163
 2084 0144 534B     		ldr	r3, .L163
 2085 0146 DB6A     		ldr	r3, [r3, #44]
 2086 0148 43F01003 		orr	r3, r3, #16
 2087 014c D362     		str	r3, [r2, #44]
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 2088              		.loc 1 774 0
 2089 014e 95E0     		b	.L160
 2090              	.L139:
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 2091              		.loc 1 779 0
 2092 0150 504A     		ldr	r2, .L163
 2093 0152 504B     		ldr	r3, .L163
 2094 0154 5B6A     		ldr	r3, [r3, #36]
 2095 0156 23F02003 		bic	r3, r3, #32
 2096 015a 5362     		str	r3, [r2, #36]
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 2097              		.loc 1 780 0
 2098 015c 4D4A     		ldr	r2, .L163
 2099 015e 4D4B     		ldr	r3, .L163
 2100 0160 1B6A     		ldr	r3, [r3, #32]
 2101 0162 23F02003 		bic	r3, r3, #32
 2102 0166 1362     		str	r3, [r2, #32]
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE(); 
 2103              		.loc 1 781 0
 2104 0168 4A4A     		ldr	r2, .L163
 2105 016a 4A4B     		ldr	r3, .L163
 2106 016c DB6A     		ldr	r3, [r3, #44]
 2107 016e 23F02003 		bic	r3, r3, #32
 2108 0172 D362     		str	r3, [r2, #44]
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 2109              		.loc 1 782 0
 2110 0174 474A     		ldr	r2, .L163
 2111 0176 474B     		ldr	r3, .L163
 2112 0178 9B6A     		ldr	r3, [r3, #40]
 2113 017a 23F02003 		bic	r3, r3, #32
 2114 017e 9362     		str	r3, [r2, #40]
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2115              		.loc 1 785 0
 2116 0180 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc5LhkN2.s 			page 51


 2117 0182 5B68     		ldr	r3, [r3, #4]
 2118 0184 03F48033 		and	r3, r3, #65536
 2119 0188 002B     		cmp	r3, #0
 2120 018a 05D0     		beq	.L150
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 2121              		.loc 1 787 0
 2122 018c 414A     		ldr	r2, .L163
 2123 018e 414B     		ldr	r3, .L163
 2124 0190 1B6A     		ldr	r3, [r3, #32]
 2125 0192 43F02003 		orr	r3, r3, #32
 2126 0196 1362     		str	r3, [r2, #32]
 2127              	.L150:
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2128              		.loc 1 791 0
 2129 0198 7B68     		ldr	r3, [r7, #4]
 2130 019a 5B68     		ldr	r3, [r3, #4]
 2131 019c 03F40033 		and	r3, r3, #131072
 2132 01a0 002B     		cmp	r3, #0
 2133 01a2 05D0     		beq	.L151
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
 2134              		.loc 1 793 0
 2135 01a4 3B4A     		ldr	r2, .L163
 2136 01a6 3B4B     		ldr	r3, .L163
 2137 01a8 5B6A     		ldr	r3, [r3, #36]
 2138 01aa 43F02003 		orr	r3, r3, #32
 2139 01ae 5362     		str	r3, [r2, #36]
 2140              	.L151:
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2141              		.loc 1 797 0
 2142 01b0 7B68     		ldr	r3, [r7, #4]
 2143 01b2 5B68     		ldr	r3, [r3, #4]
 2144 01b4 03F00103 		and	r3, r3, #1
 2145 01b8 002B     		cmp	r3, #0
 2146 01ba 05D0     		beq	.L152
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 2147              		.loc 1 799 0
 2148 01bc 354A     		ldr	r2, .L163
 2149 01be 354B     		ldr	r3, .L163
 2150 01c0 9B6A     		ldr	r3, [r3, #40]
 2151 01c2 43F02003 		orr	r3, r3, #32
 2152 01c6 9362     		str	r3, [r2, #40]
 2153              	.L152:
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2154              		.loc 1 802 0
 2155 01c8 7B68     		ldr	r3, [r7, #4]
 2156 01ca 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/cc5LhkN2.s 			page 52


 2157 01cc 03F00203 		and	r3, r3, #2
 2158 01d0 002B     		cmp	r3, #0
 2159 01d2 55D0     		beq	.L161
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 2160              		.loc 1 804 0
 2161 01d4 2F4A     		ldr	r2, .L163
 2162 01d6 2F4B     		ldr	r3, .L163
 2163 01d8 DB6A     		ldr	r3, [r3, #44]
 2164 01da 43F02003 		orr	r3, r3, #32
 2165 01de D362     		str	r3, [r2, #44]
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 2166              		.loc 1 806 0
 2167 01e0 4EE0     		b	.L161
 2168              	.L140:
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
 2169              		.loc 1 810 0
 2170 01e2 2C4A     		ldr	r2, .L163
 2171 01e4 2B4B     		ldr	r3, .L163
 2172 01e6 5B6A     		ldr	r3, [r3, #36]
 2173 01e8 23F04003 		bic	r3, r3, #64
 2174 01ec 5362     		str	r3, [r2, #36]
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 2175              		.loc 1 811 0
 2176 01ee 294A     		ldr	r2, .L163
 2177 01f0 284B     		ldr	r3, .L163
 2178 01f2 1B6A     		ldr	r3, [r3, #32]
 2179 01f4 23F04003 		bic	r3, r3, #64
 2180 01f8 1362     		str	r3, [r2, #32]
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE(); 
 2181              		.loc 1 812 0
 2182 01fa 264A     		ldr	r2, .L163
 2183 01fc 254B     		ldr	r3, .L163
 2184 01fe DB6A     		ldr	r3, [r3, #44]
 2185 0200 23F04003 		bic	r3, r3, #64
 2186 0204 D362     		str	r3, [r2, #44]
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 2187              		.loc 1 813 0
 2188 0206 234A     		ldr	r2, .L163
 2189 0208 224B     		ldr	r3, .L163
 2190 020a 9B6A     		ldr	r3, [r3, #40]
 2191 020c 23F04003 		bic	r3, r3, #64
 2192 0210 9362     		str	r3, [r2, #40]
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2193              		.loc 1 816 0
 2194 0212 7B68     		ldr	r3, [r7, #4]
 2195 0214 5B68     		ldr	r3, [r3, #4]
 2196 0216 03F48033 		and	r3, r3, #65536
 2197 021a 002B     		cmp	r3, #0
 2198 021c 05D0     		beq	.L154
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
ARM GAS  /tmp/cc5LhkN2.s 			page 53


 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
 2199              		.loc 1 818 0
 2200 021e 1D4A     		ldr	r2, .L163
 2201 0220 1C4B     		ldr	r3, .L163
 2202 0222 1B6A     		ldr	r3, [r3, #32]
 2203 0224 43F04003 		orr	r3, r3, #64
 2204 0228 1362     		str	r3, [r2, #32]
 2205              	.L154:
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2206              		.loc 1 822 0
 2207 022a 7B68     		ldr	r3, [r7, #4]
 2208 022c 5B68     		ldr	r3, [r3, #4]
 2209 022e 03F40033 		and	r3, r3, #131072
 2210 0232 002B     		cmp	r3, #0
 2211 0234 05D0     		beq	.L155
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
 2212              		.loc 1 824 0
 2213 0236 174A     		ldr	r2, .L163
 2214 0238 164B     		ldr	r3, .L163
 2215 023a 5B6A     		ldr	r3, [r3, #36]
 2216 023c 43F04003 		orr	r3, r3, #64
 2217 0240 5362     		str	r3, [r2, #36]
 2218              	.L155:
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2219              		.loc 1 828 0
 2220 0242 7B68     		ldr	r3, [r7, #4]
 2221 0244 5B68     		ldr	r3, [r3, #4]
 2222 0246 03F00103 		and	r3, r3, #1
 2223 024a 002B     		cmp	r3, #0
 2224 024c 05D0     		beq	.L156
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
 2225              		.loc 1 830 0
 2226 024e 114A     		ldr	r2, .L163
 2227 0250 104B     		ldr	r3, .L163
 2228 0252 9B6A     		ldr	r3, [r3, #40]
 2229 0254 43F04003 		orr	r3, r3, #64
 2230 0258 9362     		str	r3, [r2, #40]
 2231              	.L156:
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2232              		.loc 1 833 0
 2233 025a 7B68     		ldr	r3, [r7, #4]
 2234 025c 5B68     		ldr	r3, [r3, #4]
 2235 025e 03F00203 		and	r3, r3, #2
 2236 0262 002B     		cmp	r3, #0
 2237 0264 0ED0     		beq	.L162
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
ARM GAS  /tmp/cc5LhkN2.s 			page 54


 2238              		.loc 1 835 0
 2239 0266 0B4A     		ldr	r2, .L163
 2240 0268 0A4B     		ldr	r3, .L163
 2241 026a DB6A     		ldr	r3, [r3, #44]
 2242 026c 43F04003 		orr	r3, r3, #64
 2243 0270 D362     		str	r3, [r2, #44]
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;  
 2244              		.loc 1 837 0
 2245 0272 07E0     		b	.L162
 2246              	.L135:
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return HAL_ERROR;                      
 2247              		.loc 1 840 0
 2248 0274 0123     		movs	r3, #1
 2249 0276 07E0     		b	.L158
 2250              	.L159:
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L443xx) || defined (STM32
 2251              		.loc 1 741 0
 2252 0278 00BF     		nop
 2253 027a 04E0     		b	.L145
 2254              	.L160:
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 2255              		.loc 1 774 0
 2256 027c 00BF     		nop
 2257 027e 02E0     		b	.L145
 2258              	.L161:
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 2259              		.loc 1 806 0
 2260 0280 00BF     		nop
 2261 0282 00E0     		b	.L145
 2262              	.L162:
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 2263              		.loc 1 837 0
 2264 0284 00BF     		nop
 2265              	.L145:
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }   
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 2266              		.loc 1 845 0
 2267 0286 0023     		movs	r3, #0
 2268              	.L158:
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2269              		.loc 1 846 0
 2270 0288 1846     		mov	r0, r3
 2271 028a 0C37     		adds	r7, r7, #12
 2272              	.LCFI119:
 2273              		.cfi_def_cfa_offset 4
 2274 028c BD46     		mov	sp, r7
 2275              	.LCFI120:
 2276              		.cfi_def_cfa_register 13
 2277              		@ sp needed
 2278 028e 5DF8047B 		ldr	r7, [sp], #4
 2279              	.LCFI121:
ARM GAS  /tmp/cc5LhkN2.s 			page 55


 2280              		.cfi_restore 7
 2281              		.cfi_def_cfa_offset 0
 2282 0292 7047     		bx	lr
 2283              	.L164:
 2284              		.align	2
 2285              	.L163:
 2286 0294 00040140 		.word	1073808384
 2287              		.cfi_endproc
 2288              	.LFE152:
 2290              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 2291              		.align	1
 2292              		.global	HAL_PWREx_EnableLowPowerRunMode
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2296              		.fpu fpv4-sp-d16
 2298              	HAL_PWREx_EnableLowPowerRunMode:
 2299              	.LFB153:
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.  
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must 
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.     
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2300              		.loc 1 861 0
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 0
 2303              		@ frame_needed = 1, uses_anonymous_args = 0
 2304              		@ link register save eliminated.
 2305 0000 80B4     		push	{r7}
 2306              	.LCFI122:
 2307              		.cfi_def_cfa_offset 4
 2308              		.cfi_offset 7, -4
 2309 0002 00AF     		add	r7, sp, #0
 2310              	.LCFI123:
 2311              		.cfi_def_cfa_register 7
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR); 
 2312              		.loc 1 863 0
 2313 0004 054A     		ldr	r2, .L166
 2314 0006 054B     		ldr	r3, .L166
 2315 0008 1B68     		ldr	r3, [r3]
 2316 000a 43F48043 		orr	r3, r3, #16384
 2317 000e 1360     		str	r3, [r2]
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2318              		.loc 1 864 0
 2319 0010 00BF     		nop
 2320 0012 BD46     		mov	sp, r7
ARM GAS  /tmp/cc5LhkN2.s 			page 56


 2321              	.LCFI124:
 2322              		.cfi_def_cfa_register 13
 2323              		@ sp needed
 2324 0014 5DF8047B 		ldr	r7, [sp], #4
 2325              	.LCFI125:
 2326              		.cfi_restore 7
 2327              		.cfi_def_cfa_offset 0
 2328 0018 7047     		bx	lr
 2329              	.L167:
 2330 001a 00BF     		.align	2
 2331              	.L166:
 2332 001c 00700040 		.word	1073770496
 2333              		.cfi_endproc
 2334              	.LFE153:
 2336              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 2337              		.align	1
 2338              		.global	HAL_PWREx_DisableLowPowerRunMode
 2339              		.syntax unified
 2340              		.thumb
 2341              		.thumb_func
 2342              		.fpu fpv4-sp-d16
 2344              	HAL_PWREx_DisableLowPowerRunMode:
 2345              	.LFB154:
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that 
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode 
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.   
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2346              		.loc 1 876 0
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 8
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350              		@ link register save eliminated.
 2351 0000 80B4     		push	{r7}
 2352              	.LCFI126:
 2353              		.cfi_def_cfa_offset 4
 2354              		.cfi_offset 7, -4
 2355 0002 83B0     		sub	sp, sp, #12
 2356              	.LCFI127:
 2357              		.cfi_def_cfa_offset 16
 2358 0004 00AF     		add	r7, sp, #0
 2359              	.LCFI128:
 2360              		.cfi_def_cfa_register 7
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index = 0;
 2361              		.loc 1 877 0
 2362 0006 0023     		movs	r3, #0
 2363 0008 7B60     		str	r3, [r7, #4]
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR); 
ARM GAS  /tmp/cc5LhkN2.s 			page 57


 2364              		.loc 1 880 0
 2365 000a 174A     		ldr	r2, .L174
 2366 000c 164B     		ldr	r3, .L174
 2367 000e 1B68     		ldr	r3, [r3]
 2368 0010 23F48043 		bic	r3, r3, #16384
 2369 0014 1360     		str	r3, [r2]
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 2370              		.loc 1 883 0
 2371 0016 154B     		ldr	r3, .L174+4
 2372 0018 1B68     		ldr	r3, [r3]
 2373 001a 154A     		ldr	r2, .L174+8
 2374 001c A2FB0323 		umull	r2, r3, r2, r3
 2375 0020 9B0C     		lsrs	r3, r3, #18
 2376 0022 3222     		movs	r2, #50
 2377 0024 02FB03F3 		mul	r3, r2, r3
 2378 0028 7B60     		str	r3, [r7, #4]
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 2379              		.loc 1 884 0
 2380 002a 02E0     		b	.L169
 2381              	.L171:
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     wait_loop_index--;
 2382              		.loc 1 886 0
 2383 002c 7B68     		ldr	r3, [r7, #4]
 2384 002e 013B     		subs	r3, r3, #1
 2385 0030 7B60     		str	r3, [r7, #4]
 2386              	.L169:
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 2387              		.loc 1 884 0
 2388 0032 7B68     		ldr	r3, [r7, #4]
 2389 0034 002B     		cmp	r3, #0
 2390 0036 06D0     		beq	.L170
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 2391              		.loc 1 884 0 is_stmt 0 discriminator 1
 2392 0038 0B4B     		ldr	r3, .L174
 2393 003a 5B69     		ldr	r3, [r3, #20]
 2394 003c 03F40073 		and	r3, r3, #512
 2395 0040 B3F5007F 		cmp	r3, #512
 2396 0044 F2D0     		beq	.L171
 2397              	.L170:
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 2398              		.loc 1 888 0 is_stmt 1
 2399 0046 084B     		ldr	r3, .L174
 2400 0048 5B69     		ldr	r3, [r3, #20]
 2401 004a 03F40073 		and	r3, r3, #512
 2402 004e B3F5007F 		cmp	r3, #512
 2403 0052 01D1     		bne	.L172
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 2404              		.loc 1 890 0
 2405 0054 0323     		movs	r3, #3
 2406 0056 00E0     		b	.L173
 2407              	.L172:
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
ARM GAS  /tmp/cc5LhkN2.s 			page 58


 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 2408              		.loc 1 893 0
 2409 0058 0023     		movs	r3, #0
 2410              	.L173:
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2411              		.loc 1 894 0
 2412 005a 1846     		mov	r0, r3
 2413 005c 0C37     		adds	r7, r7, #12
 2414              	.LCFI129:
 2415              		.cfi_def_cfa_offset 4
 2416 005e BD46     		mov	sp, r7
 2417              	.LCFI130:
 2418              		.cfi_def_cfa_register 13
 2419              		@ sp needed
 2420 0060 5DF8047B 		ldr	r7, [sp], #4
 2421              	.LCFI131:
 2422              		.cfi_restore 7
 2423              		.cfi_def_cfa_offset 0
 2424 0064 7047     		bx	lr
 2425              	.L175:
 2426 0066 00BF     		.align	2
 2427              	.L174:
 2428 0068 00700040 		.word	1073770496
 2429 006c 00000000 		.word	SystemCoreClock
 2430 0070 83DE1B43 		.word	1125899907
 2431              		.cfi_endproc
 2432              	.LFE154:
 2434              		.section	.text.HAL_PWREx_EnterSTOP0Mode,"ax",%progbits
 2435              		.align	1
 2436              		.global	HAL_PWREx_EnterSTOP0Mode
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2440              		.fpu fpv4-sp-d16
 2442              	HAL_PWREx_EnterSTOP0Mode:
 2443              	.LFB155:
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 0 mode.
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, main and low voltage regulators are ON.
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 0 mode, all I/O pins keep the same state as in Run mode.
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI, 
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 0 mode by issuing an interrupt or a wakeup event,
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.  
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  By keeping the internal regulator ON during Stop 0 mode, the consumption
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/cc5LhkN2.s 			page 59


 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP0Mode(uint8_t STOPEntry)
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2444              		.loc 1 920 0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 8
 2447              		@ frame_needed = 1, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
 2449 0000 80B4     		push	{r7}
 2450              	.LCFI132:
 2451              		.cfi_def_cfa_offset 4
 2452              		.cfi_offset 7, -4
 2453 0002 83B0     		sub	sp, sp, #12
 2454              	.LCFI133:
 2455              		.cfi_def_cfa_offset 16
 2456 0004 00AF     		add	r7, sp, #0
 2457              	.LCFI134:
 2458              		.cfi_def_cfa_register 7
 2459 0006 0346     		mov	r3, r0
 2460 0008 FB71     		strb	r3, [r7, #7]
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Stop 0 mode with Main Regulator */
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP0);
 2461              		.loc 1 925 0
 2462 000a 104A     		ldr	r2, .L179
 2463 000c 0F4B     		ldr	r3, .L179
 2464 000e 1B68     		ldr	r3, [r3]
 2465 0010 23F00703 		bic	r3, r3, #7
 2466 0014 1360     		str	r3, [r2]
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2467              		.loc 1 928 0
 2468 0016 0E4A     		ldr	r2, .L179+4
 2469 0018 0D4B     		ldr	r3, .L179+4
 2470 001a 1B69     		ldr	r3, [r3, #16]
 2471 001c 43F00403 		orr	r3, r3, #4
 2472 0020 1361     		str	r3, [r2, #16]
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2473              		.loc 1 931 0
 2474 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2475 0024 012B     		cmp	r3, #1
 2476 0026 01D1     		bne	.L177
 2477              	.LBB28:
 2478              	.LBB29:
 2479              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
ARM GAS  /tmp/cc5LhkN2.s 			page 60


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc5LhkN2.s 			page 61


  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc5LhkN2.s 			page 62


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
ARM GAS  /tmp/cc5LhkN2.s 			page 63


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc5LhkN2.s 			page 64


 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  /tmp/cc5LhkN2.s 			page 65


 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc5LhkN2.s 			page 66


 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 2480              		.loc 2 385 0
 2481              		.syntax unified
 2482              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2483 0028 30BF     		wfi
 2484              	@ 0 "" 2
 2485              		.thumb
 2486              		.syntax unified
 2487              	.LBE29:
 2488              	.LBE28:
 2489 002a 02E0     		b	.L178
 2490              	.L177:
 2491              	.LBB30:
 2492              	.LBB31:
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  /tmp/cc5LhkN2.s 			page 67


 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 2493              		.loc 2 406 0
 2494              		.syntax unified
 2495              	@ 406 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2496 002c 40BF     		sev
 2497              	@ 0 "" 2
 2498              		.thumb
 2499              		.syntax unified
 2500              	.LBE31:
 2501              	.LBE30:
 2502              	.LBB32:
 2503              	.LBB33:
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2504              		.loc 2 396 0
 2505              		.syntax unified
 2506              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2507 002e 20BF     		wfe
 2508              	@ 0 "" 2
 2509              		.thumb
 2510              		.syntax unified
 2511              	.LBE33:
 2512              	.LBE32:
 2513              	.LBB34:
 2514              	.LBB35:
 2515              		.syntax unified
 2516              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2517 0030 20BF     		wfe
 2518              	@ 0 "" 2
 2519              		.thumb
 2520              		.syntax unified
 2521              	.L178:
 2522              	.LBE35:
 2523              	.LBE34:
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
ARM GAS  /tmp/cc5LhkN2.s 			page 68


 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2524              		.loc 1 945 0
 2525 0032 074A     		ldr	r2, .L179+4
 2526 0034 064B     		ldr	r3, .L179+4
 2527 0036 1B69     		ldr	r3, [r3, #16]
 2528 0038 23F00403 		bic	r3, r3, #4
 2529 003c 1361     		str	r3, [r2, #16]
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2530              		.loc 1 946 0
 2531 003e 00BF     		nop
 2532 0040 0C37     		adds	r7, r7, #12
 2533              	.LCFI135:
 2534              		.cfi_def_cfa_offset 4
 2535 0042 BD46     		mov	sp, r7
 2536              	.LCFI136:
 2537              		.cfi_def_cfa_register 13
 2538              		@ sp needed
 2539 0044 5DF8047B 		ldr	r7, [sp], #4
 2540              	.LCFI137:
 2541              		.cfi_restore 7
 2542              		.cfi_def_cfa_offset 0
 2543 0048 7047     		bx	lr
 2544              	.L180:
 2545 004a 00BF     		.align	2
 2546              	.L179:
 2547 004c 00700040 		.word	1073770496
 2548 0050 00ED00E0 		.word	-536810240
 2549              		.cfi_endproc
 2550              	.LFE155:
 2552              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 2553              		.align	1
 2554              		.global	HAL_PWREx_EnterSTOP1Mode
 2555              		.syntax unified
 2556              		.thumb
 2557              		.thumb_func
 2558              		.fpu fpv4-sp-d16
 2560              	HAL_PWREx_EnterSTOP1Mode:
 2561              	.LFB156:
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, only low power voltage regulator is ON.
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI, 
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
ARM GAS  /tmp/cc5LhkN2.s 			page 69


 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.  
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Due to low power mode, an additional startup delay is incurred when waking up from Stop 
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint8_t STOPEntry)
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2562              		.loc 1 971 0
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 8
 2565              		@ frame_needed = 1, uses_anonymous_args = 0
 2566              		@ link register save eliminated.
 2567 0000 80B4     		push	{r7}
 2568              	.LCFI138:
 2569              		.cfi_def_cfa_offset 4
 2570              		.cfi_offset 7, -4
 2571 0002 83B0     		sub	sp, sp, #12
 2572              	.LCFI139:
 2573              		.cfi_def_cfa_offset 16
 2574 0004 00AF     		add	r7, sp, #0
 2575              	.LCFI140:
 2576              		.cfi_def_cfa_register 7
 2577 0006 0346     		mov	r3, r0
 2578 0008 FB71     		strb	r3, [r7, #7]
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Stop 1 mode with Low-Power Regulator */
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1);
 2579              		.loc 1 976 0
 2580 000a 114A     		ldr	r2, .L184
 2581 000c 104B     		ldr	r3, .L184
 2582 000e 1B68     		ldr	r3, [r3]
 2583 0010 23F00703 		bic	r3, r3, #7
 2584 0014 43F00103 		orr	r3, r3, #1
 2585 0018 1360     		str	r3, [r2]
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2586              		.loc 1 979 0
 2587 001a 0E4A     		ldr	r2, .L184+4
 2588 001c 0D4B     		ldr	r3, .L184+4
 2589 001e 1B69     		ldr	r3, [r3, #16]
 2590 0020 43F00403 		orr	r3, r3, #4
 2591 0024 1361     		str	r3, [r2, #16]
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2592              		.loc 1 982 0
 2593 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2594 0028 012B     		cmp	r3, #1
 2595 002a 01D1     		bne	.L182
 2596              	.LBB36:
 2597              	.LBB37:
ARM GAS  /tmp/cc5LhkN2.s 			page 70


 385:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2598              		.loc 2 385 0
 2599              		.syntax unified
 2600              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2601 002c 30BF     		wfi
 2602              	@ 0 "" 2
 2603              		.thumb
 2604              		.syntax unified
 2605              	.LBE37:
 2606              	.LBE36:
 2607 002e 02E0     		b	.L183
 2608              	.L182:
 2609              	.LBB38:
 2610              	.LBB39:
 2611              		.loc 2 406 0
 2612              		.syntax unified
 2613              	@ 406 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2614 0030 40BF     		sev
 2615              	@ 0 "" 2
 2616              		.thumb
 2617              		.syntax unified
 2618              	.LBE39:
 2619              	.LBE38:
 2620              	.LBB40:
 2621              	.LBB41:
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2622              		.loc 2 396 0
 2623              		.syntax unified
 2624              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2625 0032 20BF     		wfe
 2626              	@ 0 "" 2
 2627              		.thumb
 2628              		.syntax unified
 2629              	.LBE41:
 2630              	.LBE40:
 2631              	.LBB42:
 2632              	.LBB43:
 2633              		.syntax unified
 2634              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2635 0034 20BF     		wfe
 2636              	@ 0 "" 2
 2637              		.thumb
 2638              		.syntax unified
 2639              	.L183:
 2640              	.LBE43:
 2641              	.LBE42:
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
ARM GAS  /tmp/cc5LhkN2.s 			page 71


 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2642              		.loc 1 996 0
 2643 0036 074A     		ldr	r2, .L184+4
 2644 0038 064B     		ldr	r3, .L184+4
 2645 003a 1B69     		ldr	r3, [r3, #16]
 2646 003c 23F00403 		bic	r3, r3, #4
 2647 0040 1361     		str	r3, [r2, #16]
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2648              		.loc 1 997 0
 2649 0042 00BF     		nop
 2650 0044 0C37     		adds	r7, r7, #12
 2651              	.LCFI141:
 2652              		.cfi_def_cfa_offset 4
 2653 0046 BD46     		mov	sp, r7
 2654              	.LCFI142:
 2655              		.cfi_def_cfa_register 13
 2656              		@ sp needed
 2657 0048 5DF8047B 		ldr	r7, [sp], #4
 2658              	.LCFI143:
 2659              		.cfi_restore 7
 2660              		.cfi_def_cfa_offset 0
 2661 004c 7047     		bx	lr
 2662              	.L185:
 2663 004e 00BF     		.align	2
 2664              	.L184:
 2665 0050 00700040 		.word	1073770496
 2666 0054 00ED00E0 		.word	-536810240
 2667              		.cfi_endproc
 2668              	.LFE156:
 2670              		.section	.text.HAL_PWREx_EnterSTOP2Mode,"ax",%progbits
 2671              		.align	1
 2672              		.global	HAL_PWREx_EnterSTOP2Mode
 2673              		.syntax unified
 2674              		.thumb
 2675              		.thumb_func
 2676              		.fpu fpv4-sp-d16
 2678              	HAL_PWREx_EnterSTOP2Mode:
 2679              	.LFB157:
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 2 mode.
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, only low power voltage regulator is ON.
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, all I/O pins keep the same state as in Run mode.
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped, the PLL, the MSI, 
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with wakeup capability 
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (LCD, LPTIM1, I2C3 and LPUART) can switch on the HSI to receive a frame, and switch off 
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        receiving the frame if it is not a wakeup frame. In this case the HSI clock is propagate
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        to the peripheral requesting it.
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.   
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The voltage regulator is set in low-power mode but LPR bit must be cleared to enter stop
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Otherwise, Stop 1 mode is entered.  
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 2 mode by issuing an interrupt or a wakeup event,
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
ARM GAS  /tmp/cc5LhkN2.s 			page 72


1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.     
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry  specifies if Stop mode in entered with WFI or WFE instruction.
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop mode with WFI instruction
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop mode with WFE instruction
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP2Mode(uint8_t STOPEntry)
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2680              		.loc 1 1023 0
 2681              		.cfi_startproc
 2682              		@ args = 0, pretend = 0, frame = 8
 2683              		@ frame_needed = 1, uses_anonymous_args = 0
 2684              		@ link register save eliminated.
 2685 0000 80B4     		push	{r7}
 2686              	.LCFI144:
 2687              		.cfi_def_cfa_offset 4
 2688              		.cfi_offset 7, -4
 2689 0002 83B0     		sub	sp, sp, #12
 2690              	.LCFI145:
 2691              		.cfi_def_cfa_offset 16
 2692 0004 00AF     		add	r7, sp, #0
 2693              	.LCFI146:
 2694              		.cfi_def_cfa_register 7
 2695 0006 0346     		mov	r3, r0
 2696 0008 FB71     		strb	r3, [r7, #7]
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameter */
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP2);
 2697              		.loc 1 1028 0
 2698 000a 114A     		ldr	r2, .L189
 2699 000c 104B     		ldr	r3, .L189
 2700 000e 1B68     		ldr	r3, [r3]
 2701 0010 23F00703 		bic	r3, r3, #7
 2702 0014 43F00203 		orr	r3, r3, #2
 2703 0018 1360     		str	r3, [r2]
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2704              		.loc 1 1031 0
 2705 001a 0E4A     		ldr	r2, .L189+4
 2706 001c 0D4B     		ldr	r3, .L189+4
 2707 001e 1B69     		ldr	r3, [r3, #16]
 2708 0020 43F00403 		orr	r3, r3, #4
 2709 0024 1361     		str	r3, [r2, #16]
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2710              		.loc 1 1034 0
 2711 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2712 0028 012B     		cmp	r3, #1
 2713 002a 01D1     		bne	.L187
 2714              	.LBB44:
 2715              	.LBB45:
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/cc5LhkN2.s 			page 73


 2716              		.loc 2 385 0
 2717              		.syntax unified
 2718              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2719 002c 30BF     		wfi
 2720              	@ 0 "" 2
 2721              		.thumb
 2722              		.syntax unified
 2723              	.LBE45:
 2724              	.LBE44:
 2725 002e 02E0     		b	.L188
 2726              	.L187:
 2727              	.LBB46:
 2728              	.LBB47:
 2729              		.loc 2 406 0
 2730              		.syntax unified
 2731              	@ 406 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2732 0030 40BF     		sev
 2733              	@ 0 "" 2
 2734              		.thumb
 2735              		.syntax unified
 2736              	.LBE47:
 2737              	.LBE46:
 2738              	.LBB48:
 2739              	.LBB49:
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2740              		.loc 2 396 0
 2741              		.syntax unified
 2742              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2743 0032 20BF     		wfe
 2744              	@ 0 "" 2
 2745              		.thumb
 2746              		.syntax unified
 2747              	.LBE49:
 2748              	.LBE48:
 2749              	.LBB50:
 2750              	.LBB51:
 2751              		.syntax unified
 2752              	@ 396 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2753 0034 20BF     		wfe
 2754              	@ 0 "" 2
 2755              		.thumb
 2756              		.syntax unified
 2757              	.L188:
 2758              	.LBE51:
 2759              	.LBE50:
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cc5LhkN2.s 			page 74


1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2760              		.loc 1 1048 0
 2761 0036 074A     		ldr	r2, .L189+4
 2762 0038 064B     		ldr	r3, .L189+4
 2763 003a 1B69     		ldr	r3, [r3, #16]
 2764 003c 23F00403 		bic	r3, r3, #4
 2765 0040 1361     		str	r3, [r2, #16]
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2766              		.loc 1 1049 0
 2767 0042 00BF     		nop
 2768 0044 0C37     		adds	r7, r7, #12
 2769              	.LCFI147:
 2770              		.cfi_def_cfa_offset 4
 2771 0046 BD46     		mov	sp, r7
 2772              	.LCFI148:
 2773              		.cfi_def_cfa_register 13
 2774              		@ sp needed
 2775 0048 5DF8047B 		ldr	r7, [sp], #4
 2776              	.LCFI149:
 2777              		.cfi_restore 7
 2778              		.cfi_def_cfa_offset 0
 2779 004c 7047     		bx	lr
 2780              	.L190:
 2781 004e 00BF     		.align	2
 2782              	.L189:
 2783 0050 00700040 		.word	1073770496
 2784 0054 00ED00E0 		.word	-536810240
 2785              		.cfi_endproc
 2786              	.LFE157:
 2788              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 2789              		.align	1
 2790              		.global	HAL_PWREx_EnterSHUTDOWNMode
 2791              		.syntax unified
 2792              		.thumb
 2793              		.thumb_func
 2794              		.fpu fpv4-sp-d16
 2796              	HAL_PWREx_EnterSHUTDOWNMode:
 2797              	.LFB158:
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode. 
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the MSI, the LSI and the HSE oscillators are switche
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off. 
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is not available.  
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2798              		.loc 1 1065 0
 2799              		.cfi_startproc
ARM GAS  /tmp/cc5LhkN2.s 			page 75


 2800              		@ args = 0, pretend = 0, frame = 0
 2801              		@ frame_needed = 1, uses_anonymous_args = 0
 2802              		@ link register save eliminated.
 2803 0000 80B4     		push	{r7}
 2804              	.LCFI150:
 2805              		.cfi_def_cfa_offset 4
 2806              		.cfi_offset 7, -4
 2807 0002 00AF     		add	r7, sp, #0
 2808              	.LCFI151:
 2809              		.cfi_def_cfa_register 7
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 2810              		.loc 1 1068 0
 2811 0004 094A     		ldr	r2, .L192
 2812 0006 094B     		ldr	r3, .L192
 2813 0008 1B68     		ldr	r3, [r3]
 2814 000a 23F00703 		bic	r3, r3, #7
 2815 000e 43F00403 		orr	r3, r3, #4
 2816 0012 1360     		str	r3, [r2]
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2817              		.loc 1 1071 0
 2818 0014 064A     		ldr	r2, .L192+4
 2819 0016 064B     		ldr	r3, .L192+4
 2820 0018 1B69     		ldr	r3, [r3, #16]
 2821 001a 43F00403 		orr	r3, r3, #4
 2822 001e 1361     		str	r3, [r2, #16]
 2823              	.LBB52:
 2824              	.LBB53:
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2825              		.loc 2 385 0
 2826              		.syntax unified
 2827              	@ 385 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2828 0020 30BF     		wfi
 2829              	@ 0 "" 2
 2830              		.thumb
 2831              		.syntax unified
 2832              	.LBE53:
 2833              	.LBE52:
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __force_stores();
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __WFI();
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2834              		.loc 1 1079 0
 2835 0022 00BF     		nop
 2836 0024 BD46     		mov	sp, r7
 2837              	.LCFI152:
 2838              		.cfi_def_cfa_register 13
 2839              		@ sp needed
 2840 0026 5DF8047B 		ldr	r7, [sp], #4
 2841              	.LCFI153:
ARM GAS  /tmp/cc5LhkN2.s 			page 76


 2842              		.cfi_restore 7
 2843              		.cfi_def_cfa_offset 0
 2844 002a 7047     		bx	lr
 2845              	.L193:
 2846              		.align	2
 2847              	.L192:
 2848 002c 00700040 		.word	1073770496
 2849 0030 00ED00E0 		.word	-536810240
 2850              		.cfi_endproc
 2851              	.LFE158:
 2853              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 2854              		.align	1
 2855              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 2856              		.syntax unified
 2857              		.thumb
 2858              		.thumb_func
 2859              		.fpu fpv4-sp-d16
 2861              	HAL_PWREx_PVD_PVM_IRQHandler:
 2862              	.LFB159:
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().  
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2863              		.loc 1 1090 0
 2864              		.cfi_startproc
 2865              		@ args = 0, pretend = 0, frame = 0
 2866              		@ frame_needed = 1, uses_anonymous_args = 0
 2867 0000 80B5     		push	{r7, lr}
 2868              	.LCFI154:
 2869              		.cfi_def_cfa_offset 8
 2870              		.cfi_offset 7, -8
 2871              		.cfi_offset 14, -4
 2872 0002 00AF     		add	r7, sp, #0
 2873              	.LCFI155:
 2874              		.cfi_def_cfa_register 7
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 2875              		.loc 1 1092 0
 2876 0004 1C4B     		ldr	r3, .L201
 2877 0006 5B69     		ldr	r3, [r3, #20]
 2878 0008 03F48033 		and	r3, r3, #65536
 2879 000c 002B     		cmp	r3, #0
 2880 000e 05D0     		beq	.L195
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
 2881              		.loc 1 1095 0
 2882 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
ARM GAS  /tmp/cc5LhkN2.s 			page 77


1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 2883              		.loc 1 1098 0
 2884 0014 184B     		ldr	r3, .L201
 2885 0016 4FF48032 		mov	r2, #65536
 2886 001a 5A61     		str	r2, [r3, #20]
 2887              	.L195:
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32L443xx
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != RESET) 
 2888              		.loc 1 1102 0
 2889 001c 164B     		ldr	r3, .L201
 2890 001e 5B6B     		ldr	r3, [r3, #52]
 2891 0020 03F00803 		and	r3, r3, #8
 2892 0024 002B     		cmp	r3, #0
 2893 0026 04D0     		beq	.L196
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
 2894              		.loc 1 1105 0
 2895 0028 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
 2896              		.loc 1 1108 0
 2897 002c 124B     		ldr	r3, .L201
 2898 002e 0822     		movs	r2, #8
 2899 0030 5A63     		str	r2, [r3, #52]
 2900              	.L196:
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != RESET) 
 2901              		.loc 1 1112 0
 2902 0032 114B     		ldr	r3, .L201
 2903 0034 5B6B     		ldr	r3, [r3, #52]
 2904 0036 03F01003 		and	r3, r3, #16
 2905 003a 002B     		cmp	r3, #0
 2906 003c 04D0     		beq	.L197
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
 2907              		.loc 1 1115 0
 2908 003e FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
 2909              		.loc 1 1118 0
 2910 0042 0D4B     		ldr	r3, .L201
 2911 0044 1022     		movs	r2, #16
 2912 0046 5A63     		str	r2, [r3, #52]
 2913              	.L197:
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != RESET) 
 2914              		.loc 1 1121 0
 2915 0048 0B4B     		ldr	r3, .L201
ARM GAS  /tmp/cc5LhkN2.s 			page 78


 2916 004a 5B6B     		ldr	r3, [r3, #52]
 2917 004c 03F02003 		and	r3, r3, #32
 2918 0050 002B     		cmp	r3, #0
 2919 0052 04D0     		beq	.L198
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
 2920              		.loc 1 1124 0
 2921 0054 FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
 2922              		.loc 1 1127 0
 2923 0058 074B     		ldr	r3, .L201
 2924 005a 2022     		movs	r2, #32
 2925 005c 5A63     		str	r2, [r3, #52]
 2926              	.L198:
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != RESET) 
 2927              		.loc 1 1129 0
 2928 005e 064B     		ldr	r3, .L201
 2929 0060 5B6B     		ldr	r3, [r3, #52]
 2930 0062 03F04003 		and	r3, r3, #64
 2931 0066 002B     		cmp	r3, #0
 2932 0068 04D0     		beq	.L200
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
 2933              		.loc 1 1132 0
 2934 006a FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
 2935              		.loc 1 1135 0
 2936 006e 024B     		ldr	r3, .L201
 2937 0070 4022     		movs	r2, #64
 2938 0072 5A63     		str	r2, [r3, #52]
 2939              	.L200:
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }      
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2940              		.loc 1 1137 0
 2941 0074 00BF     		nop
 2942 0076 80BD     		pop	{r7, pc}
 2943              	.L202:
 2944              		.align	2
 2945              	.L201:
 2946 0078 00040140 		.word	1073808384
 2947              		.cfi_endproc
 2948              	.LFE159:
 2950              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 2951              		.align	1
 2952              		.weak	HAL_PWREx_PVM1Callback
 2953              		.syntax unified
 2954              		.thumb
 2955              		.thumb_func
 2956              		.fpu fpv4-sp-d16
 2958              	HAL_PWREx_PVM1Callback:
ARM GAS  /tmp/cc5LhkN2.s 			page 79


 2959              	.LFB160:
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32L443xx
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2960              		.loc 1 1146 0
 2961              		.cfi_startproc
 2962              		@ args = 0, pretend = 0, frame = 0
 2963              		@ frame_needed = 1, uses_anonymous_args = 0
 2964              		@ link register save eliminated.
 2965 0000 80B4     		push	{r7}
 2966              	.LCFI156:
 2967              		.cfi_def_cfa_offset 4
 2968              		.cfi_offset 7, -4
 2969 0002 00AF     		add	r7, sp, #0
 2970              	.LCFI157:
 2971              		.cfi_def_cfa_register 7
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2972              		.loc 1 1150 0
 2973 0004 00BF     		nop
 2974 0006 BD46     		mov	sp, r7
 2975              	.LCFI158:
 2976              		.cfi_def_cfa_register 13
 2977              		@ sp needed
 2978 0008 5DF8047B 		ldr	r7, [sp], #4
 2979              	.LCFI159:
 2980              		.cfi_restore 7
 2981              		.cfi_def_cfa_offset 0
 2982 000c 7047     		bx	lr
 2983              		.cfi_endproc
 2984              	.LFE160:
 2986              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 2987              		.align	1
 2988              		.weak	HAL_PWREx_PVM2Callback
 2989              		.syntax unified
 2990              		.thumb
 2991              		.thumb_func
 2992              		.fpu fpv4-sp-d16
 2994              	HAL_PWREx_PVM2Callback:
 2995              	.LFB161:
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L432xx) || defined (STM32L433xx) || defined (STM32L442xx) || defined (STM32
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
ARM GAS  /tmp/cc5LhkN2.s 			page 80


 2996              		.loc 1 1159 0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 0
 2999              		@ frame_needed = 1, uses_anonymous_args = 0
 3000              		@ link register save eliminated.
 3001 0000 80B4     		push	{r7}
 3002              	.LCFI160:
 3003              		.cfi_def_cfa_offset 4
 3004              		.cfi_offset 7, -4
 3005 0002 00AF     		add	r7, sp, #0
 3006              	.LCFI161:
 3007              		.cfi_def_cfa_register 7
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 3008              		.loc 1 1163 0
 3009 0004 00BF     		nop
 3010 0006 BD46     		mov	sp, r7
 3011              	.LCFI162:
 3012              		.cfi_def_cfa_register 13
 3013              		@ sp needed
 3014 0008 5DF8047B 		ldr	r7, [sp], #4
 3015              	.LCFI163:
 3016              		.cfi_restore 7
 3017              		.cfi_def_cfa_offset 0
 3018 000c 7047     		bx	lr
 3019              		.cfi_endproc
 3020              	.LFE161:
 3022              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 3023              		.align	1
 3024              		.weak	HAL_PWREx_PVM3Callback
 3025              		.syntax unified
 3026              		.thumb
 3027              		.thumb_func
 3028              		.fpu fpv4-sp-d16
 3030              	HAL_PWREx_PVM3Callback:
 3031              	.LFB162:
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 3032              		.loc 1 1171 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 1, uses_anonymous_args = 0
 3036              		@ link register save eliminated.
 3037 0000 80B4     		push	{r7}
 3038              	.LCFI164:
 3039              		.cfi_def_cfa_offset 4
 3040              		.cfi_offset 7, -4
 3041 0002 00AF     		add	r7, sp, #0
 3042              	.LCFI165:
ARM GAS  /tmp/cc5LhkN2.s 			page 81


 3043              		.cfi_def_cfa_register 7
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 3044              		.loc 1 1175 0
 3045 0004 00BF     		nop
 3046 0006 BD46     		mov	sp, r7
 3047              	.LCFI166:
 3048              		.cfi_def_cfa_register 13
 3049              		@ sp needed
 3050 0008 5DF8047B 		ldr	r7, [sp], #4
 3051              	.LCFI167:
 3052              		.cfi_restore 7
 3053              		.cfi_def_cfa_offset 0
 3054 000c 7047     		bx	lr
 3055              		.cfi_endproc
 3056              	.LFE162:
 3058              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 3059              		.align	1
 3060              		.weak	HAL_PWREx_PVM4Callback
 3061              		.syntax unified
 3062              		.thumb
 3063              		.thumb_func
 3064              		.fpu fpv4-sp-d16
 3066              	HAL_PWREx_PVM4Callback:
 3067              	.LFB163:
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 3068              		.loc 1 1182 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 0
 3071              		@ frame_needed = 1, uses_anonymous_args = 0
 3072              		@ link register save eliminated.
 3073 0000 80B4     		push	{r7}
 3074              	.LCFI168:
 3075              		.cfi_def_cfa_offset 4
 3076              		.cfi_offset 7, -4
 3077 0002 00AF     		add	r7, sp, #0
 3078              	.LCFI169:
 3079              		.cfi_def_cfa_register 7
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 3080              		.loc 1 1186 0
 3081 0004 00BF     		nop
 3082 0006 BD46     		mov	sp, r7
 3083              	.LCFI170:
 3084              		.cfi_def_cfa_register 13
 3085              		@ sp needed
 3086 0008 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cc5LhkN2.s 			page 82


 3087              	.LCFI171:
 3088              		.cfi_restore 7
 3089              		.cfi_def_cfa_offset 0
 3090 000c 7047     		bx	lr
 3091              		.cfi_endproc
 3092              	.LFE163:
 3094              		.text
 3095              	.Letext0:
 3096              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3097              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3098              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 3099              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 3100              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 3101              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 3102              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 3103              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 3104              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 3105              		.file 12 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3106              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3107              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
ARM GAS  /tmp/cc5LhkN2.s 			page 83


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_pwr_ex.c
     /tmp/cc5LhkN2.s:18     .text.HAL_PWREx_GetVoltageRange:0000000000000000 $t
     /tmp/cc5LhkN2.s:25     .text.HAL_PWREx_GetVoltageRange:0000000000000000 HAL_PWREx_GetVoltageRange
     /tmp/cc5LhkN2.s:58     .text.HAL_PWREx_GetVoltageRange:0000000000000018 $d
     /tmp/cc5LhkN2.s:63     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 $t
     /tmp/cc5LhkN2.s:70     .text.HAL_PWREx_ControlVoltageScaling:0000000000000000 HAL_PWREx_ControlVoltageScaling
     /tmp/cc5LhkN2.s:180    .text.HAL_PWREx_ControlVoltageScaling:00000000000000a0 $d
     /tmp/cc5LhkN2.s:187    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 $t
     /tmp/cc5LhkN2.s:194    .text.HAL_PWREx_EnableBatteryCharging:0000000000000000 HAL_PWREx_EnableBatteryCharging
     /tmp/cc5LhkN2.s:243    .text.HAL_PWREx_EnableBatteryCharging:0000000000000030 $d
     /tmp/cc5LhkN2.s:248    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 $t
     /tmp/cc5LhkN2.s:255    .text.HAL_PWREx_DisableBatteryCharging:0000000000000000 HAL_PWREx_DisableBatteryCharging
     /tmp/cc5LhkN2.s:289    .text.HAL_PWREx_DisableBatteryCharging:000000000000001c $d
     /tmp/cc5LhkN2.s:294    .text.HAL_PWREx_EnableVddUSB:0000000000000000 $t
     /tmp/cc5LhkN2.s:301    .text.HAL_PWREx_EnableVddUSB:0000000000000000 HAL_PWREx_EnableVddUSB
     /tmp/cc5LhkN2.s:335    .text.HAL_PWREx_EnableVddUSB:000000000000001c $d
     /tmp/cc5LhkN2.s:340    .text.HAL_PWREx_DisableVddUSB:0000000000000000 $t
     /tmp/cc5LhkN2.s:347    .text.HAL_PWREx_DisableVddUSB:0000000000000000 HAL_PWREx_DisableVddUSB
     /tmp/cc5LhkN2.s:381    .text.HAL_PWREx_DisableVddUSB:000000000000001c $d
     /tmp/cc5LhkN2.s:386    .text.HAL_PWREx_EnableVddIO2:0000000000000000 $t
     /tmp/cc5LhkN2.s:393    .text.HAL_PWREx_EnableVddIO2:0000000000000000 HAL_PWREx_EnableVddIO2
     /tmp/cc5LhkN2.s:427    .text.HAL_PWREx_EnableVddIO2:000000000000001c $d
     /tmp/cc5LhkN2.s:432    .text.HAL_PWREx_DisableVddIO2:0000000000000000 $t
     /tmp/cc5LhkN2.s:439    .text.HAL_PWREx_DisableVddIO2:0000000000000000 HAL_PWREx_DisableVddIO2
     /tmp/cc5LhkN2.s:473    .text.HAL_PWREx_DisableVddIO2:000000000000001c $d
     /tmp/cc5LhkN2.s:478    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 $t
     /tmp/cc5LhkN2.s:485    .text.HAL_PWREx_EnableInternalWakeUpLine:0000000000000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/cc5LhkN2.s:519    .text.HAL_PWREx_EnableInternalWakeUpLine:000000000000001c $d
     /tmp/cc5LhkN2.s:524    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 $t
     /tmp/cc5LhkN2.s:531    .text.HAL_PWREx_DisableInternalWakeUpLine:0000000000000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/cc5LhkN2.s:565    .text.HAL_PWREx_DisableInternalWakeUpLine:000000000000001c $d
     /tmp/cc5LhkN2.s:570    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 $t
     /tmp/cc5LhkN2.s:577    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/cc5LhkN2.s:604    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000018 $d
     /tmp/cc5LhkN2.s:612    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000038 $t
     /tmp/cc5LhkN2.s:787    .text.HAL_PWREx_EnableGPIOPullUp:0000000000000140 $d
     /tmp/cc5LhkN2.s:792    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 $t
     /tmp/cc5LhkN2.s:799    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/cc5LhkN2.s:826    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000018 $d
     /tmp/cc5LhkN2.s:834    .text.HAL_PWREx_DisableGPIOPullUp:0000000000000038 $t
     /tmp/cc5LhkN2.s:950    .text.HAL_PWREx_DisableGPIOPullUp:00000000000000d4 $d
     /tmp/cc5LhkN2.s:955    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 $t
     /tmp/cc5LhkN2.s:962    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/cc5LhkN2.s:989    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000018 $d
     /tmp/cc5LhkN2.s:997    .text.HAL_PWREx_EnableGPIOPullDown:0000000000000038 $t
     /tmp/cc5LhkN2.s:1172   .text.HAL_PWREx_EnableGPIOPullDown:0000000000000140 $d
     /tmp/cc5LhkN2.s:1177   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 $t
     /tmp/cc5LhkN2.s:1184   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/cc5LhkN2.s:1211   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000018 $d
     /tmp/cc5LhkN2.s:1219   .text.HAL_PWREx_DisableGPIOPullDown:0000000000000038 $t
     /tmp/cc5LhkN2.s:1336   .text.HAL_PWREx_DisableGPIOPullDown:00000000000000d8 $d
     /tmp/cc5LhkN2.s:1341   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 $t
     /tmp/cc5LhkN2.s:1348   .text.HAL_PWREx_EnablePullUpPullDownConfig:0000000000000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/cc5LhkN2.s:1382   .text.HAL_PWREx_EnablePullUpPullDownConfig:000000000000001c $d
     /tmp/cc5LhkN2.s:1387   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 $t
     /tmp/cc5LhkN2.s:1394   .text.HAL_PWREx_DisablePullUpPullDownConfig:0000000000000000 HAL_PWREx_DisablePullUpPullDownConfig
ARM GAS  /tmp/cc5LhkN2.s 			page 84


     /tmp/cc5LhkN2.s:1428   .text.HAL_PWREx_DisablePullUpPullDownConfig:000000000000001c $d
     /tmp/cc5LhkN2.s:1433   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 $t
     /tmp/cc5LhkN2.s:1440   .text.HAL_PWREx_EnableSRAM2ContentRetention:0000000000000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/cc5LhkN2.s:1474   .text.HAL_PWREx_EnableSRAM2ContentRetention:000000000000001c $d
     /tmp/cc5LhkN2.s:1479   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 $t
     /tmp/cc5LhkN2.s:1486   .text.HAL_PWREx_DisableSRAM2ContentRetention:0000000000000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/cc5LhkN2.s:1520   .text.HAL_PWREx_DisableSRAM2ContentRetention:000000000000001c $d
     /tmp/cc5LhkN2.s:1525   .text.HAL_PWREx_EnablePVM1:0000000000000000 $t
     /tmp/cc5LhkN2.s:1532   .text.HAL_PWREx_EnablePVM1:0000000000000000 HAL_PWREx_EnablePVM1
     /tmp/cc5LhkN2.s:1566   .text.HAL_PWREx_EnablePVM1:000000000000001c $d
     /tmp/cc5LhkN2.s:1571   .text.HAL_PWREx_DisablePVM1:0000000000000000 $t
     /tmp/cc5LhkN2.s:1578   .text.HAL_PWREx_DisablePVM1:0000000000000000 HAL_PWREx_DisablePVM1
     /tmp/cc5LhkN2.s:1612   .text.HAL_PWREx_DisablePVM1:000000000000001c $d
     /tmp/cc5LhkN2.s:1617   .text.HAL_PWREx_EnablePVM2:0000000000000000 $t
     /tmp/cc5LhkN2.s:1624   .text.HAL_PWREx_EnablePVM2:0000000000000000 HAL_PWREx_EnablePVM2
     /tmp/cc5LhkN2.s:1658   .text.HAL_PWREx_EnablePVM2:000000000000001c $d
     /tmp/cc5LhkN2.s:1663   .text.HAL_PWREx_DisablePVM2:0000000000000000 $t
     /tmp/cc5LhkN2.s:1670   .text.HAL_PWREx_DisablePVM2:0000000000000000 HAL_PWREx_DisablePVM2
     /tmp/cc5LhkN2.s:1704   .text.HAL_PWREx_DisablePVM2:000000000000001c $d
     /tmp/cc5LhkN2.s:1709   .text.HAL_PWREx_EnablePVM3:0000000000000000 $t
     /tmp/cc5LhkN2.s:1716   .text.HAL_PWREx_EnablePVM3:0000000000000000 HAL_PWREx_EnablePVM3
     /tmp/cc5LhkN2.s:1750   .text.HAL_PWREx_EnablePVM3:000000000000001c $d
     /tmp/cc5LhkN2.s:1755   .text.HAL_PWREx_DisablePVM3:0000000000000000 $t
     /tmp/cc5LhkN2.s:1762   .text.HAL_PWREx_DisablePVM3:0000000000000000 HAL_PWREx_DisablePVM3
     /tmp/cc5LhkN2.s:1796   .text.HAL_PWREx_DisablePVM3:000000000000001c $d
     /tmp/cc5LhkN2.s:1801   .text.HAL_PWREx_EnablePVM4:0000000000000000 $t
     /tmp/cc5LhkN2.s:1808   .text.HAL_PWREx_EnablePVM4:0000000000000000 HAL_PWREx_EnablePVM4
     /tmp/cc5LhkN2.s:1842   .text.HAL_PWREx_EnablePVM4:000000000000001c $d
     /tmp/cc5LhkN2.s:1847   .text.HAL_PWREx_DisablePVM4:0000000000000000 $t
     /tmp/cc5LhkN2.s:1854   .text.HAL_PWREx_DisablePVM4:0000000000000000 HAL_PWREx_DisablePVM4
     /tmp/cc5LhkN2.s:1888   .text.HAL_PWREx_DisablePVM4:000000000000001c $d
     /tmp/cc5LhkN2.s:1893   .text.HAL_PWREx_ConfigPVM:0000000000000000 $t
     /tmp/cc5LhkN2.s:1900   .text.HAL_PWREx_ConfigPVM:0000000000000000 HAL_PWREx_ConfigPVM
     /tmp/cc5LhkN2.s:2286   .text.HAL_PWREx_ConfigPVM:0000000000000294 $d
     /tmp/cc5LhkN2.s:2291   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 $t
     /tmp/cc5LhkN2.s:2298   .text.HAL_PWREx_EnableLowPowerRunMode:0000000000000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/cc5LhkN2.s:2332   .text.HAL_PWREx_EnableLowPowerRunMode:000000000000001c $d
     /tmp/cc5LhkN2.s:2337   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 $t
     /tmp/cc5LhkN2.s:2344   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/cc5LhkN2.s:2428   .text.HAL_PWREx_DisableLowPowerRunMode:0000000000000068 $d
     /tmp/cc5LhkN2.s:2435   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 $t
     /tmp/cc5LhkN2.s:2442   .text.HAL_PWREx_EnterSTOP0Mode:0000000000000000 HAL_PWREx_EnterSTOP0Mode
     /tmp/cc5LhkN2.s:2547   .text.HAL_PWREx_EnterSTOP0Mode:000000000000004c $d
     /tmp/cc5LhkN2.s:2553   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 $t
     /tmp/cc5LhkN2.s:2560   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/cc5LhkN2.s:2665   .text.HAL_PWREx_EnterSTOP1Mode:0000000000000050 $d
     /tmp/cc5LhkN2.s:2671   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 $t
     /tmp/cc5LhkN2.s:2678   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000000 HAL_PWREx_EnterSTOP2Mode
     /tmp/cc5LhkN2.s:2783   .text.HAL_PWREx_EnterSTOP2Mode:0000000000000050 $d
     /tmp/cc5LhkN2.s:2789   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 $t
     /tmp/cc5LhkN2.s:2796   .text.HAL_PWREx_EnterSHUTDOWNMode:0000000000000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/cc5LhkN2.s:2848   .text.HAL_PWREx_EnterSHUTDOWNMode:000000000000002c $d
     /tmp/cc5LhkN2.s:2854   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 $t
     /tmp/cc5LhkN2.s:2861   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/cc5LhkN2.s:2958   .text.HAL_PWREx_PVM1Callback:0000000000000000 HAL_PWREx_PVM1Callback
     /tmp/cc5LhkN2.s:2994   .text.HAL_PWREx_PVM2Callback:0000000000000000 HAL_PWREx_PVM2Callback
     /tmp/cc5LhkN2.s:3030   .text.HAL_PWREx_PVM3Callback:0000000000000000 HAL_PWREx_PVM3Callback
ARM GAS  /tmp/cc5LhkN2.s 			page 85


     /tmp/cc5LhkN2.s:3066   .text.HAL_PWREx_PVM4Callback:0000000000000000 HAL_PWREx_PVM4Callback
     /tmp/cc5LhkN2.s:2946   .text.HAL_PWREx_PVD_PVM_IRQHandler:0000000000000078 $d
     /tmp/cc5LhkN2.s:2951   .text.HAL_PWREx_PVM1Callback:0000000000000000 $t
     /tmp/cc5LhkN2.s:2987   .text.HAL_PWREx_PVM2Callback:0000000000000000 $t
     /tmp/cc5LhkN2.s:3023   .text.HAL_PWREx_PVM3Callback:0000000000000000 $t
     /tmp/cc5LhkN2.s:3059   .text.HAL_PWREx_PVM4Callback:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
