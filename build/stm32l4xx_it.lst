ARM GAS  /tmp/ccGpMk7z.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	pendsv_counter,4,4
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32l4xx_it.c"
   1:Src/stm32l4xx_it.c **** /**
   2:Src/stm32l4xx_it.c ****   ******************************************************************************
   3:Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   4:Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32l4xx_it.c ****   ******************************************************************************
   6:Src/stm32l4xx_it.c ****   *
   7:Src/stm32l4xx_it.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/stm32l4xx_it.c ****   *
   9:Src/stm32l4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32l4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32l4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32l4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32l4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32l4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32l4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32l4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32l4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32l4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32l4xx_it.c ****   *
  20:Src/stm32l4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32l4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32l4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32l4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32l4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32l4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32l4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32l4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32l4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32l4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32l4xx_it.c ****   *
ARM GAS  /tmp/ccGpMk7z.s 			page 2


  31:Src/stm32l4xx_it.c ****   ******************************************************************************
  32:Src/stm32l4xx_it.c ****   */
  33:Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32l4xx_it.c **** #include "stm32l4xx_hal.h"
  35:Src/stm32l4xx_it.c **** #include "stm32l4xx.h"
  36:Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  37:Src/stm32l4xx_it.c **** 
  38:Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32l4xx_it.c ****   #include "sst_port.h"
  40:Src/stm32l4xx_it.c **** int pendsv_counter;
  41:Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32l4xx_it.c **** 
  43:Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32l4xx_it.c **** extern TIM_HandleTypeDef htim2;
  45:Src/stm32l4xx_it.c **** extern UART_HandleTypeDef huart4;
  46:Src/stm32l4xx_it.c **** 
  47:Src/stm32l4xx_it.c **** /******************************************************************************/
  48:Src/stm32l4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  49:Src/stm32l4xx_it.c **** /******************************************************************************/
  50:Src/stm32l4xx_it.c **** 
  51:Src/stm32l4xx_it.c **** /**
  52:Src/stm32l4xx_it.c **** * @brief This function handles Non maskable interrupt.
  53:Src/stm32l4xx_it.c **** */
  54:Src/stm32l4xx_it.c **** void NMI_Handler(void)
  55:Src/stm32l4xx_it.c **** {
  29              		.loc 1 55 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 7, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
  56:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  57:Src/stm32l4xx_it.c **** 
  58:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  59:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  60:Src/stm32l4xx_it.c **** 
  61:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  62:Src/stm32l4xx_it.c **** }
  41              		.loc 1 62 0
  42 0004 00BF     		nop
  43 0006 BD46     		mov	sp, r7
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 13
  46              		@ sp needed
  47 0008 5DF8047B 		ldr	r7, [sp], #4
  48              	.LCFI3:
  49              		.cfi_restore 7
  50              		.cfi_def_cfa_offset 0
  51 000c 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE126:
ARM GAS  /tmp/ccGpMk7z.s 			page 3


  55              		.section	.text.HardFault_Handler,"ax",%progbits
  56              		.align	1
  57              		.global	HardFault_Handler
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv4-sp-d16
  63              	HardFault_Handler:
  64              	.LFB127:
  63:Src/stm32l4xx_it.c **** 
  64:Src/stm32l4xx_it.c **** /**
  65:Src/stm32l4xx_it.c **** * @brief This function handles Hard fault interrupt.
  66:Src/stm32l4xx_it.c **** */
  67:Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  68:Src/stm32l4xx_it.c **** {
  65              		.loc 1 68 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 80B4     		push	{r7}
  71              	.LCFI4:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 0002 00AF     		add	r7, sp, #0
  75              	.LCFI5:
  76              		.cfi_def_cfa_register 7
  77              	.L3:
  69:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  70:Src/stm32l4xx_it.c **** 
  71:Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  72:Src/stm32l4xx_it.c ****   while (1)
  78              		.loc 1 72 0 discriminator 1
  79 0004 FEE7     		b	.L3
  80              		.cfi_endproc
  81              	.LFE127:
  83              		.section	.text.MemManage_Handler,"ax",%progbits
  84              		.align	1
  85              		.global	MemManage_Handler
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  89              		.fpu fpv4-sp-d16
  91              	MemManage_Handler:
  92              	.LFB128:
  73:Src/stm32l4xx_it.c ****   {
  74:Src/stm32l4xx_it.c ****   }
  75:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  76:Src/stm32l4xx_it.c **** 
  77:Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  78:Src/stm32l4xx_it.c **** }
  79:Src/stm32l4xx_it.c **** 
  80:Src/stm32l4xx_it.c **** /**
  81:Src/stm32l4xx_it.c **** * @brief This function handles Memory management fault.
  82:Src/stm32l4xx_it.c **** */
  83:Src/stm32l4xx_it.c **** void MemManage_Handler(void)
  84:Src/stm32l4xx_it.c **** {
ARM GAS  /tmp/ccGpMk7z.s 			page 4


  93              		.loc 1 84 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98 0000 80B4     		push	{r7}
  99              	.LCFI6:
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              	.LCFI7:
 104              		.cfi_def_cfa_register 7
 105              	.L5:
  85:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  86:Src/stm32l4xx_it.c **** 
  87:Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  88:Src/stm32l4xx_it.c ****   while (1)
 106              		.loc 1 88 0 discriminator 1
 107 0004 FEE7     		b	.L5
 108              		.cfi_endproc
 109              	.LFE128:
 111              		.section	.text.BusFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	BusFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	BusFault_Handler:
 120              	.LFB129:
  89:Src/stm32l4xx_it.c ****   {
  90:Src/stm32l4xx_it.c ****   }
  91:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  92:Src/stm32l4xx_it.c **** 
  93:Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  94:Src/stm32l4xx_it.c **** }
  95:Src/stm32l4xx_it.c **** 
  96:Src/stm32l4xx_it.c **** /**
  97:Src/stm32l4xx_it.c **** * @brief This function handles Prefetch fault, memory access fault.
  98:Src/stm32l4xx_it.c **** */
  99:Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 100:Src/stm32l4xx_it.c **** {
 121              		.loc 1 100 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126 0000 80B4     		push	{r7}
 127              	.LCFI8:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 7, -4
 130 0002 00AF     		add	r7, sp, #0
 131              	.LCFI9:
 132              		.cfi_def_cfa_register 7
 133              	.L7:
 101:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 102:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccGpMk7z.s 			page 5


 103:Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 104:Src/stm32l4xx_it.c ****   while (1)
 134              		.loc 1 104 0 discriminator 1
 135 0004 FEE7     		b	.L7
 136              		.cfi_endproc
 137              	.LFE129:
 139              		.section	.text.UsageFault_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	UsageFault_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	UsageFault_Handler:
 148              	.LFB130:
 105:Src/stm32l4xx_it.c ****   {
 106:Src/stm32l4xx_it.c ****   }
 107:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 108:Src/stm32l4xx_it.c **** 
 109:Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 110:Src/stm32l4xx_it.c **** }
 111:Src/stm32l4xx_it.c **** 
 112:Src/stm32l4xx_it.c **** /**
 113:Src/stm32l4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 114:Src/stm32l4xx_it.c **** */
 115:Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 116:Src/stm32l4xx_it.c **** {
 149              		.loc 1 116 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154 0000 80B4     		push	{r7}
 155              	.LCFI10:
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 7, -4
 158 0002 00AF     		add	r7, sp, #0
 159              	.LCFI11:
 160              		.cfi_def_cfa_register 7
 161              	.L9:
 117:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 118:Src/stm32l4xx_it.c **** 
 119:Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 120:Src/stm32l4xx_it.c ****   while (1)
 162              		.loc 1 120 0 discriminator 1
 163 0004 FEE7     		b	.L9
 164              		.cfi_endproc
 165              	.LFE130:
 167              		.section	.text.SVC_Handler,"ax",%progbits
 168              		.align	1
 169              		.global	SVC_Handler
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv4-sp-d16
 175              	SVC_Handler:
 176              	.LFB131:
ARM GAS  /tmp/ccGpMk7z.s 			page 6


 121:Src/stm32l4xx_it.c ****   {
 122:Src/stm32l4xx_it.c ****   }
 123:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 124:Src/stm32l4xx_it.c **** 
 125:Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 126:Src/stm32l4xx_it.c **** }
 127:Src/stm32l4xx_it.c **** 
 128:Src/stm32l4xx_it.c **** /**
 129:Src/stm32l4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 130:Src/stm32l4xx_it.c **** */
 131:Src/stm32l4xx_it.c **** void SVC_Handler(void)
 132:Src/stm32l4xx_it.c **** {
 177              		.loc 1 132 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              	.LCFI12:
 184              		.cfi_def_cfa_offset 4
 185              		.cfi_offset 7, -4
 186 0002 00AF     		add	r7, sp, #0
 187              	.LCFI13:
 188              		.cfi_def_cfa_register 7
 133:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 134:Src/stm32l4xx_it.c **** 
 135:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 136:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 137:Src/stm32l4xx_it.c **** 
 138:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 139:Src/stm32l4xx_it.c **** }
 189              		.loc 1 139 0
 190 0004 00BF     		nop
 191 0006 BD46     		mov	sp, r7
 192              	.LCFI14:
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 0008 5DF8047B 		ldr	r7, [sp], #4
 196              	.LCFI15:
 197              		.cfi_restore 7
 198              		.cfi_def_cfa_offset 0
 199 000c 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE131:
 203              		.section	.text.DebugMon_Handler,"ax",%progbits
 204              		.align	1
 205              		.global	DebugMon_Handler
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	DebugMon_Handler:
 212              	.LFB132:
 140:Src/stm32l4xx_it.c **** 
 141:Src/stm32l4xx_it.c **** /**
 142:Src/stm32l4xx_it.c **** * @brief This function handles Debug monitor.
 143:Src/stm32l4xx_it.c **** */
ARM GAS  /tmp/ccGpMk7z.s 			page 7


 144:Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 145:Src/stm32l4xx_it.c **** {
 213              		.loc 1 145 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI16:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 00AF     		add	r7, sp, #0
 223              	.LCFI17:
 224              		.cfi_def_cfa_register 7
 146:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 147:Src/stm32l4xx_it.c **** 
 148:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 149:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 150:Src/stm32l4xx_it.c **** 
 151:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 152:Src/stm32l4xx_it.c **** }
 225              		.loc 1 152 0
 226 0004 00BF     		nop
 227 0006 BD46     		mov	sp, r7
 228              	.LCFI18:
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0008 5DF8047B 		ldr	r7, [sp], #4
 232              	.LCFI19:
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 000c 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE132:
 239              		.section	.text.PendSV_Handler,"ax",%progbits
 240              		.align	1
 241              		.global	PendSV_Handler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 245              		.fpu fpv4-sp-d16
 247              	PendSV_Handler:
 248              	.LFB133:
 153:Src/stm32l4xx_it.c **** 
 154:Src/stm32l4xx_it.c **** /**
 155:Src/stm32l4xx_it.c **** * @brief This function handles Pendable request for system service.
 156:Src/stm32l4xx_it.c **** */
 157:Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 158:Src/stm32l4xx_it.c **** {
 249              		.loc 1 158 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253 0000 80B5     		push	{r7, lr}
 254              	.LCFI20:
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
ARM GAS  /tmp/ccGpMk7z.s 			page 8


 257              		.cfi_offset 14, -4
 258 0002 00AF     		add	r7, sp, #0
 259              	.LCFI21:
 260              		.cfi_def_cfa_register 7
 159:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 160:Src/stm32l4xx_it.c **** pendsv_counter++;
 261              		.loc 1 160 0
 262 0004 054B     		ldr	r3, .L13
 263 0006 1B68     		ldr	r3, [r3]
 264 0008 0133     		adds	r3, r3, #1
 265 000a 044A     		ldr	r2, .L13
 266 000c 1360     		str	r3, [r2]
 267              	.LBB6:
 268              	.LBB7:
 269              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  /tmp/ccGpMk7z.s 			page 9


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 270              		.loc 2 71 0
 271              		.syntax unified
 272              	@ 71 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 273 000e 72B6     		cpsid i
 274              	@ 0 "" 2
 275              		.thumb
 276              		.syntax unified
 277              	.LBE7:
 278              	.LBE6:
 161:Src/stm32l4xx_it.c ****   SST_INT_LOCK();
 162:Src/stm32l4xx_it.c ****   SST_schedule_();
 279              		.loc 1 162 0
 280 0010 FFF7FEFF 		bl	SST_schedule_
 281              	.LBB8:
 282              	.LBB9:
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 283              		.loc 2 60 0
 284              		.syntax unified
 285              	@ 60 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 286 0014 62B6     		cpsie i
 287              	@ 0 "" 2
 288              		.thumb
 289              		.syntax unified
 290              	.LBE9:
 291              	.LBE8:
 163:Src/stm32l4xx_it.c ****   SST_INT_UNLOCK();
 164:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 165:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
ARM GAS  /tmp/ccGpMk7z.s 			page 10


 166:Src/stm32l4xx_it.c **** 
 167:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 168:Src/stm32l4xx_it.c **** }
 292              		.loc 1 168 0
 293 0016 00BF     		nop
 294 0018 80BD     		pop	{r7, pc}
 295              	.L14:
 296 001a 00BF     		.align	2
 297              	.L13:
 298 001c 00000000 		.word	pendsv_counter
 299              		.cfi_endproc
 300              	.LFE133:
 302              		.section	.text.SysTick_Handler,"ax",%progbits
 303              		.align	1
 304              		.global	SysTick_Handler
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 308              		.fpu fpv4-sp-d16
 310              	SysTick_Handler:
 311              	.LFB134:
 169:Src/stm32l4xx_it.c **** 
 170:Src/stm32l4xx_it.c **** /**
 171:Src/stm32l4xx_it.c **** * @brief This function handles System tick timer.
 172:Src/stm32l4xx_it.c **** */
 173:Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 174:Src/stm32l4xx_it.c **** {
 312              		.loc 1 174 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 80B5     		push	{r7, lr}
 317              	.LCFI22:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 00AF     		add	r7, sp, #0
 322              	.LCFI23:
 323              		.cfi_def_cfa_register 7
 175:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 176:Src/stm32l4xx_it.c **** 
 177:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 178:Src/stm32l4xx_it.c ****   HAL_IncTick();
 324              		.loc 1 178 0
 325 0004 FFF7FEFF 		bl	HAL_IncTick
 179:Src/stm32l4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 326              		.loc 1 179 0
 327 0008 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 180:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 181:Src/stm32l4xx_it.c **** 
 182:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 183:Src/stm32l4xx_it.c **** }
 328              		.loc 1 183 0
 329 000c 00BF     		nop
 330 000e 80BD     		pop	{r7, pc}
 331              		.cfi_endproc
 332              	.LFE134:
ARM GAS  /tmp/ccGpMk7z.s 			page 11


 334              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 335              		.align	1
 336              		.global	TIM2_IRQHandler
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	TIM2_IRQHandler:
 343              	.LFB135:
 184:Src/stm32l4xx_it.c **** 
 185:Src/stm32l4xx_it.c **** /******************************************************************************/
 186:Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 187:Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 188:Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 189:Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 190:Src/stm32l4xx_it.c **** /******************************************************************************/
 191:Src/stm32l4xx_it.c **** 
 192:Src/stm32l4xx_it.c **** /**
 193:Src/stm32l4xx_it.c **** * @brief This function handles TIM2 global interrupt.
 194:Src/stm32l4xx_it.c **** */
 195:Src/stm32l4xx_it.c **** void TIM2_IRQHandler(void)
 196:Src/stm32l4xx_it.c **** {
 344              		.loc 1 196 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              	.LCFI24:
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 00AF     		add	r7, sp, #0
 354              	.LCFI25:
 355              		.cfi_def_cfa_register 7
 197:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 198:Src/stm32l4xx_it.c **** 
 199:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 200:Src/stm32l4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 356              		.loc 1 200 0
 357 0004 0248     		ldr	r0, .L17
 358 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 201:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 202:Src/stm32l4xx_it.c **** 
 203:Src/stm32l4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 204:Src/stm32l4xx_it.c **** }
 359              		.loc 1 204 0
 360 000a 00BF     		nop
 361 000c 80BD     		pop	{r7, pc}
 362              	.L18:
 363 000e 00BF     		.align	2
 364              	.L17:
 365 0010 00000000 		.word	htim2
 366              		.cfi_endproc
 367              	.LFE135:
 369              		.section	.text.UART4_IRQHandler,"ax",%progbits
 370              		.align	1
 371              		.global	UART4_IRQHandler
ARM GAS  /tmp/ccGpMk7z.s 			page 12


 372              		.syntax unified
 373              		.thumb
 374              		.thumb_func
 375              		.fpu fpv4-sp-d16
 377              	UART4_IRQHandler:
 378              	.LFB136:
 205:Src/stm32l4xx_it.c **** 
 206:Src/stm32l4xx_it.c **** /**
 207:Src/stm32l4xx_it.c **** * @brief This function handles UART4 global interrupt.
 208:Src/stm32l4xx_it.c **** */
 209:Src/stm32l4xx_it.c **** void UART4_IRQHandler(void)
 210:Src/stm32l4xx_it.c **** {
 379              		.loc 1 210 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              	.LCFI26:
 385              		.cfi_def_cfa_offset 8
 386              		.cfi_offset 7, -8
 387              		.cfi_offset 14, -4
 388 0002 00AF     		add	r7, sp, #0
 389              	.LCFI27:
 390              		.cfi_def_cfa_register 7
 211:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 0 */
 212:Src/stm32l4xx_it.c **** 
 213:Src/stm32l4xx_it.c ****   /* USER CODE END UART4_IRQn 0 */
 214:Src/stm32l4xx_it.c ****   HAL_UART_IRQHandler(&huart4);
 391              		.loc 1 214 0
 392 0004 0248     		ldr	r0, .L20
 393 0006 FFF7FEFF 		bl	HAL_UART_IRQHandler
 215:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UART4_IRQn 1 */
 216:Src/stm32l4xx_it.c **** 
 217:Src/stm32l4xx_it.c ****   /* USER CODE END UART4_IRQn 1 */
 218:Src/stm32l4xx_it.c **** }
 394              		.loc 1 218 0
 395 000a 00BF     		nop
 396 000c 80BD     		pop	{r7, pc}
 397              	.L21:
 398 000e 00BF     		.align	2
 399              	.L20:
 400 0010 00000000 		.word	huart4
 401              		.cfi_endproc
 402              	.LFE136:
 404              		.text
 405              	.Letext0:
 406              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 407              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 408              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 409              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 410              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 411              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 412              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 413              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 414              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 415              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 416              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
ARM GAS  /tmp/ccGpMk7z.s 			page 13


 417              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 418              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 419              		.file 16 "Inc/uintx.h"
 420              		.file 17 "Inc/semaphore.h"
 421              		.file 18 "Inc/mailbox.h"
 422              		.file 19 "Inc/sst.h"
ARM GAS  /tmp/ccGpMk7z.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_it.c
                            *COM*:0000000000000004 pendsv_counter
     /tmp/ccGpMk7z.s:19     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccGpMk7z.s:56     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:63     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccGpMk7z.s:84     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:91     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccGpMk7z.s:112    .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:119    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccGpMk7z.s:140    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:147    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccGpMk7z.s:168    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:175    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccGpMk7z.s:204    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:211    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccGpMk7z.s:240    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:247    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccGpMk7z.s:298    .text.PendSV_Handler:000000000000001c $d
     /tmp/ccGpMk7z.s:303    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccGpMk7z.s:310    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccGpMk7z.s:335    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/ccGpMk7z.s:342    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/ccGpMk7z.s:365    .text.TIM2_IRQHandler:0000000000000010 $d
     /tmp/ccGpMk7z.s:370    .text.UART4_IRQHandler:0000000000000000 $t
     /tmp/ccGpMk7z.s:377    .text.UART4_IRQHandler:0000000000000000 UART4_IRQHandler
     /tmp/ccGpMk7z.s:400    .text.UART4_IRQHandler:0000000000000010 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SST_schedule_
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_TIM_IRQHandler
htim2
HAL_UART_IRQHandler
huart4
